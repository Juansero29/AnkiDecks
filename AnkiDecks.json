{
    "__type__": "Deck", 
    "children": [
        {
            "__type__": "Deck", 
            "children": [
                {
                    "__type__": "Deck", 
                    "children": [
                        {
                            "__type__": "Deck", 
                            "children": [
                                {
                                    "__type__": "Deck", 
                                    "children": [], 
                                    "crowdanki_uuid": "a6a24430-6d5b-11e6-adf3-8c705a50cbf0", 
                                    "deck_config_uuid": "a69dd698-6d5b-11e6-adf3-8c705a50cbf0", 
                                    "desc": "Please see the <a href='https://ankiweb.net/shared/info/'>shared deck page</a> for more info.", 
                                    "dyn": 0, 
                                    "extendNew": 1, 
                                    "extendRev": 50, 
                                    "media_files": [], 
                                    "mid": "1467568254113", 
                                    "name": "Commands", 
                                    "notes": [
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command will <b>initialize a new, empty repository</b> in the current working directory?", 
                                                "<pre>git init</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "vd<-:IY:nA", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What command is used to configure the local user's email (\"email\"), that are used when committing to Git repositories?", 
                                                "<pre><span style=\"font-family: Arial\">git config --global user.email \"email\"</span></pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "Oy*>$5ZF=,", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What does this command do:&nbsp;<b>git add . &nbsp;</b>", 
                                                "It adds everything inside the current working directory to the index."
                                            ], 
                                            "flags": 0, 
                                            "guid": "bFER[=-<|E", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which commands are needed to <b>add</b> <b>all .js files </b>to the local Git repository?", 
                                                "<pre>git add *.js</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "ybvT<[dy(K", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command will <b>commit</b> to the local repository, including a <b>commit message </b>(\"message\")?", 
                                                "<pre>git commit -m \"message\"</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "db&Hk]Np30", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command prints&nbsp;&nbsp;the <b>current state</b> of your code/repository?", 
                                                "<pre style=\"text-align: justify;\">git status</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "yl]3.#F=wd", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which Git command is used to <b>list the existing branches</b>?", 
                                                "<pre>git branch</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "xx=?AKe[yR", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command <b>creates</b> a new branch (\"branchname\")?", 
                                                "<pre>git branch branchname</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "P~gJ-(ZRpb", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command will switch to the branch \"myotherbranch\"?", 
                                                "<pre style=\"line-height: 25px;\">git checkout myotherbranch</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "A;K+h*%{g+", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What commands will join everything from the branch \"bigIdea\" to be part of the \"master\" branch?", 
                                                "<pre>git checkout master</pre>\n<pre>git merge bigIdea</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "xj?aKvn]u;", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command will delete (even) an unmerged branch (\"branchname\")?", 
                                                "git branch -D branchname"
                                            ], 
                                            "flags": 0, 
                                            "guid": "cy@|.4O)Rb", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command displays the existing <b>global Git settings</b>?<br />", 
                                                "<pre>git config --list</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "gCNrkn8>}D", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command shows<b> commit logs </b>(list of all commits, starting with newest)?<br />", 
                                                "<pre>git log</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "F.SR4G,Gfi", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command displays all <b>changes to tracked files since the last commit</b>?<br />", 
                                                "<pre>git diff</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "gz>^p#~9is", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command displays the changes in a <b>specific commit </b>(\"commitid\")?", 
                                                "<pre>git show commitid</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "Km<`;Sy=)R", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command displays the <b>change history</b> of a specific file (\"filename\")?", 
                                                "<pre>git log filename</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "c|}&67Vq<k", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command displays which commit and author modified a file (\"filename\") on a line by line basis?", 
                                                "<pre>git blame filename</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "zhQu]56^%W", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command deletes a file (\"filename\")&nbsp;from the working directory and at the same time marks it for the next commit?<br />", 
                                                "<pre>git rm filename</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "jPCDaOPH-e", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command displays the existing defined <b>remote repositories</b>?<br />", 
                                                "<pre>git remote</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "BW0mPtV2np", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command <b>cleans</b>&nbsp;untracked changes in the working directory?", 
                                                "<pre>git clean -f</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "tLncJ/l5g8", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "How can you <b>revert a deleted or changed file </b>(\"filename\")<b> that has not yet been added to the index</b>?<br />", 
                                                "git checkout filename"
                                            ], 
                                            "flags": 0, 
                                            "guid": "fB~P#a9Rr9", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "How can you checkout older revisions of your source code (revision \"commitid\")?<br />", 
                                                "git checkout commitid"
                                            ], 
                                            "flags": 0, 
                                            "guid": "mO83Khi,Bp", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command removes an added file (\"filename\") from the index again?<br />", 
                                                "<pre>git reset filename</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "r9_$:6`{&]", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "How can all changes of a commit (\"commitid\") be reverted and a new commit be recorded, which documents that the other commit was reverted?<br />", 
                                                "<pre>git revert commitid</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "IkdEc`A5@C", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command lists the <b>available tags</b>?<br />", 
                                                "<pre>git tag</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "C%6YFoMT|@", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command creates a <b>new tag </b>(\"tagname\") <b>with a description&nbsp;</b>(description)?", 
                                                "<pre>git tag tagname -m 'description'</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "QXr(!z{!JN", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command will <b>check out a specific tag </b>(\"tagname\")?", 
                                                "<pre>git checkout tagname</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "px*W<u78A!", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command / parameter <b>lists all branches, including remote</b> branches?", 
                                                "<pre>git branch -a</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "Lh{-~`~T,3", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command <b>creates a new branch </b>(branchname)<b> and switches to it</b>?", 
                                                "git checkout -b branchname"
                                            ], 
                                            "flags": 0, 
                                            "guid": "M|AX8qt~>O", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command would <b>delete </b>the local \"testing\" branch (if it is merged)?<br />", 
                                                "<pre>git branch -d testing</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "E$0ONs0VO;", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command <b>merges differences</b> of the \"testing\" branch into the current active branch?<br />", 
                                                "<pre>git merge testing</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "BX2UBkW5(_", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which default Git tool exists for <b>resolving conflicts</b>, which command starts it?<br />", 
                                                "git mergetool"
                                            ], 
                                            "flags": 0, 
                                            "guid": "wV]w?R>lcp", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command would <b>start interactive rebase </b>of the last seven commits?", 
                                                "<pre>git rebase -i HEAD~7</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "rYX3zdLiLv", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command displays <b>which commit deleted a specific file </b>(\"filename\")?<br />", 
                                                "<pre>git log -- filename</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "qT8-CD>aCh", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is the <b>--</b> option in <b>git log</b>&nbsp;used for?<br />", 
                                                "To see the commit history for a file, even if the file has been deleted.<br />"
                                            ], 
                                            "flags": 0, 
                                            "guid": "en>uh_WPEG", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command will define an alias \"add-commit\", which<br />                  combines<br /> <b>git add . -A</b><br />                  and<br /> <b>git commit</b>?", 
                                                "<pre class=\"programlisting\">git config --global alias.add-commit <span class=\"hl-string\">'!git add . -A &amp;&amp; git commit'</span></pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "v4!4YvMOyH", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What does the command do: <b>git reset --soft HEAD~</b>", 
                                                "Undo the last commit. The affected files will be back on stage again."
                                            ], 
                                            "flags": 0, 
                                            "guid": "Bb9(y,?O!N", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What does <b>git reset --hard HEAD~</b>&nbsp;do? (instead of HEAD~ it could be also a commit SHA-1 or another reference)", 
                                                "Undo the last commit, unstage files AND undo any changes in the working directory. (Not tracked files won't be affected)"
                                            ], 
                                            "flags": 0, 
                                            "guid": "e?#@Ae7yYi", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which parameter allows you to <b>stage an ignored file</b>?", 
                                                "<pre>--force</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "t#C`2kFJh%", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which Git command <b>newly stages a specific file </b>(\"filename\")?", 
                                                "<pre>git add filename</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "F9hBmh|l1!", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command will <b>undo the checking-in of an unwanted change </b>in a file \"filename\"&nbsp;(remove the respective file from the index), but keep the changes in the filesystem?", 
                                                "<pre>git reset filename</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "K&{Me3,SpN", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is the difference between:<br><pre>git checkout -f</pre> and <pre>git reset --hard HEAD</pre>?", 
                                                "None, with these parameters they do exactly the same."
                                            ], 
                                            "flags": 0, 
                                            "guid": "v*,Ks", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Remove main.txt from staging but keep in working (untrack file, after this and commit file would be remove from repo)", 
                                                "git rm --cached main.txt"
                                            ], 
                                            "flags": 0, 
                                            "guid": "Q+7&uzQT|w", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command / parameter changes the message of the last commit? (for \"newmessage\")<br />", 
                                                "<code>git commit --amend -m \"newmessage\"</code><br />"
                                            ], 
                                            "flags": 0, 
                                            "guid": "PI~KTfs,vb", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Clone an existing repository (address: \"url\")", 
                                                "git clone url"
                                            ], 
                                            "flags": 0, 
                                            "guid": "G82n[7RC-w", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Create a new local repository", 
                                                "git init"
                                            ], 
                                            "flags": 0, 
                                            "guid": "q@#s*s3u]g", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Add some (allows you interactively to choose which) changes in <i>file</i> to the next commit", 
                                                "git add -p <i>file</i>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "PMP7kE]98_", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Commit all local changes in tracked files", 
                                                "git commit -a"
                                            ], 
                                            "flags": 0, 
                                            "guid": "u.R(/o`lN5", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Commit previously staged changes", 
                                                "git commit"
                                            ], 
                                            "flags": 0, 
                                            "guid": "CD?#JCMZQT", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Change the last commit [only before pushing]", 
                                                "git commit --amend"
                                            ], 
                                            "flags": 0, 
                                            "guid": "AuqfF!TJF|", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Show changes over time (diffs) for a specific file (\"filename\")", 
                                                "git log -p <i>filename</i>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "LXatc~.8(T", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Switch HEAD to <i>branch</i>", 
                                                "git checkout<i>&nbsp;branch</i>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "oQvc(-wSfJ", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Create a new branch (name \"nbranch\") based on current HEAD", 
                                                "git branch n<i>branch</i>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "D@AO#)N}^n", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Create a new tracking branch (\"tbranch\") based on a remote branch (\"rbranch\")", 
                                                "git branch --track t<i>branch</i> <i>rbranch</i>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "iSDwh!LidQ", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Delete a local branch (\"branch\")", 
                                                "git branch -d <i>branch</i>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "kFL]Z[c?WW", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Mark the current commit with a tag (\"tagname\")", 
                                                "git tag <i>tagname</i>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "s!ZB.hS(-G", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Show information about a remote&nbsp;(\"origin\")", 
                                                "git remote show <i>origin</i>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "tF=*UV)5N=", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Add remote server 'url' with shortname 'myurl'", 
                                                "git remote add myurl url"
                                            ], 
                                            "flags": 0, 
                                            "guid": "HoFoQWIJch", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Download all changes from <i>remote&nbsp;</i>(\"origin\")&nbsp;but don't integrate into HEAD", 
                                                "git fetch <i>origin</i>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "fANXqT[p/F", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Download changes from remote&nbsp;(\"origin\")&nbsp;branch \"branch\" and directly merge into HEAD", 
                                                "git pull <i>origin</i> <i>branch</i>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "u82$&koLO+", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Publish local changes (for a branch \"branch\") on a remote (\"origin\")", 
                                                "git push <i>origin</i>&nbsp;<i>branch</i>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "Ln4&)EH3[6", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Delete a \"branch\" on the remote&nbsp;(\"origin\") (old way)", 
                                                "git push <i>origin</i>&nbsp;:<i>branch</i>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "b:dG)*p%)g", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Publish your tags", 
                                                "git push --tags"
                                            ], 
                                            "flags": 0, 
                                            "guid": "lapc;rQKP$", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Merge <i>branch</i> into your current HEAD", 
                                                "git merge <i>branch</i>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "AKq80IBb}P", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Rebase your current HEAD onto <i>branch</i>", 
                                                "git rebase <i>branch</i>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "J<:a=e?`oZ", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Abort a rebase", 
                                                "git rebase --abort"
                                            ], 
                                            "flags": 0, 
                                            "guid": "Q8k(Cko^;c", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Continue a rebase after resolving conflicts", 
                                                "git rebase --continue"
                                            ], 
                                            "flags": 0, 
                                            "guid": "P}-RgapC#;", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Use your configured merge tool to solve conflicts", 
                                                "git mergetool"
                                            ], 
                                            "flags": 0, 
                                            "guid": "ktUT0Y8n@/", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Use your editor to manually solve conflicts during merge/rebase and after resolving mark file as resolved with:", 
                                                "git add <i>resolved-file or</i><div>git rm <i>resolved-file</i></div>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "x:&=qX<?g[", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "uncertain"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Discard all local changes in working directory", 
                                                "git reset --hard HEAD"
                                            ], 
                                            "flags": 0, 
                                            "guid": "z4bjQlX^a)", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Discard local changes in a specific file (\"filename\")", 
                                                "git checkout&nbsp;<i>filename</i>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "AiXZD7qnCt", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Reset your HEAD pointer to some previous <i>commit</i> (and discard all changes since then)", 
                                                "git reset --hard <i>commit</i>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "i[4p_Cw|hU", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Reset your HEAD pointer to some previous commit, and preserve all changes as unstaged changes", 
                                                "git reset <i>commit</i>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "f.*![R]E|?", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Reset your HEAD pointer to some previous commit (\"commit\") and preserve uncommited local changes", 
                                                "git reset --keep <i>commit</i>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "R|LmdnJ,y", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What tool is used to get and set configuration variables that control how git looks and operates?", 
                                                "git config"
                                            ], 
                                            "flags": 0, 
                                            "guid": "fxZQIT(,(b", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What .gitignore pattern would you use to ignore all .txt files in the doc folder?", 
                                                "doc/**/*.txt"
                                            ], 
                                            "flags": 0, 
                                            "guid": "EADNWO/y%=", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "How can you skip the staging area for modified, tracked files when doing a commit?", 
                                                "git commit -a"
                                            ], 
                                            "flags": 0, 
                                            "guid": "v].?TQ-:3w", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "How do you delete a <i>file</i> that has been modified and already added to the staging area?", 
                                                "git rm -f file"
                                            ], 
                                            "flags": 0, 
                                            "guid": "t-q}2tG:=X", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "How do you rename or move a file in git (\"src\" to \"target\")?", 
                                                "git mv src target"
                                            ], 
                                            "flags": 0, 
                                            "guid": "hwwyi_%Pd8", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What are some of the options to view the commit log history in different formats?", 
                                                "--pretty=[oneline | short | full | fuller]<div>--pretty=format:\"...\"</div>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "mqXLAB~pFz", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "How do you view the history for author jdoe with keyword potato in the commit message made in the last two weeks that added or removed a reference to the function mashThePotato that were not merges?", 
                                                "git log --author jdoe --grep potato --all-match -SmashThePotato --since=2.weeks --no-merges"
                                            ], 
                                            "flags": 0, 
                                            "guid": "eh}B.z/n^;", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Why is git reset considered safe without \"--hard\" option?", 
                                                "It only affects your staging area"
                                            ], 
                                            "flags": 0, 
                                            "guid": "JC%^;+L+{p", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "How do you tag revision 0123abc with the name v1.0?", 
                                                "git tag v1.0 0123abc"
                                            ], 
                                            "flags": 0, 
                                            "guid": "wi-I)r_kC{", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What happens if you try to delete a branch with \"git branch -d &lt;name&gt;\" that has not yet been merged?", 
                                                "It will fail, and offer -D if you really want to lose your branch."
                                            ], 
                                            "flags": 0, 
                                            "guid": "u)(3>G(PkD", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "If you want to use a different name than \"origin\" (eg \"norig\") for the remote when cloning a repository (\"repo\"), what parameter would you use?<br />", 
                                                "git clone -o norig repo<br />"
                                            ], 
                                            "flags": 0, 
                                            "guid": "ce?E649%xX", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "How would you share a local branch called \"badname\" as \"goodname\" on a remote called \"origin\"?<br>", 
                                                "git push origin badname:goodname<br>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "K7n]nn1&|k", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "How would you set up a credential cache so that you don't have to keep typing your password for git push?", 
                                                "git config --global credential.helper cache"
                                            ], 
                                            "flags": 0, 
                                            "guid": "p2[Clw3O~<", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "If you have a local branch and you want it to use a remote branch (say origin/hotfix) as upstream, how would you set it?", 
                                                "git branch -u origin/hotfix"
                                            ], 
                                            "flags": 0, 
                                            "guid": "m8|o{YV!nU", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "How do you see what tracking branches you have set up?", 
                                                "git branch -vv"
                                            ], 
                                            "flags": 0, 
                                            "guid": "LRM3~SSVl%", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "How would you delete a remote branch (\"serverfix\") from the server (\"origin\")?", 
                                                "git push origin --delete serverfix"
                                            ], 
                                            "flags": 0, 
                                            "guid": "Igy_c!s=?[", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "How would you use rebase to apply master changes to branch b1, then apply b1 changes to master? The result being a linear history.", 
                                                "<div># method: 1</div>git checkout b1<div>git rebase master</div><div>git checkout master</div><div>git merge b1</div><div><br></div><div># method: 2</div><div>git rebase b1 master</div><div>git checkout master</div><div>git merge b1</div>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "BU,]d;k1vy", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "If you have changes on commits that no longer exist upstream (due to a remote rebase), how can you pull in those changes and avoid conflicts that would happen with git pull origin/master?", 
                                                "<div>git pull --rebase origin/master</div>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "r&Du}9yV]>", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What are limitations of the command that changes the message of the last commit (<span style=\"font-family: monospace\">git commit --amend</span>)?", 
                                                "It only works before the commit has been pushed to remote repo."
                                            ], 
                                            "flags": 0, 
                                            "guid": "p}K},k:N*K", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What command is used to configure the local user's name (\"Name\"), that are used when committing to Git repositories?", 
                                                "<pre>git config --global user.name \"Name\"</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "tc$Es;:D1%", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Show what file would be delited with \"git clean\" (dry run)", 
                                                "git clean -n"
                                            ], 
                                            "flags": 0, 
                                            "guid": "e%>lbo,!2:", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What option should you add to \"git clean\" in order to remove untracked directories", 
                                                "-d"
                                            ], 
                                            "flags": 0, 
                                            "guid": "Q`Z}4EnZK~", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What option should you add to \"git clean\" in order to remove \"ignored\" files", 
                                                "-x"
                                            ], 
                                            "flags": 0, 
                                            "guid": "dk~4Dx5y5N", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which command will&nbsp;<b>show the entire history (</b>including renames<b>)&nbsp;</b>for the file (\"filename\")?", 
                                                "<pre>git log --follow -p filename</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "k`%2n:=CjO", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "<b>Create a stash</b>&nbsp;with uncommitted changes (analogous to save uncommited changes, and do reset hard)", 
                                                "git stash"
                                            ], 
                                            "flags": 0, 
                                            "guid": "ez-t2N[Xx1", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell", 
                                                "stash"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "<b>Reapply the stashed changes</b>&nbsp;<b>and</b>&nbsp;<b>delete the stash&nbsp;</b>from the list of stashes", 
                                                "git stash pop"
                                            ], 
                                            "flags": 0, 
                                            "guid": "h?w8D]L^FH", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell", 
                                                "stash"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "<b>Reapply the stashed changes</b>&nbsp;without deleting<b>&nbsp;stash&nbsp;</b>from the list of stashes", 
                                                "git stash apply"
                                            ], 
                                            "flags": 0, 
                                            "guid": "s]W5g${#u#", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell", 
                                                "stash"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Show git stash stack (list of stashes)", 
                                                "git stash list"
                                            ], 
                                            "flags": 0, 
                                            "guid": "Pd,w:x7/_-", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell", 
                                                "stash"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Show branches already merged into current branch", 
                                                "git branch --merged"
                                            ], 
                                            "flags": 0, 
                                            "guid": "r6fVPW{|To", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Show branches not yet merged into current branch", 
                                                "git branch --no-merged"
                                            ], 
                                            "flags": 0, 
                                            "guid": "c@|3gg#;C]", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Rebase master onto develop without checking it out", 
                                                "git rebase master develop"
                                            ], 
                                            "flags": 0, 
                                            "guid": "zi:*@|txPH", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Show remote servers with URL displayed", 
                                                "git remote -v"
                                            ], 
                                            "flags": 0, 
                                            "guid": "B*+[Z2P7KB", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Rename remote 'server1' to 'server2'", 
                                                "git remote rename server1 server2"
                                            ], 
                                            "flags": 0, 
                                            "guid": "ti2E88+S5G", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Remove remote 'server1'", 
                                                "git remote rm server1"
                                            ], 
                                            "flags": 0, 
                                            "guid": "NeFQQhW5^#", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Show last two commits with diffs", 
                                                "git log -p -2"
                                            ], 
                                            "flags": 0, 
                                            "guid": "jEwY}^Te}u", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Show commit logs with stats", 
                                                "git log --stat"
                                            ], 
                                            "flags": 0, 
                                            "guid": "8.]Jh.QO$", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "<div>Show commit logs one per line</div>", 
                                                "git log --pretty=oneline"
                                            ], 
                                            "flags": 0, 
                                            "guid": "Nt[d(Wa#l9", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Show commit logs with ascii graph", 
                                                "git log --graph"
                                            ], 
                                            "flags": 0, 
                                            "guid": "N3Nv.H3g;i", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Show commit log for the last week", 
                                                "git log --since=1.week"
                                            ], 
                                            "flags": 0, 
                                            "guid": "K9W#BB4D6c", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "<div>Show prev commits for each lines 10-15 of file.rb</div>", 
                                                "git blame -L 10,15 file.rb"
                                            ], 
                                            "flags": 0, 
                                            "guid": "DpA{?G=4xx", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Reapply stash 2", 
                                                "git stash apply stash@{2}"
                                            ], 
                                            "flags": 0, 
                                            "guid": "ASur]9.2r1", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Reapply stashed changes along with the changes in index (staging the changes, for example)", 
                                                "git stash apply --index"
                                            ], 
                                            "flags": 0, 
                                            "guid": "z0v]ev^m&4", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Drop stash 2", 
                                                "git stash drop stash@{2}"
                                            ], 
                                            "flags": 0, 
                                            "guid": "K?U.M_8qGm", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Create branch 'mybranch' from stash", 
                                                "git stash branch mybranch"
                                            ], 
                                            "flags": 0, 
                                            "guid": "frj9MIHYN;", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Delete all stashes", 
                                                "git stash clear"
                                            ], 
                                            "flags": 0, 
                                            "guid": "vMkxJ_N}WR", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Show what's staged but not yet committed", 
                                                "git diff --staged"
                                            ], 
                                            "flags": 0, 
                                            "guid": "C=%4u;E{qS", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Start binary search of commits to find bad commit", 
                                                "git bisect start"
                                            ], 
                                            "flags": 0, 
                                            "guid": "I;|,m~EPM+", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Mark current commit as broken during bisect", 
                                                "git bisect bad"
                                            ], 
                                            "flags": 0, 
                                            "guid": "snS(|j2h+c", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "<div>Mark current commit as good during bisect</div>", 
                                                "git bisect good"
                                            ], 
                                            "flags": 0, 
                                            "guid": "nV[EjN,:@f", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Mark v2.2 as last known good commit during bisect (beginning of binary search)", 
                                                "git bisect good v2.2"
                                            ], 
                                            "flags": 0, 
                                            "guid": "B&(BK&(f`i", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "How do you initiate bisect algorithm in git (several commands)", 
                                                "<div><div>Suppose you are trying to find the commit that broke a feature that was known to work in version v2.6.13-rc2 of your project. You start a bisect session as follows:</div><div><br /></div><div>$ git bisect start</div><div>$ git bisect bad # Current version is bad</div><div>$ git bisect good v2.6.13-rc2 # v2.6.13-rc2 is known to be good</div></div><div><br /></div><a href=\"https://git-scm.com/docs/git-bisect\">https://git-scm.com/docs/git-bisect</a>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "z+Mb^@:H2B", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Reset to original&nbsp;HEAD when finished with bisect", 
                                                "git bisect reset"
                                            ], 
                                            "flags": 0, 
                                            "guid": "zT>)P:<]^A", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Run 'test.sh' on each commit during bisect (automates designation of commit as \"good\" or \"bad\")", 
                                                "git bisect run test.sh"
                                            ], 
                                            "flags": 0, 
                                            "guid": "P375+&ZLLM", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Search the working directory for \"foo()\"", 
                                                "git grep \"foo()\""
                                            ], 
                                            "flags": 0, 
                                            "guid": "w/@P4=C{XI", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "View all the merge conflicts (if your working tree is in corresponding state)", 
                                                "git diff"
                                            ], 
                                            "flags": 0, 
                                            "guid": "goZxIb4w*t", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "See differences between two commits (\"commitid1\", \"commitid2\")", 
                                                "git diff commitid1 commitid2"
                                            ], 
                                            "flags": 0, 
                                            "guid": "wb7|*(on45", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "See the files (only filenames) changed between two commits (\"commitid1\", \"commitid2\")", 
                                                "git diff&nbsp;--name-only&nbsp;commitid1 commitid2&nbsp;"
                                            ], 
                                            "flags": 0, 
                                            "guid": "D-cA<mm5S>", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Undo non-pushed commits (if you are tracking branch origin/master)", 
                                                "git reset origin/master"
                                            ], 
                                            "flags": 0, 
                                            "guid": "j+p@19O^.m", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Apply a patch (\"patchname.patch\")", 
                                                "<div>git apply -v patchname.patch</div>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "nsS,t6r6k~", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Re-checkout file (\"filename\") or files specified by path to version specified by <i>rev</i> (which may be specified using a SHA1 commit ID, branch name, or tag), overwriting any local changes.", 
                                                "git checkout rev filename"
                                            ], 
                                            "flags": 0, 
                                            "guid": "rZOpQ[aZ<4", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Check out the client branch, figure out the patches from the common ancestor of the client and server branches (the common ancestor branched from master in the past), and then replay the patches from client that are not into common ancestor onto master.", 
                                                "git rebase --onto master server client"
                                            ], 
                                            "flags": 0, 
                                            "guid": "dOe.P/`?3w", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Create alias \"co\" for git checkout", 
                                                "git config --global alias.co checkout"
                                            ], 
                                            "flags": 0, 
                                            "guid": "Q00f>K3|x]", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "commands", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Add \"unstage\" alias to git (for current user)", 
                                                "git config --global alias.unstage 'reset HEAD --'"
                                            ], 
                                            "flags": 0, 
                                            "guid": "H+[B`$4X}+", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "commands", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Filter commit by author ('jdoe') in git log", 
                                                "git log --author jdoe"
                                            ], 
                                            "flags": 0, 
                                            "guid": "OK9(#LMJ]r", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "log", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Filter commit by presense of \"pattern\" in commit message in git log", 
                                                "git log --grep pattern"
                                            ], 
                                            "flags": 0, 
                                            "guid": "Oe9~pAq==p", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "log", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What parameter of git log should you use to specify that you want to see only commits matching all given patterns (with --grep option)?", 
                                                "--all-match"
                                            ], 
                                            "flags": 0, 
                                            "guid": "L%bpn*{MB[", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "log", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Look for differences whose patch text contains added/removed lines that match &lt;regex&gt;.", 
                                                "git log -G&lt;regex&gt;"
                                            ], 
                                            "flags": 0, 
                                            "guid": "D]39x!74>j", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "log", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Stash all changes (including untracked and ignored files)", 
                                                "git stash --all"
                                            ], 
                                            "flags": 0, 
                                            "guid": "bf+S])w`{#", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Stash files in repo including untracked files (but not ignored ones)", 
                                                "git stash&nbsp;--include-untracked"
                                            ], 
                                            "flags": 0, 
                                            "guid": "H[wLNmJhnn", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Start git stash interactive mode (allows you to &nbsp;interactively select changes, that would be stashed)", 
                                                "git stash -p"
                                            ], 
                                            "flags": 0, 
                                            "guid": "tnbnb&KWxw", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Show status of the repository, ignoring untracked files", 
                                                "git status -uno"
                                            ], 
                                            "flags": 0, 
                                            "guid": "sG?>pdX-Dy", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": [
                                                "command", 
                                                "git", 
                                                "shell"
                                            ]
                                        }
                                    ]
                                }, 
                                {
                                    "__type__": "Deck", 
                                    "children": [], 
                                    "crowdanki_uuid": "a69e2b7a-6d5b-11e6-adf3-8c705a50cbf0", 
                                    "deck_config_uuid": "a69e3016-6d5b-11e6-adf3-8c705a50cbf0", 
                                    "desc": "Please see the <a href='https://ankiweb.net/shared/info/2107904924'>shared deck page</a> for more info.", 
                                    "dyn": 0, 
                                    "extendNew": 10, 
                                    "extendRev": 50, 
                                    "media_files": [], 
                                    "mid": 1408638528289, 
                                    "name": "General Information", 
                                    "notes": [
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is the main characteristic of a  <b>distributed\n                  version control system\n                  (DVCS)</b>?", 
                                                "A distributed version control system has no\n                  central server which\n                  stores the data. Every local copy contains the full history of the\n                  source code.\n                  \n               "
                                            ], 
                                            "flags": 0, 
                                            "guid": "b#GLS`mD*f", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Does the use of a\n                  <b>DVCS</b> require a\n                  central\n                  code\n                  repository?\n                  \n               ", 
                                                "No."
                                            ], 
                                            "flags": 0, 
                                            "guid": "CPlCr{/4m(", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Where does Git\n                  <b>commit</b> file changes to?<br />", 
                                                "To the local repository."
                                            ], 
                                            "flags": 0, 
                                            "guid": "O9BDWhx,@(", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What happens when you <b>clone</b> a\n                  repository with                    Git?", 
                                                "An exact copy of the\n                  repository is created locally.<br />"
                                            ], 
                                            "flags": 0, 
                                            "guid": "Dkiv9+0iTX", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Does the local clone of a remote repository include the\n                  complete history of the source code?", 
                                                "Yes."
                                            ], 
                                            "flags": 0, 
                                            "guid": "M,[&ZR-I$S", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What's the meaning of <b>master branch</b>?", 
                                                "The \"master\" in Git is the default branch, which generally represents the most stable code."
                                            ], 
                                            "flags": 0, 
                                            "guid": "bm{uO(^4b/", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is a <b>commit</b>?", 
                                                "A commit is a pointer to a spot&nbsp;(revision)&nbsp;on the code history."
                                            ], 
                                            "flags": 0, 
                                            "guid": "LknXA>P{gu", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "How are Git commits <b>identified</b>?", 
                                                "Instead of numbering commits, Git uses the code contents of the commit to create a unique, 40 character SHA-1 hash."
                                            ], 
                                            "flags": 0, 
                                            "guid": "M!|;;-isLS", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Does a branch created in a repository,&nbsp;which was cloned from another repository, need to have a&nbsp;counterpart in the&nbsp;remote repository?<br /> ", 
                                                "No it doesn't."
                                            ], 
                                            "flags": 0, 
                                            "guid": "cr,S-na/4y", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which two steps are neccessary to persist modifications on a file in the repository?<br />", 
                                                "1. Staging (mark the file to be relevant for Git) = adding the file to the index.<br />2. Commiting: storing the changes in the Git repository.<br />"
                                            ], 
                                            "flags": 0, 
                                            "guid": "wp*ChGY&nd", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What does the term <b>staging</b> describe?", 
                                                "Marking changes as relevant for the version control, by adding them to the index."
                                            ], 
                                            "flags": 0, 
                                            "guid": "s2b*|BtuO2", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is a <b>Revision</b>?<br />", 
                                                "A revision represents a version of the source code. Git identifies\n                                               revisions\n                                               with SHA-1 IDs using a commit object. SHA-1 IDs are 160 bits long and are\n                                               represented\n                                               in\n                                               hexadecimal. The latest version can be addressed\n                                               via\n                                               HEAD, the version before that via\n                                               HEAD~1\n                                               and so on."
                                            ], 
                                            "flags": 0, 
                                            "guid": "DF$yg5cnTs", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "In which file does Git store <b>global settings</b>?<br />", 
                                                "In the <b>.gitconfig</b> file.<br />"
                                            ], 
                                            "flags": 0, 
                                            "guid": "cq9}90`8%l", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which file tells Git which files and directories to <b>ignore</b>?<br />", 
                                                "<pre>.gitignore</pre>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "p{@pLqf8~)", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is the difference between <b>local .gitignore</b> and <b>global .gitignore</b> files, regarding visibility?<br />", 
                                                "The local\n               .gitignore\n               file can be committed into the Git repository and\n               therefore is visible\n               to everyone who clones the repository. The\n               global\n               .gitignore\n               file is only\n               locally visible.\n               \n            "
                                            ], 
                                            "flags": 0, 
                                            "guid": "bALcFrS[,0", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "How are <b>empty directories</b> handled under Git version control / by common practice?", 
                                                "Git ignores empty directories, i.e. it does not put them under version control. Common practice for tracking an empty directory though, is to put a file called <b>.gitkeep</b> into such a directory.<br />"
                                            ], 
                                            "flags": 0, 
                                            "guid": "julVRci`rj", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What does the command <b>git reflog</b>&nbsp;do?<br />", 
                                                "It displays the history of the complete changes of the current branch, based on the HEAD revision.<br />"
                                            ], 
                                            "flags": 0, 
                                            "guid": "s$go8!a4M`", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Does <b>git reflog</b>&nbsp;also contain deleted commits?", 
                                                "Yes."
                                            ], 
                                            "flags": 0, 
                                            "guid": "o7*md3rMpY", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "How is the <b>default branch</b> called in Git?<br />", 
                                                "Master."
                                            ], 
                                            "flags": 0, 
                                            "guid": "KQ=K|X^!V@", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What does the term <b>merging</b>&nbsp;describe?<br />", 
                                                "The process of combining changes of two branches."
                                            ], 
                                            "flags": 0, 
                                            "guid": "IMAr1$Qa%~", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is a <b>merge conflict</b>?<br />", 
                                                "A merge conflict occurs, if two people have modified the same content and Git cannot automatically determine how both changes should be applied.<br />"
                                            ], 
                                            "flags": 0, 
                                            "guid": "u}r83:+:~S", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What does the <b>rebase</b>&nbsp;command do?<br>", 
                                                "In general terms - rewrites history. E.g: Combining several commits into<br>                  one commit. Or replaying changes from one branch on top of the other."
                                            ], 
                                            "flags": 0, 
                                            "guid": "ioQ[YMk002", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What functionality does the <b>stash</b> command add?<br />", 
                                                "Saving the current uncommmitted changes and&nbsp;checkout&nbsp;the last committed revision. This allows pulling-in the latest changes or to develop an urgent fix. Afterwards the stashed changes can be restored, which will reapply the changes to the current version of the source code.<br /> "
                                            ], 
                                            "flags": 0, 
                                            "guid": "i`-!UI5`9n", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What's the rule of thumb, concerning the <b>stash</b>&nbsp;command?<br />", 
                                                "It should be the exception to using Git. Typically you would create new branches for new features and switch between branches.<br />"
                                            ], 
                                            "flags": 0, 
                                            "guid": "My4;,HZvH:", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is a <b>patch file</b>?<br />", 
                                                "A text file that contains changes to the source code."
                                            ], 
                                            "flags": 0, 
                                            "guid": "m5arfU*|ZX", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is an <b>alias</b> in Git?", 
                                                "An alias in Git allows you to setup your own Git command. E.g. you can define an alias which is a short form of your own favorite commands or you can combine several commands with an alias."
                                            ], 
                                            "flags": 0, 
                                            "guid": "PE`j{-UNE?", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Name two <b>transport types</b>&nbsp;that are supported protocols for Git checkouts", 
                                                "The native Git protocol is <b>git</b>, alternatively the <b>http</b> protocol is also supported."
                                            ], 
                                            "flags": 0, 
                                            "guid": "BKdJz<y,i?", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What happens in regards to naming of the original repository, when <b>cloning</b> a remote repository?<br />", 
                                                "The original repository will automatically be called \"origin\".<br />"
                                            ], 
                                            "flags": 0, 
                                            "guid": "xDNKnks;P;", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is the possibility of using the <b>HTTP protocol</b> with Git especially helpful for?", 
                                                "If a firewall blocks all requests other than http.<br />"
                                            ], 
                                            "flags": 0, 
                                            "guid": "ykx4hD1f`?", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Which are the two variants of <b>ssh keys</b>?<br />", 
                                                "Public and private.<br />"
                                            ], 
                                            "flags": 0, 
                                            "guid": "K5v/_?3y;F", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What does <b>rev~</b> stand for?", 
                                                "The first parent of a revision \"rev\""
                                            ], 
                                            "flags": 0, 
                                            "guid": "NvGA`?8=%", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is the starting point of the scope of <b>.gitignore</b> files?", 
                                                "They define ignore definitions for the whole directory tree, starting from the point where the .gitignore file itself resides."
                                            ], 
                                            "flags": 0, 
                                            "guid": "op.FKBEm<w", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What's the difference between <b>git pull</b> and <b>git fetch</b>? (<span style=\" font-style: normal; font-weight: normal;\">In the simplest terms)</span>", 
                                                "git pull does a git fetch followed by a git merge."
                                            ], 
                                            "flags": 0, 
                                            "guid": "j@2Mww$9I{", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is the difference between <b>git commit</b> and <b>git push</b>?", 
                                                "<b>commit:</b> adding changes to the repository.<div><b>push</b>: to transfer the last commit(s) to a remote server</div>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "n/=o]SCdPT", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is the <b>head</b> in Git?", 
                                                "The head is a pointer to the current branch, which is in turn the last commit you made or checked out into your working directory."
                                            ], 
                                            "flags": 0, 
                                            "guid": "Dgx!t", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is the <b>index</b> in Git?", 
                                                "It's a snapshot of changes contained in your next commit, this way it's the \"<b>proposed next commit</b>\"."
                                            ], 
                                            "flags": 0, 
                                            "guid": "KRd1.", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What does <b>head^</b> mean?", 
                                                "It means the first parent of the tip of the current branch."
                                            ], 
                                            "flags": 0, 
                                            "guid": "gTh:E.xGT7", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is the difference between <b>head~</b> and <b>head^</b> ?", 
                                                "&nbsp;~&lt;n&gt; means the revision that is the &lt;n&gt;th generation ancestor of the named revision, following only the first parents.<div>^&lt;n&gt; means the &lt;n&gt;th parent of that revision.</div>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "oSbQ@6YX3O", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is a local version control system?", 
                                                "A database of changes kept on the same computer as the files being versioned."
                                            ], 
                                            "flags": 0, 
                                            "guid": "lyLiO", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "How is a distributed version control system different from others?", 
                                                "Every client has a full backup of all the data."
                                            ], 
                                            "flags": 0, 
                                            "guid": "vL>PF", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is the \"snapshot\" concept?", 
                                                "In Git, the data is more like a stream of complete snapshots of a mini filesystem rather than a list of file changes like you'll see in SVN, Perforce, etc."
                                            ], 
                                            "flags": 0, 
                                            "guid": "[=E+4", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Why are most git operations so fast?<br>", 
                                                "They happen on the local disk, rather than over a network<br>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "nWWq:b)^~N", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "How does git maintain file integrity?<br>", 
                                                "Everything is SHA-1 checksummed and stored not by filename, but rather hash value of each file's contents.<br>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "j-w#1jS:X.", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What are the 3 git states your files can reside in?<br>", 
                                                "committed, modified, and staged<br>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "C4^;Av:G|V", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What does it mean when a file is in the \"committed\" state?<br>", 
                                                "The data is safely stored in your local database<br>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "d1B#YWuY@B", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What does it mean if a file is in the \"modified\" state?<br>", 
                                                "You have changed the file, but not yet committed it.<br>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "B*=9usvjro", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What does it mean if a file is in the \"staged\" state?<br>", 
                                                "You have marked a file in its current state to go into the next commit snapshot.<br>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "fZB+bI=,I[", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What are the 3 sections of a git project?<br />", 
                                                "the Git directory (repository), the working directory, and the staging area<br />"
                                            ], 
                                            "flags": 0, 
                                            "guid": "exQD~)OGAp", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is stored in the Git directory?<br>", 
                                                "The metadata and object database for your project<br>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "tE7lTjYc[[", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is copied when you clone a repository from another computer?<br>", 
                                                "the Git directory<br>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "k,m+XqcVpU", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is the working directory?<br>", 
                                                "A single checkout of one version of the project. These files are pulled out of the compressed database in the git directory and placed on disk for you to use and modify.<br>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "K.$%A~oaD9", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is the staging area?", 
                                                "It is a file in the git directory that stores information about what goes into the next commit. It is sometimes referred to as the \"index\"."
                                            ], 
                                            "flags": 0, 
                                            "guid": "L41A}A*]ro", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is the 3-step basic git workflow?", 
                                                "1. modify files in working directory<div>2. stage files, adding snapshots of them to the staging area</div><div>3. commit, which takes the files in the staging area and stores that snapshot permanently to your git directory</div>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "F*ctH#)=J&", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Where are the three places that git config variables can be stored?", 
                                                "1. systemwide: &nbsp;/etc/gitconfig<div>2. per user: ~/.gitconfig or ~/.config/git/config</div><div>3. per project: .git/config</div>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "u(@cQ<B8CM", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What option do you pass to git config to modify system-level configs?", 
                                                "--system"
                                            ], 
                                            "flags": 0, 
                                            "guid": "i})V+Dzh9J", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What option do you pass to git config to make changes for specific to your user?", 
                                                "--global"
                                            ], 
                                            "flags": 0, 
                                            "guid": "BarEPJKq84", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What are three ways to get help on a git verb?", 
                                                "1. git help &lt;verb&gt;<div>2. git &lt;verb&gt; --help</div><div>3. man git-&lt;verb&gt;</div>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "O`8m5XL4n_", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "How do you get a copy of an existing git repository, say https://github.com/libgit2/libgit2<span style=\"line-height: 1.1;\">?</span><br>", 
                                                "git clone&nbsp;https://github.com/libgit2/libgit2"
                                            ], 
                                            "flags": 0, 
                                            "guid": "o=}nL8EYm$", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What are a couple different transfer protocols used by git?", 
                                                "https://<div>git://</div>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "A}1)?]T`vM", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is the difference between a tracked and untracked file?", 
                                                "Tracked files are all files that were in the last snapshot. They can be unmodified, modified, or staged. Untracked files are not in the latest snapshot or staged."
                                            ], 
                                            "flags": 0, 
                                            "guid": "Q`hDEs1([I", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Why is it possible for a tracked file to be both in staging and modified state?", 
                                                "Because the staged version is the contents of the file at the exact time you ran \"git add\" to stage the file. You have to run \"git add\" again if you've modified it and want to stage the latest contents of the file."
                                            ], 
                                            "flags": 0, 
                                            "guid": "Ft&|}kHYmQ", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What file is used to ignore some untracked files?", 
                                                ".gitignore"
                                            ], 
                                            "flags": 0, 
                                            "guid": "A(Pz~1U7<!", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is the default shortname for cloned repositories?", 
                                                "origin"
                                            ], 
                                            "flags": 0, 
                                            "guid": "t;V;(s*,@A", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "How does git fetch affect your local repository?", 
                                                "It pulls the data, but does not merge or modify your working copy. To actually merge, it must be manually done."
                                            ], 
                                            "flags": 0, 
                                            "guid": "Pj#|SXYy$f", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is stored in a git commit object?", 
                                                "* pointer to the snapshot of the staged content<div>* author's name and email</div><div>* commit message</div><div>* pointer to the commit(s) directly before this one</div>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "s]So><?rVW", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is a branch in terms of git commit objects?", 
                                                "A lightweight movable pointer to one of the commits"
                                            ], 
                                            "flags": 0, 
                                            "guid": "B0mlW%vB3_", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is the name of the special pointer which tells you which local branch you're currently on?", 
                                                "HEAD"
                                            ], 
                                            "flags": 0, 
                                            "guid": "wx>?/9M3;E", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What happens to the HEAD pointer when you create a new branch?", 
                                                "Nothing, it continues to point to the existing branch (such as master, if you haven't changed it yet). It does not switch to the new branch automatically."
                                            ], 
                                            "flags": 0, 
                                            "guid": "rSIJ1yGYe", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What happens to the working directory when you switch branches?", 
                                                "The files are updated to reflect the last commit of the branch. If it cannot be updated cleanly, git will not let you switch."
                                            ], 
                                            "flags": 0, 
                                            "guid": "uZYKi_w!c;", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "Why is a git branch cheap?", 
                                                "A branch is a simple file that contains the 40 character SHA-1 checksum of the commit it points to."
                                            ], 
                                            "flags": 0, 
                                            "guid": "i}td:;X-$8", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is a \"fast-forward\" merge?", 
                                                "When you try to merge a commit that can be reached by following the first commit's history, git will simply move the pointer forward because there is no divergent work to merge together. This is known as a \"fast-forward\" merge."
                                            ], 
                                            "flags": 0, 
                                            "guid": "rVbh7YpG/J", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is a merge commit?", 
                                                "When two divergent branches are merged, git creates a new snapshot and a new commit that points to it. A merge commit has more than one parent."
                                            ], 
                                            "flags": 0, 
                                            "guid": "I_KQ5^#C&9", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "How is git different in dealing with the merge base when merging branches?", 
                                                "Git determines the best common ancestor to use for its merge base, which is a lot simpler than many other VCSes."
                                            ], 
                                            "flags": 0, 
                                            "guid": "tgr3Vb|<^/", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What does the leading * character mean in the output of git branch?", 
                                                "It indicates the branch you have currently checked out (that HEAD points to)."
                                            ], 
                                            "flags": 0, 
                                            "guid": "B@=#&gvD8$", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is the name used for a branching workflow where sets of commits graduate to a more stable silo when they're fully tested?<br>", 
                                                "progressive-stability branching<br>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "z/@Lr]Q(#S", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is the name for a short-lived branch for a single particular feature or related work?<br>", 
                                                "topic branch<br>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "i!X._o?lw1", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What are remote branches?<br>", 
                                                "Pointers to the state of branches in remote repositories. They are local branches that you cannot move.<br>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "G#8JF}nb2h", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "When are remote branch pointers updated?<br>", 
                                                "They are automatically moved when you do any network communication.<br>"
                                            ], 
                                            "flags": 0, 
                                            "guid": "J6*@RPtUh1", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "When you fetch a remote branch, will it automatically set up a local branch with the same name?", 
                                                "No. You must either merge it or create your own branch from it."
                                            ], 
                                            "flags": 0, 
                                            "guid": "Q5})51ApH+", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is the shorthand for referencing the tracking remote and branch?", 
                                                "@{u} or @{upstream}"
                                            ], 
                                            "flags": 0, 
                                            "guid": "tK3qT-!z5k", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "How does rebasing affect the commit history differently than a merge?", 
                                                "A rebase will make the commit history look linear/clean rather than a bunch of branch merges. This is often done to make sure your commits apply cleanly to a remote branch."
                                            ], 
                                            "flags": 0, 
                                            "guid": "zcp*jH9a&8", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What one tip should you follow to avoid a drawback of rebasing?", 
                                                "Do not rebase commits that exist outside of your repository."
                                            ], 
                                            "flags": 0, 
                                            "guid": "ATWa!RS=Z&", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is a good general rule for deciding when to rebase or to merge?", 
                                                "Rebase local changes you haven't shared yet in order to clean up, but never rebase anything you pushed somewhere."
                                            ], 
                                            "flags": 0, 
                                            "guid": "xN+rNGwU1e", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }, 
                                        {
                                            "__type__": "Note", 
                                            "data": "", 
                                            "fields": [
                                                "What is a \"bare repository\"?", 
                                                "A repository that doesn't contain a working directory"
                                            ], 
                                            "flags": 0, 
                                            "guid": "uN=LqKN.,h", 
                                            "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                            "tags": []
                                        }
                                    ]
                                }
                            ], 
                            "crowdanki_uuid": "a69dcedc-6d5b-11e6-adf3-8c705a50cbf0", 
                            "deck_config_uuid": "a69dd698-6d5b-11e6-adf3-8c705a50cbf0", 
                            "desc": "", 
                            "dyn": 0, 
                            "extendNew": 10, 
                            "extendRev": 50, 
                            "media_files": [], 
                            "name": "Git", 
                            "notes": []
                        }, 
                        {
                            "__type__": "Deck", 
                            "children": [], 
                            "crowdanki_uuid": "601edc22-f6b8-11e7-b2cc-4851b7c6a3bc", 
                            "deck_config_uuid": "601edc1f-f6b8-11e7-ae12-4851b7c6a3bc", 
                            "desc": "Please see the <a href='https://ankiweb.net/shared/info/'>shared deck page</a> for more info.", 
                            "dyn": 0, 
                            "extendNew": 10, 
                            "extendRev": 50, 
                            "media_files": [
                                "Visitor.png", 
                                "Singleton.png", 
                                "Mediator.png", 
                                "Iterator.png", 
                                "Builder.png", 
                                "Bridge.png", 
                                "Memento.png", 
                                "Interpreter.png", 
                                "State (1).png", 
                                "Observer.png", 
                                "Adapter.png", 
                                "Template Method.png", 
                                "Factory Method.png", 
                                "Composite.png", 
                                "Strategy.png", 
                                "Abstract Factory.png", 
                                "Facade.png", 
                                "Chain of Responsibility.png", 
                                "Flyweight.png", 
                                "Decorator.png", 
                                "Proxy.png", 
                                "Command.png"
                            ], 
                            "name": "DesignPatterns", 
                            "notes": [
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Memento</div>", 
                                        "<div><b>Type:</b> Behavioral</div><div><br /></div><div><b>What it is:</b></div><div>Without violating encapsulation, capture&nbsp;and externalize an object's internal state&nbsp;so that the object can be restored to this&nbsp;state later.</div><div><img src=\"Memento.png\" /></div><div><br /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "K+0)L1.N(3", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Chain of Responsibility</div>", 
                                        "<div><b>Type</b>: Behavioral</div><div><br /></div><div><b>What it is</b>:&nbsp;</div><div>Avoid coupling the sender of a request to&nbsp;its receiver by giving more than one object&nbsp;a chance to handle the request. Chain the&nbsp;receiving objects and pass the request&nbsp;along the chain until an object handles it.&nbsp;</div><div><img src=\"Chain of Responsibility.png\" /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "xs7Tp-&A2Q", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Observer</div>", 
                                        "<div><b>Type</b>: Behavioral</div><div><br /></div><div><div><b>What it is</b>:</div><div>Define a one-to-many dependency between&nbsp;objects so that when one object changes&nbsp;state, all its dependents are notified and&nbsp;updated automatically.</div></div><div><img src=\"Observer.png\" /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "f%7M~4ArzB", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Command</div>", 
                                        "<div><b>Type</b>: Behavioral</div><div><br /></div><div><div><b>What it is</b>:&nbsp;</div><div>Encapsulate a request as an object,&nbsp;thereby letting you parameterize clients&nbsp;with different requests, queue or log&nbsp;requests, and support undoable &nbsp;operations.</div></div><div><img src=\"Command.png\" /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "KsA^7@+Zj1", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>State</div>", 
                                        "<div><div><b>Type: </b>Behavioral</div></div><div><b><br /></b></div><div><b>What it is</b>:</div><div>Allow an object to alter its behavior when&nbsp;its internal state changes. The object will&nbsp;appear to change its class.</div><div><img src=\"State (1).png\" /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "s;,av+o/0[", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Interpreter</div>", 
                                        "<div><b>Type</b>: Behavioral</div><div><div><b>What it is</b>:</div><div>Given a language, define a representation&nbsp;for its grammar along with an interpreter&nbsp;that uses the representation to interpret&nbsp;sentences in the language.</div></div><div><img src=\"Interpreter.png\" /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "MVp59(5!j[", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Strategy</div>", 
                                        "<div><b>Type</b>: Behavioral</div><div><br /></div><div><div><b>What it is</b>:</div><div>Define a family of algorithms,&nbsp;encapsulate each one, and make them&nbsp;interchangeable. Lets the algorithm vary&nbsp;independently from&nbsp;clients that use it.</div></div><div><img src=\"Strategy.png\" /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "wZP0|L7(SU", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Iterator</div>", 
                                        "<div><div><b>Type</b>: Behavioral</div></div><div><br /></div><div><b>What it is</b>:&nbsp;</div><div>Provide a way to access the elements of&nbsp;an aggregate object sequentially without&nbsp;exposing its underlying representation.</div><div><img src=\"Iterator.png\" /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "t{0U6`hONS", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Template Method</div>", 
                                        "<div><div><b>Type</b>: Behavioral</div></div><div><br /></div><div><b>What it is</b>:</div><div>Define the skeleton of an algorithm in an&nbsp;operation, deferring some steps to subclasses.</div><div>Lets subclasses redefine certain steps&nbsp;of an algorithm without changing the&nbsp;algorithm's structure.</div><div><img src=\"Template Method.png\" /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "Ij)7aF<_:,", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Mediator</div>", 
                                        "<div>Type: Behavioral</div><div><br /></div><div><div>What it is:</div><div>Define an object that encapsulates how a&nbsp;set of objects interact. Promotes loose&nbsp;coupling by keeping objects from referring&nbsp;to each other explicitly and it lets you vary&nbsp;their interactions independently.</div></div><div><img src=\"Mediator.png\" /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "n3OP-n/%__", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Visitor</div>", 
                                        "<div><b>Type</b>: Behavioral</div><div><br /></div><div><b>What it is</b>:</div><div>Represent an operation to be performed on the elements of an object structure. Lets you define a new operation without changing the clases of the elements on wich it operates.</div><div><img src=\"Visitor.png\" /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "qB_O[0x>?X", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Adapter&nbsp;</div>", 
                                        "<div><b>Type</b>: Structural&nbsp;</div><div><br /></div><div><div><b>What it is</b>:&nbsp;</div><div>Convert the interface of a class into&nbsp;another interface clients expect. Lets&nbsp;classes work together that couldn't&nbsp;otherwise because of incompatible&nbsp;interfaces.&nbsp;</div></div><div><img src=\"Adapter.png\" /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "gw)0$#qAqU", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Bridge</div>", 
                                        "<div><b>Type</b>: Structural&nbsp;</div><div><br /></div><div><div><b>What it is</b>:</div><div>Decouple an abstraction from its&nbsp;implementation so that the two can vary&nbsp;independently.</div></div><div><img src=\"Bridge.png\" /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "x3D*@f1ox7", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Composite</div>", 
                                        "<div><b>Type</b>: Structural&nbsp;</div><div><br /></div><div><div><b>What it is</b>:&nbsp;</div><div>Compose objects into tree structures to&nbsp;represent part-whole hierarchies. Lets&nbsp;clients treat individual objects and&nbsp;compositions of objects uniformly.&nbsp;</div></div><div><img src=\"Composite.png\" /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "o8ql(oX{H[", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Decorator</div>", 
                                        "<div><b>Type</b>: Structural&nbsp;</div><div><br /></div><div><div><b>What it is</b>:&nbsp;</div><div>Attach additional responsibilities to an&nbsp;object dynamically. Provide a flexible&nbsp;alternative to sub-classing for extending&nbsp;functionality.&nbsp;</div></div><div><img src=\"Decorator.png\" /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "Q#lrD:AsDd", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Facade</div>", 
                                        "<div><b>Type</b>: Structural&nbsp;</div><div><br /></div><div><div><b>What it is</b>:&nbsp;</div><div>Provide a unified interface to a set of&nbsp;interfaces in a subsystem. Defines a high-level interface that makes the subsystem&nbsp;easier to use.&nbsp;</div></div><div><img src=\"Facade.png\" /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "l2{[hHp~j5", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Flyweight</div>", 
                                        "<div>Type: Structural&nbsp;</div><div><br /></div><div><div>What it is:&nbsp;</div><div><div>Use sharing to support large numbers of&nbsp;fine grained objects efficiently.</div></div></div><div><img src=\"Flyweight.png\" /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "sDK;[}+z*r", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Proxy</div>", 
                                        "<div><b>Type</b>: Structural&nbsp;</div><div><br /></div><div><div><b>What it is</b>:</div><div>Provide a surrogate or placeholder for&nbsp;another object to control access to it.</div></div><div><img src=\"Proxy.png\" /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "g?TY]9t0`^", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Abstract Factory</div>", 
                                        "<div><b>Type</b>: Creational</div><div><br /></div><div><div><b>What it is</b>:</div><div>Provides an interface for creating&nbsp;families of related or dependent&nbsp;objects without specifying their&nbsp;concrete class.</div></div><div><img src=\"Abstract Factory.png\" /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "h)5if~E%1W", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Builder</div>", 
                                        "<div><b>Type</b>: Creational</div><div><br /></div><div><div><b>What it is</b>:</div><div>Separate the construction of a&nbsp;complex object from its representing&nbsp;so that the same construction&nbsp;process can create different&nbsp;representations.</div></div><div><img src=\"Builder.png\" /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "E/JVS|*#Of", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Factory Method</div>", 
                                        "<div><b>Type</b>: Creational</div><div><br /></div><div><div><b>What it is</b>:</div><div>Define an interface for creating an&nbsp;object, but let subclasses decide which&nbsp;class to instantiate. Lets a class defer&nbsp;instantiation to subclasses.</div></div><div><img src=\"Factory Method.png\" /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "Pqm7c;E^J-", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Prototype</div>", 
                                        "<div><b>Type</b>: Creational</div><div><br /></div><div><div><b>What it is</b>:</div><div>Specify the kinds of objects to create&nbsp;using a prototypical instance, and&nbsp;create new objects by copying this&nbsp;prototype.</div></div><div><img src=\"Factory Method.png\" /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "B=TT$K/{vg", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Singleton</div>", 
                                        "<div><b>Type</b>: Creational</div><div><br /></div><div><div><b>What it is</b>:</div><div>Ensure a class only has one instance and&nbsp;provide a global point of access to it.</div></div><div><img src=\"Singleton.png\" /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "i0pkIvx^$W", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }
                            ]
                        }
                    ], 
                    "crowdanki_uuid": "601edc1e-f6b8-11e7-86ac-4851b7c6a3bc", 
                    "deck_config_uuid": "601edc1f-f6b8-11e7-ae12-4851b7c6a3bc", 
                    "desc": "", 
                    "dyn": 0, 
                    "extendNew": 10, 
                    "extendRev": 50, 
                    "media_files": [], 
                    "name": "Software Engineering", 
                    "notes": []
                }
            ], 
            "crowdanki_uuid": "2784d995-f6b9-11e7-b9ce-4851b7c6a3bc", 
            "deck_config_uuid": "601edc1f-f6b8-11e7-ae12-4851b7c6a3bc", 
            "desc": "", 
            "dyn": 0, 
            "extendNew": 10, 
            "extendRev": 50, 
            "media_files": [], 
            "name": "English", 
            "notes": []
        }, 
        {
            "__type__": "Deck", 
            "children": [
                {
                    "__type__": "Deck", 
                    "children": [
                        {
                            "__type__": "Deck", 
                            "children": [], 
                            "crowdanki_uuid": "dd6e9013-f6ba-11e7-bd91-4851b7c6a3bc", 
                            "deck_config_uuid": "601edc1f-f6b8-11e7-ae12-4851b7c6a3bc", 
                            "desc": "Deck en français pour étudier les patrons de conception ", 
                            "dyn": 0, 
                            "extendNew": 10, 
                            "extendRev": 50, 
                            "media_files": [
                                "databinding.png"
                            ], 
                            "mid": 1512669782318, 
                            "name": "Patrons De Conception", 
                            "notes": [
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce qu'un patron de conception ? ", 
                                        "Un patron de conception est la meilleure solution connue à un problème de conception récurrent "
                                    ], 
                                    "flags": 0, 
                                    "guid": "Z*4M5", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Theorie", 
                                        "TheoriePatrons", 
                                        "marked"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quels sont les trois catégories de patron de conception ? ", 
                                        "Patron structurel, comportamental et créateur "
                                    ], 
                                    "flags": 0, 
                                    "guid": "rC{zO", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Theorie", 
                                        "TheoriePatrons"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quand est-ce que un patron est structurel ? ", 
                                        "Un patron est structurel à partir du moment où sa solution réside dans l'agacement des classes les unes avec les autres"
                                    ], 
                                    "flags": 0, 
                                    "guid": "*TV$6", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Theorie", 
                                        "TheoriePatrons"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quand est-ce que un patron de conception est <b>créateur</b>?", 
                                        "Un patron de conception est créateur lorsqu'il résout le problème en controllant la facon dont les objets sont crées"
                                    ], 
                                    "flags": 0, 
                                    "guid": "nSD/)jdWIv", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Theorie", 
                                        "TheoriePatrons"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "C'est quoi <i style=\"font-weight: bold; \">implementer</i>&nbsp;un patron de conception?", 
                                        "Implementer un patron de conception consiste a remplacer les classes participantes avec les classes spécifiques du contexte"
                                    ], 
                                    "flags": 0, 
                                    "guid": "p*Lr}}JOW]", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Theorie", 
                                        "TheoriePatrons"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quand est-ce que un patron de conception est comportamental?", 
                                        "Un patron de conception est comporamental quand il est un patron <b>structurel</b>&nbsp;et qu'il résout le probleme en ajoutant du comportement."
                                    ], 
                                    "flags": 0, 
                                    "guid": "q[9p-eVkh3", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Theorie", 
                                        "TheoriePatrons"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que le polymorphisme?", 
                                        "C'est la capacité de l'éxecuteur a aller chercher la méthode plus basse a appeller pour une variable donné"
                                    ], 
                                    "flags": 0, 
                                    "guid": "Ouqu~X^6l|", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Theorie", 
                                        "TheoriePatrons"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quels peuvent etre trois types de patrons?", 
                                        "Patrons de conception, patrons d'analyse et patrons d'architecture"
                                    ], 
                                    "flags": 0, 
                                    "guid": "CmwP7a|2@d", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Theorie", 
                                        "TheoriePatrons"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que c'est que les principes S.O.L.I.D ?", 
                                        "Ce sont 5 principes de conception qui ont l'intention de faire la conception de logiciels plus comprehensible, flexible et maintenable"
                                    ], 
                                    "flags": 0, 
                                    "guid": "QGgOf30nI)", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SOLID"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que le 'S', dans les principes S.O.L.I.D?", 
                                        "Le <i>Single Responsability Principle</i>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "fjY%e84C!I", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SOLID"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que le 'O', dans les principes S.O.L.I.D?", 
                                        "Le <i>Open / Close Principle</i>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "mE4zn%$V1*", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SOLID"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que le 'L', dans les principes S.O.L.I.D?", 
                                        "Le <i>Liskov Substitution Principle</i>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "TKgKI%b#`", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SOLID"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que le 'I', dans les principes S.O.L.I.D?", 
                                        "Le <i>Interface Segregation Principle</i>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "iJ]1WZQN`P", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SOLID"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que le 'D', dans les principes S.O.L.I.D?", 
                                        "Le <i>Dependency Inversion Principle</i>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "ca$H|11OV/", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SOLID"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Pourquoi le 'S' de S.O.L.I.D est bien?&nbsp;", 
                                        "Parce que les classes prendent moins de place, on peut plus facilement reprendre une classe quand on doit aller chercher une fonctionnalité et on respecte le principe d'encapsulation. Toutes les services de la classe sont donc liées a sa fonctionnalité principale"
                                    ], 
                                    "flags": 0, 
                                    "guid": "y[WBZA!![)", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SOLID"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Pourquoi le 'O' de S.O.L.I.D est bien?&nbsp;", 
                                        "Parce qu'on s'assure du fait que tout ce qui a été fait, peut continuer a marcher. On évite la modification de code, mais on ouvre a la extension.&nbsp;"
                                    ], 
                                    "flags": 0, 
                                    "guid": "D`/2kE0~44", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SOLID"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Pourquoi le 'L' de S.O.L.I.D est bien?&nbsp;", 
                                        "Parce qu'on s'assure du bon fonctionnement du polymorphisme. On utilise la capacite de l'executeur a aller chercher la methode plus basse pour une variable donne. On met donc une méthode au-dessus quite a lever des exceptions quand une instance n'est pas censé utiliser cette méthode."
                                    ], 
                                    "flags": 0, 
                                    "guid": "o7SooYTOHG", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SOLID"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Pourquoi le 'I' de S.O.L.I.D est bien?&nbsp;", 
                                        "Parce qu'on coupe les interfaces qui sont trop larges dans des interfaces plus petites et spécifiques.<b>&nbsp;<i>Un client doit pas etre forcé a dependre sur des methodes qu'il n'utilise pas.</i>&nbsp;</b><i><b>Le I est censé garder un système decoupé et donc plus facile a reprendre, rechanger et redeployer.</b>&nbsp;</i>On appel ces petites interfaces des&nbsp;<i>interfaces de role. &nbsp;</i>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "iesV0CC+|T", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SOLID"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Pourquoi le 'D' de S.O.L.I.D est bien?", 
                                        "Parce qu'on protege les classes des dépendences qui peuvent faire des ruptures d'encapsulation. e.g Quand on veut pas qu'une classe A soit modifiable en fonction d'une classe B, on rajoute une interface au dessus de la totalite des classes. Comme ça la dépendence sera entre les interfaces et pas entre les classes diréctement."
                                    ], 
                                    "flags": 0, 
                                    "guid": "It7|A2K@sy", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SOLID", 
                                        "marked"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Le 'S' de S.O.L.I.D. Ca veut dire quoi?", 
                                        "Une classe une résponsabilité"
                                    ], 
                                    "flags": 0, 
                                    "guid": "NGmae&L`>:", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SOLID"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Le 'O' de S.O.L.I.D. Ca veut dire quoi?", 
                                        "Ouvert a l'extension, fermé a la modification"
                                    ], 
                                    "flags": 0, 
                                    "guid": "fc]~x`T9]u", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SOLID"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Le 'L' de S.O.L.I.D. Ca veut dire quoi?", 
                                        "Tout sous-type doit etre substituable pour son type de base"
                                    ], 
                                    "flags": 0, 
                                    "guid": "zm&I6p%j|:", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SOLID"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Le 'I' de S.O.L.I.D. Ca veut dire quoi?", 
                                        "<b>Plusieurs interfaces spécifiques-client c'est mieux qu'une interface universelle</b>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "jl9*z4tvor", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SOLID"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Le 'D' de S.O.L.I.D. Ca veut dire quoi?", 
                                        "On devrait dependre sur des abstractions et pas sur les concrétions.&nbsp;"
                                    ], 
                                    "flags": 0, 
                                    "guid": "jLQzZ20!EX", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SOLID"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Donne moi les 7 patterns structurels", 
                                        "<b>Adaptateur, Composite, Décorateur, Façade, Poids-mouche, Pont, Proxy</b>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "pl$OtV;~QK", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Donne moi les 11 patrons comportamentaux", 
                                        "- Chaine de responsabilité<br>- Commande<br>- Interprete<br>- Itérateur<br>- Médiateur<br>- Mémento<br>- Observateur<br>- Patron de méthode<br>- Stratégie<br>- Etat<br>- Visiteur<br><br>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "x1@:+c=!=#", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Donne moi les 5 patrons créateurs", 
                                        "1. Fabrique abstraite<br>2. Fabrique simple<br>3. Builder<br>4. Prototype<br>5. Singleton"
                                    ], 
                                    "flags": 0, 
                                    "guid": "uConPK%-<H", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que le data-binding? (explication et schéma)", 
                                        "Le <b>data-binding</b>&nbsp;est une téchnique qui lie les sources de données d'un modele et d'un consommateur entre elles et les synchronise.<img src=\"databinding.png\" />"
                                    ], 
                                    "flags": 0, 
                                    "guid": "zPhLT,KT-d", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Theorie", 
                                        "TheoriePatrons"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Problème résolu par le patron composite?", 
                                        "Tout problème avec des arbres, des compositions, des emboitements et des hierarchies"
                                    ], 
                                    "flags": 0, 
                                    "guid": "xHHRt7gmV{", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Problème résolu par le patron adaptateur?", 
                                        "Comment adapter un objet pour qu'il aie un comportement qu'il n'avait pas auparavant"
                                    ], 
                                    "flags": 0, 
                                    "guid": "NzHQwL#UFj", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Problème résolu par le patron Chaine de Responsabilité?", 
                                        "Comment masquer un enchainement de requetes a un utilisateur"
                                    ], 
                                    "flags": 0, 
                                    "guid": "g]w!>|6Ggb", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Problème résolu par le patron Commande?", 
                                        "Comment encapsuler un appel de méthode"
                                    ], 
                                    "flags": 0, 
                                    "guid": "Q6GSQzT]_R", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Problème résolu par le patron Décorateur?", 
                                        "Comment rajouter du comportent a un objet non modifiable. Différent de l'adaptateur car il n'ajoute pas du comportement a l'objet, il l'adapte, mais l'objet fait ce qu'il a a faire."
                                    ], 
                                    "flags": 0, 
                                    "guid": "p]@E8ob{yZ", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Problème résolu par le patron Etat?", 
                                        "Comment changer des attributs a l'execution, dynamiquement, sans detruire l'instance et sans avoir des switch/case"
                                    ], 
                                    "flags": 0, 
                                    "guid": "tuE^=Vfz00", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Problème résolu par le patron Facade?", 
                                        "Comment diminuer le couplage fort entre deux classes"
                                    ], 
                                    "flags": 0, 
                                    "guid": "jq^V5X/=b#", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Problème résolu par le patron Fabrique Abstraite?", 
                                        "Comment controler la construction de l'environnement pour un objet"
                                    ], 
                                    "flags": 0, 
                                    "guid": "gQq+L!iDBx", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Problème résolu par le patron Fabrique Simple?", 
                                        "Comment controler la fabrication d'un objet"
                                    ], 
                                    "flags": 0, 
                                    "guid": "oNX|AT5ib8", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Problème résolu par le patron Interprète ?", 
                                        "Sachant que tous les langages sont hierarchiques, comment interpreter un langage et interpreter chaque element de l'arbre là où il se retrouve "
                                    ], 
                                    "flags": 0, 
                                    "guid": "Ir!p+]!9F/", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Problème résolu par le patron Iterateur?", 
                                        "Comment manipuler une liste sans toucher à la liste. C'est la seule façon de manipuler une liste pendant qu'on la parcourt."
                                    ], 
                                    "flags": 0, 
                                    "guid": "of7*`u)QX2", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Problème résolu par le patron Mediateur?", 
                                        "Comment contrôler la communication entre objets?<br><br> Avion &lt;-&gt; Tour de Control<br><br>Chaque element est indépendent et n'a pas a communiquer avec d'autres elements. Le mediateur s'en charge."
                                    ], 
                                    "flags": 0, 
                                    "guid": "y`|?uq+T1:", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Problème résolu par le patron Mémento?", 
                                        "Comment mémoriser l'état de l'objet? En l'encapsulant dans un autre objet."
                                    ], 
                                    "flags": 0, 
                                    "guid": "N$f:]LG>8K", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Problème résolu par le patron Builder?", 
                                        "Comment construire un objet dynamiquement qui est le résultat de l'assamblage de plusieurs petits objets?"
                                    ], 
                                    "flags": 0, 
                                    "guid": "uT3}aTZ>J}", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Problème résolu par le patron Observateur?", 
                                        "Comment etre au courant des changements d'un objet sans attente active?"
                                    ], 
                                    "flags": 0, 
                                    "guid": "u]z_uy+Vnd", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Probleme resolu par le patron template / patron de methode?", 
                                        "Comment factoriser au maximum les appels de méthode?"
                                    ], 
                                    "flags": 0, 
                                    "guid": "n1%,$#%xu", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Probleme resolu par le patron Poids-mouche ?", 
                                        "Comment éviter la prolifération d'instances quand les objets sont semblables mais se différencient que sur quelques paramètres. "
                                    ], 
                                    "flags": 0, 
                                    "guid": "lu^IQU,&q7", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Probleme resolu par le patron Pont?", 
                                        "Comment éviter l'explosion combinatoire hierarchique d'héritages?"
                                    ], 
                                    "flags": 0, 
                                    "guid": "gM-+W1#oq?", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Probleme resolu par le patron Proxy/Procuration?", 
                                        "Comment se faire passer pour un autre objet? Le proxy se fait passer pour le sujet. Tout ce qu'on lui demande a faire, il le fait, mais en vrai c'est le sujet qui le fait."
                                    ], 
                                    "flags": 0, 
                                    "guid": "FWAVCQ-1-u", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Probleme resolu par le patron&nbsp;Prototype?", 
                                        "Comment cloner un objet? Clonage par constructeur."
                                    ], 
                                    "flags": 0, 
                                    "guid": "H//P#_^``a", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Probleme resolu par le patron&nbsp;Singleton?", 
                                        "Comment s'assurer qu'on a qu'une seule instance d'un objet parce que s'il y en avait plusieurs, ca ferait un trou dans l'univers?<br /><br />getInstance(); !"
                                    ], 
                                    "flags": 0, 
                                    "guid": "gy]}gy8tOU", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Probleme resolu par le patron Strategie?", 
                                        "Comment modifier a la volée les contenus des méthodes?"
                                    ], 
                                    "flags": 0, 
                                    "guid": "s2wq!#w;4E", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Probleme résolu par le patron Visiteur?", 
                                        "Comment faire faire a un objet quelquechose qu'il savait pas qu'il pouvait faire?"
                                    ], 
                                    "flags": 0, 
                                    "guid": "ns|a6fL@*A", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "PatronsDeConception"
                                    ]
                                }
                            ]
                        }, 
                        {
                            "__type__": "Deck", 
                            "children": [], 
                            "crowdanki_uuid": "62fe1930-f6b6-11e7-9e9b-4851b7c6a3bc", 
                            "deck_config_uuid": "62fe4040-f6b6-11e7-b0cd-4851b7c6a3bc", 
                            "desc": "", 
                            "dyn": 0, 
                            "extendNew": 10, 
                            "extendRev": 50, 
                            "media_files": [], 
                            "mid": 1512669782318, 
                            "name": "Programmation Web (Serveur)", 
                            "notes": [
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce qu'un CGI?", 
                                        "<p>Un <em>Common Gateway Interface</em> est un protocol pour les serveurs web pour éxecuter des programmes qui s'executeraient comme des applications console et qui créent des pages web dynamiquement.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTU2NjQ2MDQsICJpZCI6ICIxNTE1NjY0MjAxNzUxLTAwMSIsICJtZCI6ICJVbiAqQ29tbW9uIEdhdGV3YXkgSW50ZXJmYWNlKiBlc3QgdW4gcHJvdG9jb2wgcG91ciBsZXMgc2VydmV1cnMgd2ViIHBvdXIgXHUwMGU5eGVjdXRlciBkZXMgcHJvZ3JhbW1lcyBxdWkgcyZhcG9zO2V4ZWN1dGVyYWllbnQgY29tbWUgZGVzIGFwcGxpY2F0aW9ucyBjb25zb2xlIGV0IHF1aSBjclx1MDBlOWVudCBkZXMgcGFnZXMgd2ViIGR5bmFtaXF1ZW1lbnQuXG4ifQ==---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "g0)y__Zd0G", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "PHP", 
                                        "ProgWeb"
                                    ]
                                }
                            ]
                        }, 
                        {
                            "__type__": "Deck", 
                            "children": [], 
                            "crowdanki_uuid": "b515e370-f6ba-11e7-ae68-4851b7c6a3bc", 
                            "deck_config_uuid": "62fe4040-f6b6-11e7-b0cd-4851b7c6a3bc", 
                            "desc": "", 
                            "dyn": 0, 
                            "extendNew": 10, 
                            "extendRev": 50, 
                            "media_files": [
                                "2.jpg", 
                                "1.jpg"
                            ], 
                            "mid": 1512669782318, 
                            "name": "Programmation Systemes", 
                            "notes": [
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quels sont les 5 zones mémoire?", 
                                        "1. Le code<br />2. La pile (var de fct)<br />3. Le tas (var malloc)<br />4. Les variables globales<br />5. Les variables d'environnement"
                                    ], 
                                    "flags": 0, 
                                    "guid": "Zj{sT", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionMemoire"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Cloner un processus", 
                                        "<h2>pid_t fork(void);</h2>\n<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #204a87;font-weight: bold\">pid_t</span> <span style=\"color: #000000\">child</span> <span style=\"color: #ce5c00; font-weight: bold\">=</span> <span style=\"color: #000000\">fork</span><span style=\"color: #000000; font-weight: bold\">();</span>\n</pre></div>\n<p>Retour:</p>\n<ul>\n<li style=\"text-align: left; \">-1 si error</li>\n<li style=\"text-align: left; \">0  si fils</li>\n<li style=\"text-align: left; \">Autre si père</li>\n</ul>\n<p>Après, <em>switch/case</em> pour découper le code d'erreur, du fils et du père</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzMjkwMzMsICJpZCI6ICIxNTExNzIwNDY2Nzk1LTAwMSIsICJtZCI6ICIjIyBwaWRfdCBmb3JrKHZvaWQpO1xuICBcbmBgYGBjICBcbnBpZF90IGNoaWxkID0gZm9yaygpO1xuICBcbmBgYGBcbiAgXG5SZXRvdXI6XG4gIFxuICAqIC0xIHNpIGVycm9yXG4gICogMCAgc2kgZmlsc1xuICAqIEF1dHJlIHNpIHBcdTAwZThyZVxuICBcbkFwclx1MDBlOHMsIF9zd2l0Y2gvY2FzZV8gcG91ciBkXHUwMGU5Y291cGVyIGxlIGNvZGUgZCZhcG9zO2VycmV1ciwgZHUgZmlscyBldCBkdSBwXHUwMGU4cmVcbiJ9---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": ".^krI", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Processus"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Gestion d'erreurs", 
                                        "<h2>perror(string message)</h2>\n<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #204a87;font-weight: bold\">case</span> <span style=\"color: #ce5c00; font-weight: bold\">-</span><span style=\"color: #0000cf; font-weight: bold\">1</span><span style=\"color: #ce5c00; font-weight: bold\">:</span>\n    <span style=\"color: #000000\">perror</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #4e9a06\">\"Erreur au 'fork()');</span>\n    <span style=\"color: #000000\">exit</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #000000\">errno</span><span style=\"color: #000000; font-weight: bold\">);</span>\n    <span style=\"color: #204a87; font-weight: bold\">break</span><span style=\"color: #000000; font-weight: bold\">;</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzMjkwNTAsICJpZCI6ICIxNTExNzIwNTI4NTY4LTAwMSIsICJtZCI6ICIjIyBwZXJyb3Ioc3RyaW5nIG1lc3NhZ2UpXG4gIFxuYGBgYGNcbmNhc2UgLTE6XG4gICAgcGVycm9yKCZxdW90O0VycmV1ciBhdSAmYXBvcztmb3JrKCkmYXBvczspO1xuICAgIGV4aXQoZXJybm8pO1xuICAgIGJyZWFrO1xuYGBgYFxuICBcbiJ9---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "/~@$I", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Processus"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Utilisation de wait()</div>", 
                                        "<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #8f5902;font-style: italic\">// Attente terminaison d'un fils et récupère des infos dans 'status'  </span>\n<span style=\"color: #204a87; font-weight: bold\">pid_t</span> <span style=\"color: #000000\">wait</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #204a87; font-weight: bold\">int</span><span style=\"color: #ce5c00; font-weight: bold\">*</span> <span style=\"color: #000000\">status</span><span style=\"color: #000000; font-weight: bold\">)</span>  \n\n<span style=\"color: #8f5902; font-style: italic\">// Interprète le stats</span>\n<span style=\"color: #8f5902; font-style: italic\">// Regarder man 2 wait</span>\n<span style=\"color: #204a87; font-weight: bold\">int</span> <span style=\"color: #000000\">WEXITSTATUS</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #204a87; font-weight: bold\">int</span> <span style=\"color: #000000\">status</span><span style=\"color: #000000; font-weight: bold\">);</span>  \n</pre></div>\n<hr />\n<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #204a87; font-weight: bold\">int</span> <span style=\"color: #000000\">status</span> <span style=\"color: #ce5c00; font-weight: bold\">=</span> <span style=\"color: #0000cf; font-weight: bold\">0</span><span style=\"color: #000000; font-weight: bold\">;</span>\n<span style=\"color: #204a87; font-weight: bold\">pid_t</span> <span style=\"color: #000000\">returnCode</span><span style=\"color: #000000; font-weight: bold\">;</span>\n\n\n<span style=\"color: #8f5902; font-style: italic\">// Retourne le code du processus attendu (ou -1 si erreur)</span>\n<span style=\"color: #000000\">returnCode</span> <span style=\"color: #ce5c00; font-weight: bold\">=</span> <span style=\"color: #000000\">wait</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #ce5c00; font-weight: bold\">&amp;</span><span style=\"color: #000000\">status</span><span style=\"color: #000000; font-weight: bold\">);</span>  \n\n<span style=\"color: #204a87; font-weight: bold\">if</span> <span style=\"color: #000000; font-weight: bold\">(</span> <span style=\"color: #000000\">returnCode</span> <span style=\"color: #ce5c00; font-weight: bold\">!=</span> <span style=\"color: #ce5c00; font-weight: bold\">-</span><span style=\"color: #0000cf; font-weight: bold\">1</span><span style=\"color: #000000; font-weight: bold\">)</span>\n<span style=\"color: #000000; font-weight: bold\">{</span>\n    <span style=\"color: #000000\">printf</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #4e9a06\">\"Mon fils %d s'est terminé avec le code %d \\n\"</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #000000\">returnCode</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #000000\">WEXITSTATUS</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #000000\">status</span><span style=\"color: #000000; font-weight: bold\">));</span>\n<span style=\"color: #000000; font-weight: bold\">}</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzMzIyMTUsICJpZCI6ICIxNTExNzIwNjA2MjE1LTAwMSIsICJtZCI6ICJgYGBgY1xuLy8gQXR0ZW50ZSB0ZXJtaW5haXNvbiBkJmFwb3M7dW4gZmlscyBldCByXHUwMGU5Y3VwXHUwMGU4cmUgZGVzIGluZm9zIGRhbnMgJmFwb3M7c3RhdHVzJmFwb3M7ICBcbnBpZF90IHdhaXQoaW50KiBzdGF0dXMpICBcbiAgXG4vLyBJbnRlcnByXHUwMGU4dGUgbGUgc3RhdHNcbi8vIFJlZ2FyZGVyIG1hbiAyIHdhaXRcbmludCBXRVhJVFNUQVRVUyhpbnQgc3RhdHVzKTsgIFxuICBcbmBgYGAgIFxuICBcbi0tLS0gIFxuICBcbmBgYGBjXG5pbnQgc3RhdHVzID0gMDtcbnBpZF90IHJldHVybkNvZGU7XG4gIFxuICBcbi8vIFJldG91cm5lIGxlIGNvZGUgZHUgcHJvY2Vzc3VzIGF0dGVuZHUgKG91IC0xIHNpIGVycmV1cilcbnJldHVybkNvZGUgPSB3YWl0KCZhbXA7c3RhdHVzKTsgIFxuICBcbmlmICggcmV0dXJuQ29kZSAhPSAtMSlcbntcbiAgICBwcmludGYoJnF1b3Q7TW9uIGZpbHMgJWQgcyZhcG9zO2VzdCB0ZXJtaW5cdTAwZTkgYXZlYyBsZSBjb2RlICVkIFxcbiZxdW90OywgcmV0dXJuQ29kZSwgV0VYSVRTVEFUVVMoc3RhdHVzKSk7XG59XG5gYGBgXG4ifQ==---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "}Q}2B", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Processus"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Appel pour ouvrir ou créer un fichier?", 
                                        "<p><code>int open(char* chemin, int flags)</code></p><br><p>Exemple:</p><br><p><code>open(\"toto\", O_RDWR | O_CREAT);</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzMzQzMjMsICJpZCI6ICIxNTExNzIwNzg5Mjk1LTAwMSIsICJtZCI6ICJgaW50IG9wZW4oY2hhciogY2hlbWluLCBpbnQgZmxhZ3MpYFxuICBcbkV4ZW1wbGU6XG4gIFxuYG9wZW4oJnF1b3Q7dG90byZxdW90OywgT19SRFdSIHwgT19DUkVBVCk7YFxuIn0=---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "Cd@<L", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SGF"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Appel pour transformer un File Descriptor en FILE*?", 
                                        "<p><code>FILE* fdopen(int fd, char* mode);</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzMzQ3MTMsICJpZCI6ICIxNTExNzIxMTI5MjUxLTAwMSIsICJtZCI6ICJgRklMRSogZmRvcGVuKGludCBmZCwgY2hhciogbW9kZSk7YFxuIn0=---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "i7xHQ", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Tubes"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Appel pour créer un tube?", 
                                        "<p><code>int pipe(int tube[2])</code></p>\n<p>Retourne -1 si erreur</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzMzQ0MDEsICJpZCI6ICIxNTExNzIxMjA1OTUwLTAwMSIsICJtZCI6ICJgaW50IHBpcGUoaW50IHR1YmVbMl0pYFxuICBcbnJldG91cm5lIC0xIHNpIGVycmV1clxuIn0=---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": ").]:E", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SGF", 
                                        "Tubes"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Appel pour écrire dans un descripteur de fichier (ou un tube)?", 
                                        "<div>`ssize_t write (int fd[1], char* src, int taille);`</div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "@m3KL", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Tubes"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Appel pour fermer un descripteur de fichier (ou un tube)?", 
                                        "<p><code>int close(int fd)</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzMzQwODEsICJpZCI6ICIxNTExNzIxNDM0MDgwLTAwMSIsICJtZCI6ICJgaW50IGNsb3NlKGludCBmZClgXG4ifQ==---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "p_2gF", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SGF"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Appel système pour dupliquer un descripteur de fichier.", 
                                        "<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #8f5902;font-style: italic\">/* Crée une copie du descripteur de fichier */</span>\n<span style=\"color: #204a87; font-weight: bold\">int</span> <span style=\"color: #000000\">dup</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #204a87; font-weight: bold\">int</span> <span style=\"color: #000000\">oldfd</span><span style=\"color: #000000; font-weight: bold\">)</span>\n\n<span style=\"color: #8f5902; font-style: italic\">/* Crée une copie de oldfd et s'arrete là si </span>\n<span style=\"color: #8f5902; font-style: italic\">oldfd n'est pas un descripteur valide. Ferme </span>\n<span style=\"color: #8f5902; font-style: italic\">newfd s'il était ouvert et écrase le descripteur</span>\n<span style=\"color: #8f5902; font-style: italic\">newfd par une copie de oldfd */</span>\n<span style=\"color: #204a87; font-weight: bold\">int</span> <span style=\"color: #000000\">dup2</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #204a87; font-weight: bold\">int</span> <span style=\"color: #000000\">oldfd</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #204a87; font-weight: bold\">int</span> <span style=\"color: #000000\">newfd</span><span style=\"color: #000000; font-weight: bold\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzNDA2MTQsICJpZCI6ICIxNTExNzIxNTI4MTE1LTAwMSIsICJtZCI6ICJgYGBgY1xuLyogQ3JcdTAwZTllIHVuZSBjb3BpZSBkdSBkZXNjcmlwdGV1ciBkZSBmaWNoaWVyICovXG5pbnQgZHVwKGludCBvbGRmZClcbiAgXG4vKiBDclx1MDBlOWUgdW5lIGNvcGllIGRlIG9sZGZkIGV0IHMmYXBvczthcnJldGUgbFx1MDBlMCBzaSBcbm9sZGZkIG4mYXBvcztlc3QgcGFzIHVuIGRlc2NyaXB0ZXVyIHZhbGlkZS4gRmVybWUgXG5uZXdmZCBzJmFwb3M7aWwgXHUwMGU5dGFpdCBvdXZlcnQgZXQgXHUwMGU5Y3Jhc2UgbGUgZGVzY3JpcHRldXJcbm5ld2ZkIHBhciB1bmUgY29waWUgZGUgb2xkZmQgKi9cbmludCBkdXAyKGludCBvbGRmZCwgaW50IG5ld2ZkKVxuICBcbmBgYGBcbiJ9---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "@N?bP", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SGF"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Algorithme pour lire une ligne ? (tubes)", 
                                        "<h3>fgets(string dest, int taille, FILE* stream)</h3>\n<p>Utilisation:  </p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #204a87;font-weight: bold\">void</span> <span style=\"color: #000000\">codeFils</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #204a87; font-weight: bold\">int</span> <span style=\"color: #000000\">noFils</span><span style=\"color: #000000; font-weight: bold\">)</span>  \n<span style=\"color: #000000; font-weight: bold\">{</span>\n<span style=\"color: #ce5c00; font-weight: bold\">&gt;</span> <span style=\"color: #204a87; font-weight: bold\">char</span> <span style=\"color: #000000\">chaine</span><span style=\"color: #000000; font-weight: bold\">[</span><span style=\"color: #000000\">LG</span><span style=\"color: #000000; font-weight: bold\">];</span>\n<span style=\"color: #ce5c00; font-weight: bold\">&gt;</span> \n<span style=\"color: #ce5c00; font-weight: bold\">&gt;</span> <span style=\"color: #204a87; font-weight: bold\">while</span><span style=\"color: #000000; font-weight: bold\">(</span> <span style=\"color: #000000\">fgets</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #000000\">chaine</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #0000cf; font-weight: bold\">80</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #000000\">stdin</span><span style=\"color: #000000; font-weight: bold\">)</span> <span style=\"color: #ce5c00; font-weight: bold\">!=</span> <span style=\"color: #204a87\">NULL</span><span style=\"color: #000000; font-weight: bold\">)</span>\n<span style=\"color: #ce5c00; font-weight: bold\">&gt;</span> \n<span style=\"color: #ce5c00; font-weight: bold\">&gt;</span> <span style=\"color: #000000; font-weight: bold\">{</span>\n<span style=\"color: #ce5c00; font-weight: bold\">&gt;</span> \n<span style=\"color: #ce5c00; font-weight: bold\">&gt;</span>      <span style=\"color: #204a87; font-weight: bold\">if</span> <span style=\"color: #000000; font-weight: bold\">(</span> <span style=\"color: #000000\">chaine</span><span style=\"color: #000000; font-weight: bold\">[</span> <span style=\"color: #000000\">strlen</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #000000\">chaine</span><span style=\"color: #000000; font-weight: bold\">)</span> <span style=\"color: #ce5c00; font-weight: bold\">-</span> <span style=\"color: #0000cf; font-weight: bold\">1</span> <span style=\"color: #000000; font-weight: bold\">]</span> <span style=\"color: #ce5c00; font-weight: bold\">==</span> <span style=\"color: #4e9a06\">'\\n'</span> <span style=\"color: #000000; font-weight: bold\">)</span>\n<span style=\"color: #ce5c00; font-weight: bold\">&gt;</span> \n<span style=\"color: #ce5c00; font-weight: bold\">&gt;</span>      <span style=\"color: #000000; font-weight: bold\">{</span>\n<span style=\"color: #ce5c00; font-weight: bold\">&gt;</span> \n<span style=\"color: #ce5c00; font-weight: bold\">&gt;</span>          <span style=\"color: #000000\">chaine</span> <span style=\"color: #000000; font-weight: bold\">[</span> <span style=\"color: #000000\">strlen</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #000000\">chaine</span><span style=\"color: #000000; font-weight: bold\">)</span> <span style=\"color: #ce5c00; font-weight: bold\">-</span> <span style=\"color: #0000cf; font-weight: bold\">1</span> <span style=\"color: #000000; font-weight: bold\">]</span> <span style=\"color: #ce5c00; font-weight: bold\">=</span> <span style=\"color: #4e9a06\">'\\0'</span><span style=\"color: #000000; font-weight: bold\">;</span>\n<span style=\"color: #ce5c00; font-weight: bold\">&gt;</span> \n<span style=\"color: #ce5c00; font-weight: bold\">&gt;</span>      <span style=\"color: #000000; font-weight: bold\">}</span>\n<span style=\"color: #ce5c00; font-weight: bold\">&gt;</span> \n<span style=\"color: #ce5c00; font-weight: bold\">&gt;</span>   \n<span style=\"color: #ce5c00; font-weight: bold\">&gt;</span> \n<span style=\"color: #ce5c00; font-weight: bold\">&gt;</span>     <span style=\"color: #000000\">printf</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #4e9a06\">\"Fils &lt;%d&gt;: &lt;%s&gt;. \\n\"</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #000000\">nofils</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #000000\">chaine</span><span style=\"color: #000000; font-weight: bold\">);</span>\n<span style=\"color: #ce5c00; font-weight: bold\">&gt;</span> \n<span style=\"color: #ce5c00; font-weight: bold\">&gt;</span> <span style=\"color: #000000; font-weight: bold\">}</span>\n<span style=\"color: #000000; font-weight: bold\">}</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzMzAwMDEsICJpZCI6ICIxNTEyMjI2NDI3NDI5LTAwMSIsICJtZCI6ICIjIyMgZmdldHMoc3RyaW5nIGRlc3QsIGludCB0YWlsbGUsIEZJTEUqIHN0cmVhbSlcbiAgXG5VdGlsaXNhdGlvbjogIFxuICBcbmBgYGBjXG4gIFxudm9pZCBjb2RlRmlscyhpbnQgbm9GaWxzKSAgXG57XG4mZ3Q7IGNoYXIgY2hhaW5lW0xHXTtcbiZndDsgXG4mZ3Q7IHdoaWxlKCBmZ2V0cyhjaGFpbmUsIDgwLCBzdGRpbikgIT0gTlVMTClcbiZndDsgXG4mZ3Q7IHtcbiZndDsgXG4mZ3Q7ICAgICAgaWYgKCBjaGFpbmVbIHN0cmxlbihjaGFpbmUpIC0gMSBdID09ICZhcG9zO1xcbiZhcG9zOyApXG4mZ3Q7IFxuJmd0OyAgICAgIHtcbiZndDsgXG4mZ3Q7ICAgICAgICAgIGNoYWluZSBbIHN0cmxlbihjaGFpbmUpIC0gMSBdID0gJmFwb3M7XFwwJmFwb3M7O1xuJmd0OyBcbiZndDsgICAgICB9XG4mZ3Q7IFxuJmd0OyAgIFxuJmd0OyBcbiZndDsgICAgIHByaW50ZigmcXVvdDtGaWxzICZsdDslZCZndDs6ICZsdDslcyZndDsuIFxcbiZxdW90Oywgbm9maWxzLCBjaGFpbmUpO1xuJmd0OyBcbiZndDsgfVxufVxuYGBgYFxuIn0=---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "xDRBU", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Tubes"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Commande pour lister tous les signaux", 
                                        "<p><code>kill -l</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzNDIxMjcsICJpZCI6ICIxNTEyMjI2NDgzMDkxLTAwMSIsICJtZCI6ICJga2lsbCAtbGBcbiJ9---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "v+|&4", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Appel système pour l'envoie de signaux", 
                                        "<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #8f5902;font-style: italic\">#include &lt;sys/types.h&gt;</span>\n<span style=\"color: #8f5902; font-style: italic\">#include &lt;signal.h&gt;  </span>\n\n<span style=\"color: #8f5902; font-style: italic\">/* Envoie le signal 'sig' au processus pid */</span>\n<span style=\"color: #204a87; font-weight: bold\">int</span> <span style=\"color: #000000\">kill</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #204a87; font-weight: bold\">pid_t</span> <span style=\"color: #000000\">pid</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #204a87; font-weight: bold\">int</span> <span style=\"color: #000000\">sig</span><span style=\"color: #000000; font-weight: bold\">);</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzNDE1MzcsICJpZCI6ICIxNTEyMjI2NTMxNjU0LTAwMSIsICJtZCI6ICJgYGBgY1xuICBcbiNpbmNsdWRlICZsdDtzeXMvdHlwZXMuaCZndDtcbiNpbmNsdWRlICZsdDtzaWduYWwuaCZndDsgIFxuICBcbi8qIEVudm9pZSBsZSBzaWduYWwgJmFwb3M7c2lnJmFwb3M7IGF1IHByb2Nlc3N1cyBwaWQgKi9cbmludCBraWxsKHBpZF90IHBpZCwgaW50IHNpZyk7XG4gIFxuICBcbmBgYGBcbiAgXG4ifQ==---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "O`2`6", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Type pour un ensemble de signaux", 
                                        "<p><code>sigset_t</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzNDE4NTIsICJpZCI6ICIxNTEyMjI2NzU1NDA3LTAwMSIsICJtZCI6ICJgc2lnc2V0X3RgXG4ifQ==---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "BzpL5", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Vider un ensemble de signaux (ou débloquer les signaux une fois on a fini le traîtement)", 
                                        "<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #000000\">sigemptyset</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #204a87; font-weight: bold\">sigset_t</span> <span style=\"color: #ce5c00; font-weight: bold\">*</span><span style=\"color: #000000\">set</span><span style=\"color: #000000; font-weight: bold\">)</span>\n</pre></div>\n<p>Retourne -1 si erreur, 0 si OK</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzNDIyOTksICJpZCI6ICIxNTEyMjI2Nzk5ODUwLTAwMSIsICJtZCI6ICJgYGBgY1xuc2lnZW1wdHlzZXQoc2lnc2V0X3QgKnNldClcbmBgYGAgIFxuUmV0b3VybmUgLTEgc2kgZXJyZXVyLCAwIHNpIE9LXG4ifQ==---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "y<_H4", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Remplir un ensemble avec tous les signaux", 
                                        "<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #000000\">sigfillset</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #204a87; font-weight: bold\">sigset_t</span> <span style=\"color: #ce5c00; font-weight: bold\">*</span><span style=\"color: #000000\">set</span><span style=\"color: #000000; font-weight: bold\">)</span>\n</pre></div>\n<p>Retourne -1 si erreur, 0 sinon</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzNDIzMTEsICJpZCI6ICIxNTEyMjI2ODY2Njc5LTAwMSIsICJtZCI6ICJgYGBgY1xuc2lnZmlsbHNldChzaWdzZXRfdCAqc2V0KVxuYGBgYCAgXG5SZXRvdXJuZSAtMSBzaSBlcnJldXIsIDAgc2lub25cbiJ9---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "zb2aO", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Ajouter un signal à l'ensemble", 
                                        "<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #000000\">sigaddset</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #204a87; font-weight: bold\">sigset_t</span> <span style=\"color: #ce5c00; font-weight: bold\">*</span><span style=\"color: #000000\">set</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #204a87; font-weight: bold\">int</span> <span style=\"color: #000000\">sig</span><span style=\"color: #000000; font-weight: bold\">);</span>\n</pre></div>\n<p>Retourne -1 si erreur, 0 sinon</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzNDIzMjQsICJpZCI6ICIxNTEyMjI2OTA5NDI0LTAwMSIsICJtZCI6ICJgYGBgY1xuICBcbnNpZ2FkZHNldChzaWdzZXRfdCAqc2V0LCBpbnQgc2lnKTtcbiAgXG5gYGBgICBcbiAgXG5SZXRvdXJuZSAtMSBzaSBlcnJldXIsIDAgc2lub25cbiJ9---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "Hl`MJ", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Retirer un signal de l'ensemble", 
                                        "<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #000000\">sigdelset</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #204a87; font-weight: bold\">sigset_t</span> <span style=\"color: #ce5c00; font-weight: bold\">*</span><span style=\"color: #000000\">set</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #204a87; font-weight: bold\">int</span> <span style=\"color: #000000\">sig</span><span style=\"color: #000000; font-weight: bold\">)</span>\n</pre></div>\n<p>Retourne -1 si erreur, 0 sinon</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzNDIzNDIsICJpZCI6ICIxNTEyMjI2OTU1MTcwLTAwMSIsICJtZCI6ICJgYGBgY1xuc2lnZGVsc2V0KHNpZ3NldF90ICpzZXQsIGludCBzaWcpXG5gYGBgICBcblJldG91cm5lIC0xIHNpIGVycmV1ciwgMCBzaW5vblxuIn0=---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "L]B]1", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Vérifie si un signal est dans l'ensemble", 
                                        "<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #000000\">sigismember</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #204a87; font-weight: bold\">sigset_t</span> <span style=\"color: #ce5c00; font-weight: bold\">*</span><span style=\"color: #000000\">set</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #204a87; font-weight: bold\">int</span> <span style=\"color: #000000\">signum</span><span style=\"color: #000000; font-weight: bold\">)</span>\n</pre></div>\n<p>Renvoie:  </p>\n<ul>\n<li style=\"text-align: left; \">1 si sig est dans <code>set</code></li>\n<li style=\"text-align: left; \">0 si sig n'est pas dans <code>set</code></li>\n<li style=\"text-align: left; \">-1 si erreur</li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzNDIyNTksICJpZCI6ICIxNTEyMjI2OTk2NjgyLTAwMSIsICJtZCI6ICJgYGBgY1xuc2lnaXNtZW1iZXIoc2lnc2V0X3QgKnNldCwgaW50IHNpZ251bSlcbmBgYGAgIFxuUmVudm9pZTogIFxuICBcbiogMSBzaSBzaWcgZXN0IGRhbnMgYHNldGBcbiogMCBzaSBzaWcgbiZhcG9zO2VzdCBwYXMgZGFucyBgYHNldGBgXG4qIC0xIHNpIGVycmV1clxuIn0=---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "K8?(F", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Masque temporairement les signaux de l'ensemble et endort le programme jusquà reception d'un des signaux", 
                                        "<p><code>sigsuspend(sigset_t *mask)</code></p>\n<p>Renvoie -1 si erreur</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzNDIwNjUsICJpZCI6ICIxNTEyMjI3MDcwMjQzLTAwMSIsICJtZCI6ICJgc2lnc3VzcGVuZChzaWdzZXRfdCAqbWFzaylgXG4gIFxuUmVudm9pZSAtMSBzaSBlcnJldXJcbiJ9---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "6/ydG", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Comment récuperer la liste de signaux pour lesquels on a une protéction masque dessus?", 
                                        "<p><code>int sigpending(sigset_t *set);</code></p>\n<ul>\n<li style=\"text-align: left; \">Écrit dans <code>set</code> la liste des signaux bloqués.  </li>\n<li style=\"text-align: left; \">Renvoie 0 si ok, -1 si erreur</li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzNDIyMjksICJpZCI6ICIxNTEyMjI3MTkxNjM5LTAwMSIsICJtZCI6ICJgaW50IHNpZ3BlbmRpbmcoc2lnc2V0X3QgKnNldCk7IGBcbiAgXG4tIFx1MDBjOWNyaXQgZGFucyBgc2V0YCBsYSBsaXN0ZSBkZXMgc2lnbmF1eCBibG9xdVx1MDBlOXMuICBcbi0gUmVudm9pZSAwIHNpIG9rLCAtMSBzaSBlcnJldXJcbiJ9---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "[xQhT", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<p>Comment bloquer des signaux? Quelles possibilités existent pour le flag <code>how</code> ?</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzNDI1ODAsICJpZCI6ICIxNTEyMjI3MjQ2MzIwLTAwMCIsICJtZCI6ICJDb21tZW50IGJsb3F1ZXIgZGVzIHNpZ25hdXg/IFF1ZWxsZXMgcG9zc2liaWxpdFx1MDBlOXMgZXhpc3RlbnQgcG91ciBsZSBmbGFnIGBob3dgID9cbiJ9---->", 
                                        "<p><code>int sigprocmask(int how, sigset_t *set, sigset_t *oldset)</code></p>\n<p><code>how</code>:</p>\n<ul>\n<li style=\"text-align: left; \"><code>SIG_SETMASK</code> remplace <code>oldset</code> par <code>set</code></li>\n<li style=\"text-align: left; \"><code>SIG_BLOCK\b</code> bloque les signaux de <code>set</code> et ceux de <code>oldset</code></li>\n<li style=\"text-align: left; \"><code>SIG_UNBLOCK</code> débloque les signaux de <code>set</code></li>\n</ul>\n<h3>Renvoie 0 si OK, -1 si erreur</h3><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzNDI2NjMsICJpZCI6ICIxNTEyMjI3MjQ2MzIwLTAwMSIsICJtZCI6ICJgaW50IHNpZ3Byb2NtYXNrKGludCBob3csIHNpZ3NldF90ICpzZXQsIHNpZ3NldF90ICpvbGRzZXQpYFxuICBcbmBob3dgOlxuICBcbi0gYGBTSUdfU0VUTUFTS2BgIHJlbXBsYWNlIGBgb2xkc2V0YGAgcGFyIGBgc2V0YGBcbi0gYGBTSUdfQkxPQ0tcYmBgIGJsb3F1ZSBsZXMgc2lnbmF1eCBkZSBgc2V0YCBldCBjZXV4IGRlIGBgb2xkc2V0YGBcbi0gYGBTSUdfVU5CTE9DS2BgIGRcdTAwZTlibG9xdWUgbGVzIHNpZ25hdXggZGUgYGBzZXRgYFxuICBcbiMjIyBSZW52b2llIDAgc2kgT0ssIC0xIHNpIGVycmV1clxuIn0=---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "<p6_P", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Parcours des signaux", 
                                        "<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #204a87;font-weight: bold\">for</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #000000\">sig</span> <span style=\"color: #ce5c00; font-weight: bold\">=</span> <span style=\"color: #0000cf; font-weight: bold\">1</span><span style=\"color: #000000; font-weight: bold\">;</span> <span style=\"color: #000000\">sig</span> <span style=\"color: #ce5c00; font-weight: bold\">&lt;</span> <span style=\"color: #000000\">NSIG</span><span style=\"color: #000000; font-weight: bold\">;</span> <span style=\"color: #000000\">sig</span><span style=\"color: #ce5c00; font-weight: bold\">++</span><span style=\"color: #000000; font-weight: bold\">)</span>  \n<span style=\"color: #000000; font-weight: bold\">{</span>  \n    <span style=\"color: #204a87; font-weight: bold\">if</span><span style=\"color: #000000; font-weight: bold\">(</span> <span style=\"color: #000000\">sigismember</span> <span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #ce5c00; font-weight: bold\">&amp;</span><span style=\"color: #000000\">signaux</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #000000\">sig</span><span style=\"color: #000000; font-weight: bold\">))</span>\n    <span style=\"color: #000000; font-weight: bold\">{</span>\n        <span style=\"color: #8f5902; font-style: italic\">// Code...</span>\n    <span style=\"color: #000000; font-weight: bold\">}</span>\n<span style=\"color: #000000; font-weight: bold\">}</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzNDI4NzMsICJpZCI6ICIxNTEyMjI3Mzc2OTIwLTAwMSIsICJtZCI6ICJgYGBgY1xuZm9yKHNpZyA9IDE7IHNpZyAmbHQ7IE5TSUc7IHNpZysrKSAgXG57ICBcbiAgICBpZiggc2lnaXNtZW1iZXIgKCZhbXA7c2lnbmF1eCwgc2lnKSlcbiAgICB7XG4gICAgICAgIC8vIENvZGUuLi5cbiAgICB9XG59XG5gYGBgXG4ifQ==---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "O^VlD", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Pointeurs de fonctions en C", 
                                        "<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #000000\">returnType</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #ce5c00; font-weight: bold\">*</span><span style=\"color: #000000\">maFonction</span><span style=\"color: #000000; font-weight: bold\">)(</span><span style=\"color: #000000\">type</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #000000\">type</span><span style=\"color: #000000; font-weight: bold\">)</span>  \n<span style=\"color: #000000\">returnType</span> <span style=\"color: #000000\">fonction</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #000000\">type</span> <span style=\"color: #000000\">t</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #000000\">type</span> <span style=\"color: #000000\">t</span><span style=\"color: #000000; font-weight: bold\">)</span> <span style=\"color: #000000; font-weight: bold\">{}</span>\n<span style=\"color: #000000\">maFonction</span> <span style=\"color: #ce5c00; font-weight: bold\">=</span> <span style=\"color: #000000\">fonction</span><span style=\"color: #000000; font-weight: bold\">;</span>\n</pre></div>\n<p>Example: </p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #8f5902; font-style: italic\">/* Declaration */</span>\n<span style=\"color: #204a87; font-weight: bold\">double</span> <span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #ce5c00; font-weight: bold\">*</span><span style=\"color: #000000\">maFonction</span><span style=\"color: #000000; font-weight: bold\">)</span> <span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #204a87; font-weight: bold\">double</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #204a87; font-weight: bold\">int</span><span style=\"color: #000000; font-weight: bold\">);</span>\n\n<span style=\"color: #8f5902; font-style: italic\">/* Affectation (vérification du typage) */</span>\n<span style=\"color: #204a87; font-weight: bold\">double</span> <span style=\"color: #000000\">puissance</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #204a87; font-weight: bold\">double</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #204a87; font-weight: bold\">int</span><span style=\"color: #000000; font-weight: bold\">)</span>\n<span style=\"color: #000000; font-weight: bold\">{</span>\n    <span style=\"color: #8f5902; font-style: italic\">/* code de \"puissance\" */</span>\n<span style=\"color: #000000; font-weight: bold\">}</span>\n<span style=\"color: #000000\">maFonction</span> <span style=\"color: #ce5c00; font-weight: bold\">=</span> <span style=\"color: #000000\">puissance</span><span style=\"color: #000000; font-weight: bold\">;</span><span style=\"color: #a40000; border: 1px solid #ef2929\">\b</span>  \n\n<span style=\"color: #8f5902; font-style: italic\">/* Utilisation */</span>  \n<span style=\"color: #000000\">resultat</span> <span style=\"color: #ce5c00; font-weight: bold\">=</span> <span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #ce5c00; font-weight: bold\">*</span><span style=\"color: #000000\">maFonction</span><span style=\"color: #000000; font-weight: bold\">)(</span><span style=\"color: #0000cf; font-weight: bold\">1.5</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #0000cf; font-weight: bold\">2</span><span style=\"color: #000000; font-weight: bold\">);</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzNDM2MjQsICJpZCI6ICIxNTEyMjI3NDcwMzk3LTAwMSIsICJtZCI6ICJgYGBgY1xucmV0dXJuVHlwZSgqbWFGb25jdGlvbikodHlwZSwgdHlwZSkgIFxucmV0dXJuVHlwZSBmb25jdGlvbih0eXBlIHQsIHR5cGUgdCkge31cbm1hRm9uY3Rpb24gPSBmb25jdGlvbjtcbmBgYGAgIFxuICBcbkV4YW1wbGU6IFxuICBcbmBgYGBjXG4vKiBEZWNsYXJhdGlvbiAqL1xuZG91YmxlICgqbWFGb25jdGlvbikgKGRvdWJsZSwgaW50KTtcbiAgXG4vKiBBZmZlY3RhdGlvbiAodlx1MDBlOXJpZmljYXRpb24gZHUgdHlwYWdlKSAqL1xuZG91YmxlIHB1aXNzYW5jZShkb3VibGUsIGludClcbntcbiAgICAvKiBjb2RlIGRlICZxdW90O3B1aXNzYW5jZSZxdW90OyAqL1xufVxubWFGb25jdGlvbiA9IHB1aXNzYW5jZTtcYiAgXG4gIFxuLyogVXRpbGlzYXRpb24gKi8gIFxucmVzdWx0YXQgPSAoKm1hRm9uY3Rpb24pKDEuNSwgMik7XG4gIFxuYGBgYFxuIn0=---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "S?QQO", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux", 
                                        "Theorie", 
                                        "TheorieProgSys"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Structure de sigaction (pour les détournements)", 
                                        "<p>Ayant  <code>struct sigaction action</code> ...  </p>\n<p><code>action.sa_handler</code>  - Function appelé quand un signal est detourné </p>\n<p><code>action.sa_mask</code> - Ensemble des signaux detournés pendant l'execution  </p>\n<p><code>action.sa_flags</code> - Les drapeaux a mettre si souhaité, normalment 0.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzNTE2NzMsICJpZCI6ICIxNTEyMjI3NjAwNTY4LTAwMSIsICJtZCI6ICJBeWFudCAgYHN0cnVjdCBzaWdhY3Rpb24gYWN0aW9uYCAuLi4gIFxuICBcbiAgXG5gYWN0aW9uLnNhX2hhbmRsZXJgICAtIEZ1bmN0aW9uIGFwcGVsXHUwMGU5IHF1YW5kIHVuIHNpZ25hbCBlc3QgZGV0b3Vyblx1MDBlOSBcbiAgXG5gYWN0aW9uLnNhX21hc2tgIC0gRW5zZW1ibGUgZGVzIHNpZ25hdXggZGV0b3Vyblx1MDBlOXMgcGVuZGFudCBsJmFwb3M7ZXhlY3V0aW9uICBcbiAgXG5gYWN0aW9uLnNhX2ZsYWdzYCAtIExlcyBkcmFwZWF1eCBhIG1ldHRyZSBzaSBzb3VoYWl0XHUwMGU5LCBub3JtYWxtZW50IDAuXG4ifQ==---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "(i8U3", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Algorithme pour détourner un signal", 
                                        "<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #000000\">sigaction</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #204a87; font-weight: bold\">int</span> <span style=\"color: #000000\">sigADetourner</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #000000\">sigaction</span> <span style=\"color: #ce5c00; font-weight: bold\">*</span><span style=\"color: #000000\">action</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #000000\">sigaction</span> <span style=\"color: #ce5c00; font-weight: bold\">*</span><span style=\"color: #000000\">oldAction</span><span style=\"color: #000000; font-weight: bold\">)</span>\n</pre></div>\n<p>Exemple:</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #204a87; font-weight: bold\">void</span> <span style=\"color: #000000\">coucou</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #204a87; font-weight: bold\">int</span> <span style=\"color: #000000\">sig</span><span style=\"color: #000000; font-weight: bold\">)</span>\n<span style=\"color: #000000; font-weight: bold\">{</span>\n    <span style=\"color: #000000\">printf</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #4e9a06\">\"Coucou, sig %d\\n\"</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #000000\">sig</span><span style=\"color: #000000; font-weight: bold\">);</span>\n<span style=\"color: #000000; font-weight: bold\">}</span>\n</pre></div>\n<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #204a87; font-weight: bold\">struct</span> <span style=\"color: #000000\">sigaction</span> <span style=\"color: #000000\">action</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #000000\">save</span><span style=\"color: #000000; font-weight: bold\">;</span>\n\n<span style=\"color: #000000\">sigemptyset</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #ce5c00; font-weight: bold\">&amp;</span><span style=\"color: #000000\">action</span><span style=\"color: #000000; font-weight: bold\">.</span><span style=\"color: #000000\">sa_mask</span><span style=\"color: #000000; font-weight: bold\">);</span>\n<span style=\"color: #000000\">action</span><span style=\"color: #000000; font-weight: bold\">.</span><span style=\"color: #000000\">set_handler</span> <span style=\"color: #ce5c00; font-weight: bold\">=</span> <span style=\"color: #000000\">coucou</span><span style=\"color: #000000; font-weight: bold\">;</span>\n<span style=\"color: #000000\">action</span><span style=\"color: #000000; font-weight: bold\">.</span><span style=\"color: #000000\">sa_flags</span> <span style=\"color: #ce5c00; font-weight: bold\">=</span> <span style=\"color: #0000cf; font-weight: bold\">0</span><span style=\"color: #000000; font-weight: bold\">;</span>\n\n<span style=\"color: #204a87; font-weight: bold\">if</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #000000\">sigaction</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #000000\">SIGQUIT</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #ce5c00; font-weight: bold\">&amp;</span><span style=\"color: #000000\">action</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #ce5c00; font-weight: bold\">&amp;</span><span style=\"color: #000000\">save</span><span style=\"color: #000000; font-weight: bold\">))</span>\n<span style=\"color: #000000; font-weight: bold\">{</span>\n    <span style=\"color: #000000\">perror</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #4e9a06\">\"Installation coucou\"</span><span style=\"color: #000000; font-weight: bold\">);</span> <span style=\"color: #000000\">exit</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #0000cf; font-weight: bold\">1</span><span style=\"color: #000000; font-weight: bold\">);</span>\n<span style=\"color: #000000; font-weight: bold\">}</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzNDQyOTQsICJpZCI6ICIxNTEyMjI3NzUwMjAwLTAwMSIsICJtZCI6ICJgYGBgY1xuc2lnYWN0aW9uKGludCBzaWdBRGV0b3VybmVyLCBzaWdhY3Rpb24gKmFjdGlvbiwgc2lnYWN0aW9uICpvbGRBY3Rpb24pXG5gYGBgXG4gIFxuRXhlbXBsZTpcbiAgXG5gYGBgY1xudm9pZCBjb3Vjb3UoaW50IHNpZylcbntcbiAgICBwcmludGYoJnF1b3Q7Q291Y291LCBzaWcgJWRcXG4mcXVvdDssIHNpZyk7XG59XG5gYGBgXG4gIFxuYGBgYGNcbnN0cnVjdCBzaWdhY3Rpb24gYWN0aW9uLCBzYXZlO1xuICBcbnNpZ2VtcHR5c2V0KCZhbXA7YWN0aW9uLnNhX21hc2spO1xuYWN0aW9uLnNldF9oYW5kbGVyID0gY291Y291O1xuYWN0aW9uLnNhX2ZsYWdzID0gMDtcbiAgXG5pZihzaWdhY3Rpb24oU0lHUVVJVCwgJmFtcDthY3Rpb24sICZhbXA7c2F2ZSkpXG57XG4gICAgcGVycm9yKCZxdW90O0luc3RhbGxhdGlvbiBjb3Vjb3UmcXVvdDspOyBleGl0KDEpO1xufVxuICBcbiAgXG5gYGBgXG4ifQ==---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": ".dm`5", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Définition de <i>section critique</i>", 
                                        "Une section critique est une partie de code ne devant être executée que par un seul processus à la fois."
                                    ], 
                                    "flags": 0, 
                                    "guid": "~FWd5", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionRessources"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Prendre un jeton (Sémaphore)", 
                                        "semP"
                                    ], 
                                    "flags": 0, 
                                    "guid": "Mq)y6", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionRessources"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Rendre un jeton (Sémaphore)", 
                                        "semV"
                                    ], 
                                    "flags": 0, 
                                    "guid": "#:w{U", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionRessources"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Bloque le processus tant que jetons > 0", 
                                        "semZ"
                                    ], 
                                    "flags": 0, 
                                    "guid": "|-ICB", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionRessources"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Retourne le nombre de jetons (Sémaphore)", 
                                        "semR"
                                    ], 
                                    "flags": 0, 
                                    "guid": "t{DaC", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionRessources"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce qu'un systeme ?", 
                                        "Programme central qui fait l'interface entre le materiel et les applications"
                                    ], 
                                    "flags": 0, 
                                    "guid": "A,g-@#t|*t", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Theorie", 
                                        "TheorieProgSys"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "C'est quoi le rôle d'un système?", 
                                        "- Masquer le matériel<br>- Gérer et partager les ressources<div>&nbsp; &nbsp; - Processus<br>&nbsp; &nbsp; - Mémoire</div><div>&nbsp; &nbsp; - Système de fichiers</div><div>&nbsp; &nbsp; - Réseau<br><div><br></div></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "jSeYHr!*/j", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Theorie", 
                                        "TheorieProgSys"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Fonctionnalités du noyau Linux? (schéma)", 
                                        "<img src=\"1.jpg\" />"
                                    ], 
                                    "flags": 0, 
                                    "guid": "i(gFCF6K-?", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Theorie", 
                                        "TheorieProgSys"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce qu'une API?", 
                                        "<i>Application Programming Interface</i><br /><br />Dans un programe, on utilise une fonction qui a éte définie et expliqué, mais on sait pas comment elle a été faite"
                                    ], 
                                    "flags": 0, 
                                    "guid": "lN0K1L?BWe", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Theorie", 
                                        "TheorieProgSys"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que POSIX? Qu'est-ce qu'il définit?", 
                                        "<i>Portable Operating System Interface</i><br /><br />POSIX définit notamment:<br /><br />- Les commandes shell de base<br />- L'API des appels systemes<br />- Les extensions \"temps réel\"<br />- L'API des threads&nbsp;"
                                    ], 
                                    "flags": 0, 
                                    "guid": "w~Y_d3Pd]]", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Theorie", 
                                        "TheorieProgSys"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que 'exec()' ?", 
                                        "C'est une primitive de recouvrement qui remplace le code à exécuter du processus par un autre. Il lance un processus avec des arguments, comme on le ferait sur la ligne de commande."
                                    ], 
                                    "flags": 0, 
                                    "guid": "vg<L9.JT[[", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Processus"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Comment faire un recouvrement? Utilisation de exec()", 
                                        "<h4>int exec(char* path, char* arg, ..., NULL);</h4>\n<p>Exemple:  </p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #000000\">error</span> <span style=\"color: #ce5c00; font-weight: bold\">=</span> <span style=\"color: #000000\">execl</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #4e9a06\">\"/bin/ls\"</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #4e9a06\">\"ls\"</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #4e9a06\">\"-l\"</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #204a87\">NULL</span><span style=\"color: #000000; font-weight: bold\">);</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzMzMwODcsICJpZCI6ICIxNTE1MzMwOTg1Mzg2LTAwMSIsICJtZCI6ICIjIyMjIGludCBleGVjKGNoYXJcXCogcGF0aCwgY2hhclxcKiBhcmcsIC4uLiwgTlVMTCk7XG4gIFxuRXhlbXBsZTogIFxuICBcbmBgYGBjXG4gIFxuZXJyb3IgPSBleGVjbCgmcXVvdDsvYmluL2xzJnF1b3Q7LCAmcXVvdDtscyZxdW90OywgJnF1b3Q7LWwmcXVvdDssIE5VTEwpO1xuICBcbmBgYGBcbiJ9---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "xhPK0+{ILu", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Processus"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Comment déboguer en progammation système?", 
                                        "<p>Avec la commande <code>strace</code>, permet de tracer les appels système et les signaux</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #000000\">$&gt;</span> strace cat /dev/null  \n\n<span style=\"color: #000000\">$&gt;</span> strace cat /dev/lapinblanc\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzMzE0ODIsICJpZCI6ICIxNTE1MzMxMzUyOTUxLTAwMSIsICJtZCI6ICJBdmVjIGxhIGNvbW1hbmRlIGBzdHJhY2VgLCBwZXJtZXQgZGUgdHJhY2VyIGxlcyBhcHBlbHMgc3lzdFx1MDBlOG1lIGV0IGxlcyBzaWduYXV4XG4gIFxuYGBgYHNoZWxsICBcbiAgXG4kJmd0OyBzdHJhY2UgY2F0IC9kZXYvbnVsbCAgXG4gIFxuJCZndDsgc3RyYWNlIGNhdCAvZGV2L2xhcGluYmxhbmNcbiAgXG5gYGBgXG4ifQ==---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "eD!4^!.VUl", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Theorie", 
                                        "TheorieProgSys"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que l'environnement sous POSIX?", 
                                        "<p>C'est un ensemble des clés/valeurs.  </p>\n<p><code>[Nom de la variable d'environnement] = valeur en char*</code></p>\n<p>Exemples de variables: <em>PS1, USER, SHELL</em></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzMzIzOTAsICJpZCI6ICIxNTE1MzMyMzAwNDQ2LTAwMSIsICJtZCI6ICJDJmFwb3M7ZXN0IHVuIGVuc2VtYmxlIGRlcyBjbFx1MDBlOXMvdmFsZXVycy4gIFxuICBcbmBbTm9tIGRlIGxhIHZhcmlhYmxlIGQmYXBvcztlbnZpcm9ubmVtZW50XSA9IHZhbGV1ciBlbiBjaGFyKmBcbiAgXG5FeGVtcGxlcyBkZSB2YXJpYWJsZXM6ICpQUzEsIFVTRVIsIFNIRUxMKlxuIn0=---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "J?l#V^-+vu", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Processus"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Fonctions pour utiliser l'environnement?&nbsp;", 
                                        "<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #8f5902;font-style: italic\">// Set une variable d'environnement, retourne success  </span>\n<span style=\"color: #204a87; font-weight: bold\">int</span> <span style=\"color: #000000\">sentenv</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #204a87; font-weight: bold\">char</span><span style=\"color: #ce5c00; font-weight: bold\">*</span> <span style=\"color: #000000\">name</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #204a87; font-weight: bold\">const</span> <span style=\"color: #204a87; font-weight: bold\">char</span><span style=\"color: #ce5c00; font-weight: bold\">*</span> <span style=\"color: #000000\">value</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #204a87; font-weight: bold\">int</span> <span style=\"color: #000000\">overwrite</span><span style=\"color: #000000; font-weight: bold\">);</span>\n\n<span style=\"color: #8f5902; font-style: italic\">// Get une variable d'environnement, retourne pointeur sur la value string.</span>\n<span style=\"color: #204a87; font-weight: bold\">char</span><span style=\"color: #ce5c00; font-weight: bold\">*</span> <span style=\"color: #000000\">getenv</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #204a87; font-weight: bold\">char</span><span style=\"color: #ce5c00; font-weight: bold\">*</span> <span style=\"color: #000000\">name</span><span style=\"color: #000000; font-weight: bold\">);</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzMzI2OTAsICJpZCI6ICIxNTE1MzMyNDE3NTM3LTAwMSIsICJtZCI6ICJgYGBgYyAgXG4gIFxuLy8gU2V0IHVuZSB2YXJpYWJsZSBkJmFwb3M7ZW52aXJvbm5lbWVudCwgcmV0b3VybmUgc3VjY2VzcyAgXG5pbnQgc2VudGVudihjaGFyKiBuYW1lLCBjb25zdCBjaGFyKiB2YWx1ZSwgaW50IG92ZXJ3cml0ZSk7XG4gIFxuLy8gR2V0IHVuZSB2YXJpYWJsZSBkJmFwb3M7ZW52aXJvbm5lbWVudCwgcmV0b3VybmUgcG9pbnRldXIgc3VyIGxhIHZhbHVlIHN0cmluZy5cbmNoYXIqIGdldGVudihjaGFyKiBuYW1lKTtcbiAgXG4gIFxuICBcbmBgYGBcbiJ9---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "HGK:Y~am]R", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Processus"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Donne moi la composition d'un disque dur", 
                                        "Un disque dur est composé de plusieurs plateaux et de 2 faces par plateau.<br /><br />Ensuite, chaque plateaux est decoupé en pistes, puis en secteurs."
                                    ], 
                                    "flags": 0, 
                                    "guid": "g|E[2/}+74", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SGF"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Comment calculer l'espace total d'un disque?", 
                                        "<p><code># de faces * # de cylindres * # de secteurs</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzMzQwOTYsICJpZCI6ICIxNTE1MzMzMjcyMzAxLTAwMSIsICJtZCI6ICJgIyBkZSBmYWNlcyAqICMgZGUgY3lsaW5kcmVzICogIyBkZSBzZWN0ZXVyc2BcbiJ9---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "BVT.PtNO!K", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SGF"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce qu'un inode? (index node)", 
                                        "Un inode decrit et identifie un fichier. On ne manipule plus des noms de fichier mais des inodes.<br />"
                                    ], 
                                    "flags": 0, 
                                    "guid": "e|aOuIRjAC", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SGF"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Que contient un inode?", 
                                        "<ul style=\"margin-left: 20px; \"><li>GID / UID (Group ID and User ID)</li><li>Type de fichier</li><li>Droits sur le fichier</li><li>Dates (accès, modification, changement)</li><li>Nombre de hard links</li><li>Taille du fichier</li><li><b>Pointeur sur bloc de données</b></li></ul>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "r;[~Ua.3ue", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SGF"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est qu'un lien dur?", 
                                        "C'est la creation de deux entrees dans la table nom/inode avec le même inode et des noms différents. La source et la destination doivent être sur la\b même partition pour créer un lien dur entre elles.<div><br></div><div>Supprimer un fichier est en faite décrémenter le compteur de liens durs. La supression marche ssi le nombre de liens durs est 0.</div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "DUJL(2Q%&d", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SGF"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Comment créer un lien dur?", 
                                        "<h3>ln <strong>sans l'option -s</strong></h3>\n<p>Exemple:  </p>\n<p><code>ln sourceExistante nomDuLienDur</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzMzM3NjEsICJpZCI6ICIxNTE1MzMzNzE1Nzc0LTAwMSIsICJtZCI6ICIjIyMgbG4gKipzYW5zIGwmYXBvcztvcHRpb24gLXMqKlxuICBcbkV4ZW1wbGU6ICBcbiAgXG5gbG4gc291cmNlRXhpc3RhbnRlIG5vbUR1TGllbkR1cmBcbiJ9---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "yve|DQYElu", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SGF"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quels sont les 7 types de fichier?", 
                                        "<ul>\n<li style=\"text-align: left; \"><code>-</code> Fichier régulier</li>\n<li style=\"text-align: left; \"><code>d</code> Répertoire</li>\n<li style=\"text-align: left; \"><code>l</code> Lien symbolique (ln -s)</li>\n<li style=\"text-align: left; \"><code>p</code> Tube nommé  </li>\n<li style=\"text-align: left; \"><code>b</code> Périphérique (mode bloc)</li>\n<li style=\"text-align: left; \"><code>c</code> Périphérique (mode caractère)</li>\n<li style=\"text-align: left; \"><code>s</code> Socket nommée</li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzMzM5NzIsICJpZCI6ICIxNTE1MzMzNzc2NzQzLTAwMSIsICJtZCI6ICItIGAtYCBGaWNoaWVyIHJcdTAwZTlndWxpZXJcbi0gYGRgIFJcdTAwZTlwZXJ0b2lyZVxuLSBgbGAgTGllbiBzeW1ib2xpcXVlIChsbiAtcylcbi0gYHBgIFR1YmUgbm9tbVx1MDBlOSAgXG4tIGBiYCBQXHUwMGU5cmlwaFx1MDBlOXJpcXVlIChtb2RlIGJsb2MpXG4tIGBjYCBQXHUwMGU5cmlwaFx1MDBlOXJpcXVlIChtb2RlIGNhcmFjdFx1MDBlOHJlKVxuLSBgc2AgU29ja2V0IG5vbW1cdTAwZTllXG4ifQ==---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "B6c]?,5-t&", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SGF"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Comment créer un lien symbolique?", 
                                        "<p><code>ln -s sourceExistante nomLienSymbolique</code></p>\n<p><code>ln</code> crée un autre fichier de type lien qui pointe vers la sourceExistante</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTU1OTk0MzMsICJpZCI6ICIxNTE1MzM0Nzk4MTg0LTAwMSIsICJtZCI6ICJgbG4gLXMgc291cmNlRXhpc3RhbnRlIG5vbUxpZW5TeW1ib2xpcXVlYFxuICBcbmBsbmAgY3JcdTAwZTllIHVuIGF1dHJlIGZpY2hpZXIgZGUgdHlwZSBsaWVuIHF1aSBwb2ludGUgdmVycyBsYSBzb3VyY2VFeGlzdGFudGVcbiJ9---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "g*`Gt{qN)J", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "SGF"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quels moyens de communication entre processus existent?", 
                                        "<ul style=\"margin-left: 20px; \"><li>Pipes</li><li>Fichier</li><li>Sockets</li><li>Mémoire partagé</li><li>Codes de retour</li><li>Variables d'environnement</li></ul>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "zRtcBdx5)/", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Tubes"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Algorithme pour créer et utiliser un tube?", 
                                        "<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #204a87;font-weight: bold\">int</span> <span style=\"color: #000000\">tube</span><span style=\"color: #000000; font-weight: bold\">[</span><span style=\"color: #0000cf; font-weight: bold\">2</span><span style=\"color: #000000; font-weight: bold\">];</span>\n\n<span style=\"color: #204a87; font-weight: bold\">if</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #000000\">pipe</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #000000\">tube</span><span style=\"color: #000000; font-weight: bold\">)</span> <span style=\"color: #ce5c00; font-weight: bold\">==</span> <span style=\"color: #ce5c00; font-weight: bold\">-</span><span style=\"color: #0000cf; font-weight: bold\">1</span><span style=\"color: #000000; font-weight: bold\">)</span>\n<span style=\"color: #000000; font-weight: bold\">{</span>\n    <span style=\"color: #000000\">perror</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #4e9a06\">\"pipe\"</span><span style=\"color: #000000; font-weight: bold\">);</span> <span style=\"color: #000000\">exit</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #000000\">errno</span><span style=\"color: #000000; font-weight: bold\">);</span>\n<span style=\"color: #000000; font-weight: bold\">}</span>\n\n<span style=\"color: #204a87; font-weight: bold\">switch</span> <span style=\"color: #000000; font-weight: bold\">(</span> <span style=\"color: #000000\">fork</span><span style=\"color: #000000; font-weight: bold\">()</span> <span style=\"color: #000000; font-weight: bold\">)</span>\n<span style=\"color: #000000; font-weight: bold\">{</span>\n   <span style=\"color: #204a87; font-weight: bold\">case</span> <span style=\"color: #ce5c00; font-weight: bold\">-</span><span style=\"color: #0000cf; font-weight: bold\">1</span><span style=\"color: #ce5c00; font-weight: bold\">:</span>\n        <span style=\"color: #000000\">perror</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #4e9a06\">\"fork\"</span><span style=\"color: #000000; font-weight: bold\">);</span> <span style=\"color: #000000\">exit</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #000000\">errno</span><span style=\"color: #000000; font-weight: bold\">);</span>\n        <span style=\"color: #204a87; font-weight: bold\">break</span><span style=\"color: #000000; font-weight: bold\">;</span>\n    <span style=\"color: #204a87; font-weight: bold\">case</span> <span style=\"color: #0000cf; font-weight: bold\">0</span><span style=\"color: #ce5c00; font-weight: bold\">:</span> <span style=\"color: #8f5902; font-style: italic\">// le fils</span>\n        <span style=\"color: #000000\">close</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #000000\">tube</span><span style=\"color: #000000; font-weight: bold\">[</span><span style=\"color: #0000cf; font-weight: bold\">1</span><span style=\"color: #000000; font-weight: bold\">]);</span> <span style=\"color: #8f5902; font-style: italic\">// fermer écriture</span>\n        <span style=\"color: #000000\">codeDuFils</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #000000\">tube</span><span style=\"color: #000000; font-weight: bold\">);</span>\n        <span style=\"color: #000000\">exit</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #0000cf; font-weight: bold\">0</span><span style=\"color: #000000; font-weight: bold\">);</span>\n        <span style=\"color: #204a87; font-weight: bold\">break</span><span style=\"color: #000000; font-weight: bold\">;</span>\n    <span style=\"color: #204a87; font-weight: bold\">default</span> <span style=\"color: #ce5c00; font-weight: bold\">:</span> <span style=\"color: #8f5902; font-style: italic\">// le père</span>\n        <span style=\"color: #000000\">close</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #000000\">tube</span><span style=\"color: #000000; font-weight: bold\">[</span><span style=\"color: #0000cf; font-weight: bold\">0</span><span style=\"color: #000000; font-weight: bold\">]);</span> <span style=\"color: #8f5902; font-style: italic\">// fermer lécture</span>\n        <span style=\"color: #000000\">codeDuPere</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #000000\">tube</span><span style=\"color: #000000; font-weight: bold\">);</span>\n<span style=\"color: #000000; font-weight: bold\">}</span>  \n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzMzU1ODYsICJpZCI6ICIxNTE1MzM1MTMyNTI2LTAwMSIsICJtZCI6ICJgYGBgY1xuICBcbmludCB0dWJlWzJdO1xuICBcbmlmKHBpcGUodHViZSkgPT0gLTEpXG57XG4gICAgcGVycm9yKCZxdW90O3BpcGUmcXVvdDspOyBleGl0KGVycm5vKTtcbn1cbiAgXG5zd2l0Y2ggKCBmb3JrKCkgKVxue1xuICAgY2FzZSAtMTpcbiAgICAgICAgcGVycm9yKCZxdW90O2ZvcmsmcXVvdDspOyBleGl0KGVycm5vKTtcbiAgICAgICAgYnJlYWs7XG4gICAgY2FzZSAwOiAvLyBsZSBmaWxzXG4gICAgICAgIGNsb3NlKHR1YmVbMV0pOyAvLyBmZXJtZXIgXHUwMGU5Y3JpdHVyZVxuICAgICAgICBjb2RlRHVGaWxzKHR1YmUpO1xuICAgICAgICBleGl0KDApO1xuICAgICAgICBicmVhaztcbiAgICBkZWZhdWx0IDogLy8gbGUgcFx1MDBlOHJlXG4gICAgICAgIGNsb3NlKHR1YmVbMF0pOyAvLyBmZXJtZXIgbFx1MDBlOWN0dXJlXG4gICAgICAgIGNvZGVEdVBlcmUodHViZSk7XG59ICBcbiAgXG5gYGBgXG4ifQ==---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "hd@8NMb_0Q", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Tubes"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<p>Correspondance des deux indices du tableau <code>filedes[]</code> ? </p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzMzU3MTAsICJpZCI6ICIxNTE1MzM1NjI3MTQyLTAwMCIsICJtZCI6ICJDb3JyZXNwb25kYW5jZSBkZXMgZGV1eCBpbmRpY2VzIGR1IHRhYmxlYXUgYGZpbGVkZXNbXWAgPyBcbiJ9---->", 
                                        "<p><code>filedes[0]</code> -&gt; descripteur pour la lecture (sortie standard)</p>\n<p><code>filedes[1]</code> -&gt; descripteur pour l'écriture (entrée standard)</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzMzU3MDcsICJpZCI6ICIxNTE1MzM1NjI3MTQyLTAwMSIsICJtZCI6ICJgZmlsZWRlc1swXWAgLSZndDsgZGVzY3JpcHRldXIgcG91ciBsYSBsZWN0dXJlIChzb3J0aWUgc3RhbmRhcmQpXG4gIFxuYGZpbGVkZXNbMV1gIC0mZ3Q7IGRlc2NyaXB0ZXVyIHBvdXIgbCZhcG9zO1x1MDBlOWNyaXR1cmUgKGVudHJcdTAwZTllIHN0YW5kYXJkKVxuIn0=---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "ff7FXR>1(", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Tubes"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Existe obligatoirement entre deux processus communicant à l'aide d'un tube classique", 
                                        "Un lien de parenté"
                                    ], 
                                    "flags": 0, 
                                    "guid": "m.)k;4).(S", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "Tubes"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce qu'un tube nommé?", 
                                        "C'est un tube ayant une référence dans le système de fichiers"
                                    ], 
                                    "flags": 0, 
                                    "guid": "u#X3>w`2Do", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "Tubes"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Comment créer un tube nommé?", 
                                        "<p><code>int mkfifo(char* pathname, mode_t mode);</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzNDAzOTQsICJpZCI6ICIxNTE1MzQwMzQ5MTc0LTAwMSIsICJtZCI6ICJgaW50IG1rZmlmbyhjaGFyKiBwYXRobmFtZSwgbW9kZV90IG1vZGUpO2BcbiJ9---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "M[k_g0-ScT", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Tubes"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "C'est quoi le but initial des signaux?", 
                                        "Prévenir un processus qu'un évènement particulier est arrivé sur la machine ou sur le processus."
                                    ], 
                                    "flags": 0, 
                                    "guid": "h%x[Iodd7]", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<p>Signal envoyé par la frappe du caractère <code>CTRL + C</code> sur le clavier du terminal de contrôle</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzNDEwOTQsICJpZCI6ICIxNTE1MzQxMDIxNjQ3LTAwMCIsICJtZCI6ICJTaWduYWwgZW52b3lcdTAwZTkgcGFyIGxhIGZyYXBwZSBkdSBjYXJhY3RcdTAwZThyZSBgQ1RSTCArIENgIHN1ciBsZSBjbGF2aWVyIGR1IHRlcm1pbmFsIGRlIGNvbnRcYnJcdTAwZjRsZVxuIn0=---->", 
                                        "SIGINT"
                                    ], 
                                    "flags": 0, 
                                    "guid": "yaMyP^bN;B", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<p>Signal envoyé par la frappe des caractères <code>Ctrl + \\</code> sur le clavier</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzNDExMDAsICJpZCI6ICIxNTE1MzQxMDI2OTAwLTAwMCIsICJtZCI6ICJTaWduYWwgZW52b3lcdTAwZTkgcGFyIGxhIGZyYXBwZSBkZXMgY2FyYWN0XHUwMGU4cmVzIGBDdHJsICsgXFxgIHN1ciBsZSBjbGF2aWVyXG4ifQ==---->", 
                                        "SIGQUIT"
                                    ], 
                                    "flags": 0, 
                                    "guid": "NRGTbFHG:B", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<p>Signal de terminaison (signal número 9)</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzNDExNDAsICJpZCI6ICIxNTE1MzQxMDc3NTcwLTAwMCIsICJtZCI6ICJTaWduYWwgZGUgdGVybWluYWlzb24gKGZyYXBwZSBkZSBgUWAgc3VyIGxlIGNsYXZpZXIpXG4ifQ==---->", 
                                        "SIGKILL"
                                    ], 
                                    "flags": 0, 
                                    "guid": "HIjGS5GyX*", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Signal d'écriture dans un tube sans lecteurs", 
                                        "SIGPIPE"
                                    ], 
                                    "flags": 0, 
                                    "guid": "y;i`|C_awb", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Signal de fin de temporisation (fonction alarm)", 
                                        "SIGALRM"
                                    ], 
                                    "flags": 0, 
                                    "guid": "NNkAiy?Fi2", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Signal émis par un processus utilisateur", 
                                        "SIGUSR1 / SIGUSR2"
                                    ], 
                                    "flags": 0, 
                                    "guid": "jU:[nC;L^F", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Signal emise à la terminsaison d'un fils", 
                                        "SIGCHLD"
                                    ], 
                                    "flags": 0, 
                                    "guid": "L4+xbs#K1-", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<p>Signal de frappe des caractères <code>CTRL + Z</code> sur le clavier</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTU1OTgyNzEsICJpZCI6ICIxNTE1MzQxMzI0MzIzLTAwMCIsICJtZCI6ICJTaWduYWwgZGUgZnJhcHBlIGRlcyBjYXJhY3RcdTAwZThyZXMgYENUUkwgKyBaYCBzdXIgbGUgY2xhdmllclxuIn0=---->", 
                                        "SIGTSTP"
                                    ], 
                                    "flags": 0, 
                                    "guid": "p(GXZwn$O(", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Signal d'arrivée de caractères à lire", 
                                        "SIGIO"
                                    ], 
                                    "flags": 0, 
                                    "guid": "L<}73J~:2m", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Signal de redimensionnement de fenêtre", 
                                        "SIGWINCH"
                                    ], 
                                    "flags": 0, 
                                    "guid": "nD]>v*an2y", 
                                    "note_model_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Comment enregistrer une fonction à appeler juste avant la fin d'un programme?", 
                                        "<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #204a87;font-weight: bold\">int</span> <span style=\"color: #000000\">atexit</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #204a87; font-weight: bold\">void</span> <span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #ce5c00; font-weight: bold\">*</span><span style=\"color: #000000\">function</span><span style=\"color: #000000; font-weight: bold\">)(</span><span style=\"color: #204a87; font-weight: bold\">void</span><span style=\"color: #000000; font-weight: bold\">));</span>\n</pre></div>\n<p>Exemple</p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #000000\">voic</span> <span style=\"color: #000000\">finDuMonde</span><span style=\"color: #000000; font-weight: bold\">()</span>\n<span style=\"color: #000000; font-weight: bold\">{</span>\n    <span style=\"color: #000000\">puts</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #4e9a06\">\"Adieu monde cruel\"</span><span style=\"color: #000000; font-weight: bold\">);</span>\n<span style=\"color: #000000; font-weight: bold\">}</span>\n\n<span style=\"color: #204a87; font-weight: bold\">int</span> <span style=\"color: #000000\">main</span><span style=\"color: #000000; font-weight: bold\">()</span>\n<span style=\"color: #000000; font-weight: bold\">{</span>\n    <span style=\"color: #000000\">atexit</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #000000\">finDuMonde</span><span style=\"color: #000000; font-weight: bold\">);</span>\n    <span style=\"color: #000000\">puts</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #4e9a06\">\"J'existe);</span>\n    <span style=\"color: #204a87; font-weight: bold\">return</span> <span style=\"color: #0000cf; font-weight: bold\">0</span><span style=\"color: #000000; font-weight: bold\">;</span>\n<span style=\"color: #000000; font-weight: bold\">}</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTUzNDM5MzAsICJpZCI6ICIxNTE1MzQzNzkyODAxLTAwMSIsICJtZCI6ICJgYGBgY1xuaW50IGF0ZXhpdCh2b2lkICgqZnVuY3Rpb24pKHZvaWQpKTtcbmBgYGBcbiAgXG5FeGVtcGxlXG4gIFxuYGBgYGNcbnZvaWMgZmluRHVNb25kZSgpXG57XG4gICAgcHV0cygmcXVvdDtBZGlldSBtb25kZSBjcnVlbCZxdW90Oyk7XG59XG4gIFxuaW50IG1haW4oKVxue1xuICAgIGF0ZXhpdChmaW5EdU1vbmRlKTtcbiAgICBwdXRzKCZxdW90O0omYXBvcztleGlzdGUpO1xuICAgIHJldHVybiAwO1xufVxuYGBgYFxuIn0=---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "f.m1!?$^Iq", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Signaux"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Comment s'organise la mémoire?", 
                                        "La mémoire s'organise de manière linéaire. Elle est donc constitué d'un ensemble de mots ayant chacun sa propre adresse. Chaque mot fait 1 octet.<div><br /></div><div><br /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "O>X)SWW#$@", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionMemoire"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Comment est segmenté la mémoire pour un processus?", 
                                        "Un processus peut-être decoupé en plusieurs secteurs gêrés en différentes parties de la mémoire. L'OS découpe donc son code et ses données dans le tas et la pile."
                                    ], 
                                    "flags": 0, 
                                    "guid": "P<rlo>E,k^", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionMemoire"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "En quoi consiste la allocation statique?", 
                                        "On réalise des allocations de mémoire en decoupant des blocs spécifiques. Les processus qui sont trop grands ne peuvent juste pas s'éxecuter. (ça ne se fait pas)"
                                    ], 
                                    "flags": 0, 
                                    "guid": "C7|m:6zd)2", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionMemoire"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "En quoi consiste l'allocation dynamique?", 
                                        "On adapte la mémoire allouée pour les processus au fur et à mesure qu'ils arrivent. Les processus sont donc jamais au même endroit."
                                    ], 
                                    "flags": 0, 
                                    "guid": "j`8BJ0w92k", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionMemoire"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quels sont les trois algorithmes utilisés pour l'emplacement mémoire?", 
                                        "<ul style=\"margin-left: 20px; \"><li>First Fit</li><li>Best Fit</li><li>Worst Fit</li></ul>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "Myz_mu[2-a", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionMemoire"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que First Fit? Avantages / Inconvénients", 
                                        "Stratégie de placement dans la quelle on prend le premier emplacement possible, on part de zero et on avance jusqu'à ce qu'on trouve. C'est le plus utilisé dans les systèmes d'exploitation aujourd'hui.<br /><br /><table style=\"font-size: 1em; width: 100%; border-collapse: collapse;\">\n<thead><tr><th align=\"left\" style=\"width: 50%; padding: 5px;border-bottom: 2px solid #00B3FF\">Avantages</th><th align=\"left\" style=\"width: 50%; padding: 5px;border-bottom: 2px solid #00B3FF\">Inconvénients</th></tr></thead>\n<tbody><tr><td style=\"text-align: 50; padding: 5px;border-bottom: 1px solid #B0B0B0\">Ultra simple, ultra rapide</td><td style=\"text-align: 50; padding: 5px;border-bottom: 1px solid #B0B0B0\">Risque de mettre les processus a un endroit où sa gâche (fragmente) la mémoire</td></tr></tbody></table>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "ipq$}0VC_G", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionMemoire"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que le Best Fit? Avantages / Inconvénient", 
                                        "<div style=\"text-align: center;\">Stratégie de placement dans la quelle on prend l'emplacement dont la taille est la plus proche à celle demandée par le processus.</div><blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><div><div style=\"text-align: center;\"><br /></div></div></blockquote></blockquote></blockquote><blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><blockquote class=\"webkit-indent-blockquote\" style=\"margin: 0 0 0 40px; border: none; padding: 0px;\"><div><div style=\"text-align: center;\"><br /></div></div></blockquote></blockquote></blockquote></blockquote><table style=\"text-align: center;font-size: 1em; width: 854px; border-collapse: collapse; \"><thead><tr><th align=\"left\" style=\"width: 417px; padding-top: 5px; padding-right: 5px; padding-bottom: 5px; padding-left: 5px; border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: rgb(0, 179, 255); \">Avantages</th><th align=\"left\" style=\"width: 417px; padding-top: 5px; padding-right: 5px; padding-bottom: 5px; padding-left: 5px; border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: rgb(0, 179, 255); \">Inconvénients</th></tr></thead><tbody><tr><td style=\"padding-top: 5px; padding-right: 5px; padding-bottom: 5px; padding-left: 5px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(176, 176, 176); \">Il n'y en a pas.</td><td style=\"padding-top: 5px; padding-right: 5px; padding-bottom: 5px; padding-left: 5px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(176, 176, 176); \">On arrive jamais à trouver l'emplacement plus proche. On fini avec des bouts de mémoire pas utilisés.</td></tr></tbody></table>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "K+>|QEFRY}", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionMemoire"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que le WorstFit?", 
                                        "Stratégie de placement dans la quelle on prend la zone la plus grande pour mettre les nouveaux processus.<div><br /><br /><table style=\"font-size: 1em; width: 854px; border-collapse: collapse; \"><thead><tr><th align=\"left\" style=\"width: 417px; padding-top: 5px; padding-right: 5px; padding-bottom: 5px; padding-left: 5px; border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: rgb(0, 179, 255); \">Avantages</th><th align=\"left\" style=\"width: 417px; padding-top: 5px; padding-right: 5px; padding-bottom: 5px; padding-left: 5px; border-bottom-width: 2px; border-bottom-style: solid; border-bottom-color: rgb(0, 179, 255); \">Inconvénients</th></tr></thead><tbody><tr><td style=\"padding-top: 5px; padding-right: 5px; padding-bottom: 5px; padding-left: 5px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(176, 176, 176); \">On fragmente moins qu'avec FirstFit.</td><td style=\"padding-top: 5px; padding-right: 5px; padding-bottom: 5px; padding-left: 5px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(176, 176, 176); \">C'est long. Il faut balayer tout la mémoire pour trouver.</td></tr></tbody></table></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "opBO{9+7v_", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionMemoire"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Comment on mémorise l'occupation de la mémoire par les processus? (schéma)", 
                                        "Avec une liste chaînée de blocs indiquant le debut et la longueur de chaque bloc ainsi que s'il est libre (H = Hole) ou occupé (P = processus).<div><br /></div><div><img src=\"2.jpg\" /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "Ab()xR=*Om", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionMemoire"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce qu'un Overlay?", 
                                        "Ce sont des zones de programme (dé)chargées au besoin par le programmeur. Le but étant d'éxecuter un programme plus grand que la mémoire. On laisse donc sur le disque ce qui n'a pas besoin d'être en mémoire."
                                    ], 
                                    "flags": 0, 
                                    "guid": "sr~z,v&R30", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionMemoire"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que la mémoire virtuelle?", 
                                        "C'est le nom de la mémoire que utilise le disque dur pour compenser le manque de mémoire physique. Le programmeur ne peut pas gêrer la mémoire, c'est le système d'exploitation qui le fait."
                                    ], 
                                    "flags": 0, 
                                    "guid": "OA7HAQv;0k", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionMemoire"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quels sont les implémentations de la mémoire virtuelle?", 
                                        "Sous Unix (swap, taille fixe):<div><ul style=\"margin-left: 20px; \"><li>Partition indépendante (mount)</li><li>et/ou fichier d'echange (swapon, swapoff)</li></ul><div>Sous Windows:</div></div><div><ul style=\"margin-left: 20px; \"><li>Fichier d'échange pagefile.sys (taille variable)</li></ul></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "Qy+o#t),?N", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionMemoire"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que la pagination?", 
                                        "C'est le principe sous lequel la <b>mémoire réelle est découpée en cadres</b>&nbsp;et la <b>mémoire virtuelle est découpée en pages</b>."
                                    ], 
                                    "flags": 0, 
                                    "guid": "b}tz`aD7uP", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionMemoire"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que la MMU?", 
                                        "La <i>Memory Management Unit</i>, permettant la gestion de la mémoire paginée par un composant \bmatériel. Elle transforme les adresses virtuelles en adresses réelles."
                                    ], 
                                    "flags": 0, 
                                    "guid": "nY-Dh|)8gy", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionMemoire"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que le TLB?", 
                                        "Le <i>Translation Lookaside Buffer</i>. Il contient les numéros de cadre des pages les plus utilisées.Si on ne trouve les numéros, on retourne à la table des pages normale."
                                    ], 
                                    "flags": 0, 
                                    "guid": "y}[TtM2t-U", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionMemoire"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce qu'un défaut de page?", 
                                        "C'est le cas ou l'on n'a plus de place disponible pour charger une nouvelle page, on doit donc décharger une page pour faire de la place."
                                    ], 
                                    "flags": 0, 
                                    "guid": "rCYIE1w4qS", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionMemoire"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quels sont les algorithmes de remplacement de page?", 
                                        "<ul style=\"margin-left: 20px; \"><li>Algo NFU</li><li>Algo LRU</li><li>Algo de la seconde chance</li></ul>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "DiJ}HL|&<I", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionMemoire"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "En quoi consite l'algorithme de remplacement de page NFU?", 
                                        "On abandonne la page qui sert le moins en moyenne, c'est à dire, celle qui n'est pas très souvent appelé. On a le problème dans lequel une page est très demandée pour un moment et qui après n'est plus utilisée."
                                    ], 
                                    "flags": 0, 
                                    "guid": "h~1z!:rZza", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionMemoire"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "En quoi consiste l'algorithme de remplacement de page LRU?", 
                                        "On abandonne la page qui n'a pas servi depuis longtemps. C'est pas la notion de vieux, mais la notion de servir récemment. Problème de la page demandée très regulièrement mais à des intervalles de temps assez grands."
                                    ], 
                                    "flags": 0, 
                                    "guid": "g<j],Nq{G>", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionMemoire"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "En quoi consite l'algorithme de remplacement de page <i>de la seconde chance</i>?", 
                                        "Les pages sont chargées dans une FIFO (les vieux d'abord). A chaque fois qu'on accède à une page, on met son bit R à 1. Quand on cherche un page à décharger, on les examine une à une: si le bit R est à 1, on met R à 0 et on passe au suivant. Sinon, on décharge la page et on garde la position actuelle pour le prochain défaut de page."
                                    ], 
                                    "flags": 0, 
                                    "guid": "P2b_y`bfI2", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionMemoire"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que l'exclusion mutuelle?", 
                                        "L'exclusion mutuelle est amené par la section critique. On peut la partager mais pas au même moment. <i>Les toilettes.</i><br /><br /><ul style=\"margin-left: 20px; \"><li>Deux processus ne peuvent pas être en même temps dans la section critique.</li><li>Aucune hypothèse n'est faite sur les vitesses des processus ni sur le nombre de processeurs.</li><li>Aucun processus suspendu en dehors d'une section critique ne doit bloquer les autres.</li><li>Aucun processus ne doit attendre trop longtemps avant d'entrer dans la section critique.</li></ul>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "xIW)IvFr$[", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionRessources"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que l'instruction TSL (Test and Set Lock) ?", 
                                        "<br>C'est le positionement d'un verrou avant de rentrer dans une zone d'exclusion mutuelle. Comme ça, on s'assure qu'il n'y a qu'un seul processus qui utilise là memoire à cet endroit. Le <i>TSL </i>réalise donc de manière indivisible les 2 opérations suivantes:<div><ol type=\"1\" start=\"1\"><li>Charger le contenu de&nbsp;<code class=\"myCodeClass\">adr</code> dans <code class=\"myCodeClass\"> reg (mov reg, adr)</code></li><li>Mettre une valeur non nulle dans <code class=\"myCodeClass\">adr (mov adr, #1)</code></li></ol><div>MAIS ATTENTE ACTIVE!</div></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "r,tn*]*^~(", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionRessources"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Comment fonctionne une socket ? ", 
                                        ""
                                    ], 
                                    "flags": 0, 
                                    "guid": "H`b&N", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quelle est la fonction qui permet d'attacher une socket ? ", 
                                        ""
                                    ], 
                                    "flags": 0, 
                                    "guid": "XF/rE", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Comment on écrit dans une socket tcp ? ", 
                                        ""
                                    ], 
                                    "flags": 0, 
                                    "guid": "B1MIA", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Comment on ferme une socket ? ", 
                                        ""
                                    ], 
                                    "flags": 0, 
                                    "guid": "OV&QO", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": []
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Appel pour lire d'un déscripteur de fichier (ou un tube) ?&nbsp;", 
                                        "<p><code>ssize_t read (int fd, char* buf, int taille</code>)</p>\n<p>Exemple:  </p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\">    <span style=\"color: #8f5902;font-style: italic\">/* This has been done before  </span>\n\n<span style=\"color: #8f5902; font-style: italic\">    int fd1[2];  // Used to store two ends of first pipe</span>\n\n<span style=\"color: #8f5902; font-style: italic\">    char fixed_str[] = \"forgeeks.org\";</span>\n\n<span style=\"color: #8f5902; font-style: italic\">    if (pipe(fd1)==-1)</span>\n<span style=\"color: #8f5902; font-style: italic\">    {</span>\n<span style=\"color: #8f5902; font-style: italic\">        fprintf(stderr, \"Pipe Failed\" );</span>\n<span style=\"color: #8f5902; font-style: italic\">        return 1;</span>\n<span style=\"color: #8f5902; font-style: italic\">    }  </span>\n\n<span style=\"color: #8f5902; font-style: italic\">    */</span>  \n\n    <span style=\"color: #000000\">close</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #000000\">fd1</span><span style=\"color: #000000; font-weight: bold\">[</span><span style=\"color: #0000cf; font-weight: bold\">1</span><span style=\"color: #000000; font-weight: bold\">]);</span>  <span style=\"color: #8f5902; font-style: italic\">// Close writing end of first pipe</span>\n\n    <span style=\"color: #8f5902; font-style: italic\">// Read a string using first pipe</span>\n    <span style=\"color: #204a87; font-weight: bold\">char</span> <span style=\"color: #000000\">concat_str</span><span style=\"color: #000000; font-weight: bold\">[</span><span style=\"color: #0000cf; font-weight: bold\">100</span><span style=\"color: #000000; font-weight: bold\">];</span>\n\n    <span style=\"color: #000000\">read</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #000000\">fd1</span><span style=\"color: #000000; font-weight: bold\">[</span><span style=\"color: #0000cf; font-weight: bold\">0</span><span style=\"color: #000000; font-weight: bold\">],</span> <span style=\"color: #000000\">concat_str</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #0000cf; font-weight: bold\">100</span><span style=\"color: #000000; font-weight: bold\">);</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTU2MDExNTksICJpZCI6ICIxNTE1NjAwODQ5MjM3LTAwMSIsICJtZCI6ICJgc3NpemVfdCByZWFkIChpbnQgZmQsIGNoYXIqIGJ1ZiwgaW50IHRhaWxsZWApXG4gIFxuRXhlbXBsZTogIFxuICBcbmBgYGBjXG4gICAgLyogVGhpcyBoYXMgYmVlbiBkb25lIGJlZm9yZSAgXG4gIFxuICAgIGludCBmZDFbMl07ICAvLyBVc2VkIHRvIHN0b3JlIHR3byBlbmRzIG9mIGZpcnN0IHBpcGVcbiAgXG4gICAgY2hhciBmaXhlZF9zdHJbXSA9ICZxdW90O2ZvcmdlZWtzLm9yZyZxdW90OztcbiAgXG4gICAgaWYgKHBpcGUoZmQxKT09LTEpXG4gICAge1xuICAgICAgICBmcHJpbnRmKHN0ZGVyciwgJnF1b3Q7UGlwZSBGYWlsZWQmcXVvdDsgKTtcbiAgICAgICAgcmV0dXJuIDE7XG4gICAgfSAgXG4gIFxuICAgICovICBcbiAgXG4gICAgY2xvc2UoZmQxWzFdKTsgIC8vIENsb3NlIHdyaXRpbmcgZW5kIG9mIGZpcnN0IHBpcGVcbiAgXG4gICAgLy8gUmVhZCBhIHN0cmluZyB1c2luZyBmaXJzdCBwaXBlXG4gICAgY2hhciBjb25jYXRfc3RyWzEwMF07XG4gIFxuICAgIHJlYWQoZmQxWzBdLCBjb25jYXRfc3RyLCAxMDApO1xuICBcbmBgYGBcbiJ9---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "ck(z}A#@3n", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Tubes"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Solution pour le problème de l'émetteur et du récepteur? (<i>ne pas déposer un octet alors que le récepteur n'a pas encore lu le précédent et que le récepteur ne lise pas deux fois le même octet)</i>", 
                                        "<div><br /><div><u><b><div></div></b></u></div></div><div><b><u>LUE = 1 JETON</u></b></div><div><b><u>EMISE = 0 JETON</u></b></div><div><b><u><br /></u></b></div><div><b><u>Code Récepteur</u></b></div><div>Répeter</div><div>&nbsp; &nbsp; &nbsp; &nbsp; Attendre nouvelle valeur P(EMISE)</div><div>&nbsp; &nbsp; Lire la valeur</div><div>&nbsp; &nbsp; &nbsp; &nbsp; Informer que valeur lue V(LUE)</div><div>&nbsp; &nbsp; consommer la valeur</div><div>À l'infini</div><div><br /></div><div><b><u>Code Émeteur</u></b></div><div>Répeter</div><div>&nbsp; &nbsp; fabrique la valeur</div><div>&nbsp; &nbsp; &nbsp; &nbsp; Attendre nouvelle valeur lue P(LUE)</div><div>&nbsp; &nbsp; émettre la valeur</div><div>&nbsp; &nbsp; &nbsp; &nbsp; Informer nouvelle valeur V(EMISE)</div><div>À l'infini</div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "o,.Hg6Kwvo", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionRessources"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Commande pour créer un sémaphore?", 
                                        "<p><code>mutex=$(semC [ValeurDuSémamphore : int])</code> </p>\n<p><em>Mutex contient l'identificateur du sémaphore</em></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTU2MDU1MDEsICJpZCI6ICIxNTE1NjA1MjY2MTgyLTAwMSIsICJtZCI6ICJgbXV0ZXg9JChzZW1DIFtWYWxldXJEdVNcdTAwZTltYW1waG9yZSA6IGludF0pYCAgXG4gIFxuX011dGV4IGNvbnRpZW50IGwmYXBvcztpZGVudGlmaWNhdGV1ciBkdSBzXHUwMGU5bWFwaG9yZV9cbiAgXG4ifQ==---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "Dd}*35>G5j", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionRessources"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Commande pour supprimer un sémaphore?", 
                                        "<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #204a87\">wait</span>    <span style=\"color: #8f5902; font-style: italic\"># Attente de la fin des processus clients</span>\nsemD <span style=\"color: #000000\">$mutex</span> <span style=\"color: #8f5902; font-style: italic\"># Suppression du sémaphore d'exclusion mutuelle</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTU2MDU0NjYsICJpZCI6ICIxNTE1NjA1Mzk0MDE1LTAwMSIsICJtZCI6ICJgYGBgc2hlbGxcbiAgXG53YWl0ICAgICMgQXR0ZW50ZSBkZSBsYSBmaW4gZGVzIHByb2Nlc3N1cyBjbGllbnRzXG5zZW1EICRtdXRleCAjIFN1cHByZXNzaW9uIGR1IHNcdTAwZTltYXBob3JlIGQmYXBvcztleGNsdXNpb24gbXV0dWVsbGVcbiAgXG5gYGBgICBcbiAgXG4ifQ==---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "D-H]lH^`89", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionRessources"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Code d'exclusion mutuelle avec sémaphores pour gérer l'accès à la section critique?", 
                                        "<b>début</b><div><b><br /></b></div><div><b>&nbsp; &nbsp; </b>MUTEX=1<br /><br /></div><div>&nbsp; &nbsp; traitement réalisé avant l'utilisation de la ressource<br /><br /></div><div>&nbsp; &nbsp; P(MUTEX)<br /></div><div><br /></div><div>&nbsp; &nbsp; utilisation de la ressource non partageable</div><div><br /></div><div>&nbsp; &nbsp; V(MUTEX)</div><div><br /></div><div>&nbsp; &nbsp; traitement réalisé après l'utilisation de la ressource</div><div>&nbsp;<br /><b>fin</b></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "newc+z0nJP", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionRessources"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Code pour faire un rendez-vous avec les sémaphores? (<i>sans se soucier de la longueur des traitements, sinon, celui qui est plus court attend et le plus long informe)</i>", 
                                        "<div><b>RDV1 = 0</b></div><div><b>RDV2 = 0</b></div><br><table style=\"font-size: 1em; width: 100%; border-collapse: collapse;\"><thead><tr><th align=\"left\" style=\"width: 50%; padding: 5px;border-bottom: 2px solid #00B3FF\">Processus P1</th><th align=\"left\" style=\"width: 50%; padding: 5px;border-bottom: 2px solid #00B3FF\">Processus P2</th></tr></thead><br><tbody><tr><td style=\"text-align: 50; padding: 5px;border-bottom: 1px solid #B0B0B0\"><b>début<br><br>&nbsp; &nbsp; répeter<br><br>&nbsp; &nbsp; &nbsp; &nbsp; </b>traitement P1<br>&nbsp; &nbsp; &nbsp; &nbsp; InformerP2 - &nbsp;<b>V(RDV1)<br></b>&nbsp; &nbsp; &nbsp; &nbsp; AttendreP2 - <b>P(RDV2)</b><br><br><b>&nbsp; &nbsp; à l'infini<br>fin</b></td><td style=\"text-align: 50; padding: 5px;border-bottom: 1px solid #B0B0B0\"><b>début<br></b><br><span style=\"font-weight: 800;\">&nbsp; &nbsp; répeter</span><br><br><b style=\"font-weight: bold; \">&nbsp; &nbsp;&nbsp;</b><b style=\"font-weight: bold; \">&nbsp; &nbsp; </b>traitement P1<br><b>&nbsp; &nbsp;&nbsp;</b><b>&nbsp; &nbsp; </b>InformerP1 - <b>V(RDV2)<br></b><b>&nbsp; &nbsp;&nbsp;</b><b>&nbsp; &nbsp; </b>AttendreP1 - <b>P(RDV1)</b><br><br><b style=\"font-weight: bold; \">&nbsp; &nbsp; à l'infini<br>fin</b></td></tr></tbody></table>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "*-X0r2oMg", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "GestionRessources"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quel est l'algorithme classique d'un client utilisant une socket UDP?", 
                                        "<ol type=\"1\" start=\"1\"><li>Créer une socket UDP<br /></li><li>Forger l'adresse du destinataire</li><li>Préparer et émettre le message au destinataire</li><li>Attendre et lire la réponse</li><li>Traiter la réponse</li></ol>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "qJ<*d`,sAz", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Sockets"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quel est l'algorithme classique d'un serveur utilisant une socket UDP?", 
                                        "<ol type=\"1\" start=\"1\"><li>Créer une socket UDP</li><li>Attacher la socket à un port</li><li>Attendre et lire une requête</li><li>Préparer et émettre la réponse à l'émetteur de la requête</li><li>Boucler en 3</li></ol>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "Q2Rnpzu>%J", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Sockets"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Appel système pour créer une socket? Quels possibilités existent pour les trois paramètres?", 
                                        "<p><code>int socket(int domain, int type,  int protocol);</code></p>\n<p><strong>domain:</strong><br />\n&nbsp;&nbsp;&nbsp;&nbsp;<strong>AF_UNIX </strong>- Communication locale<br />\n&nbsp;&nbsp;&nbsp;&nbsp;<strong>AF_INET </strong>- Protocoles Internet IPV4<br />\n&nbsp;&nbsp;&nbsp;&nbsp;<strong>AF_INET6 </strong>- Procoles Internet UPV6</p>\n<p><strong>type:</strong><br />\n&nbsp;&nbsp;&nbsp;&nbsp;<strong>SOCK_STREAM    </strong>- TCP<br />\n&nbsp;&nbsp;&nbsp;&nbsp;<strong>SOCK_DGRAM     </strong>-   UDP</p>\n<p><strong>protocol:</strong><br />\n&nbsp;&nbsp;&nbsp;&nbsp;<strong>0</strong></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTU2MDc3MDMsICJpZCI6ICIxNTE1NjA2NTQ2MDkyLTAwMSIsICJtZCI6ICJgYGludCBzb2NrZXQoaW50IGRvbWFpbiwgaW50IHR5cGUsICBpbnQgcHJvdG9jb2wpO2BgXG4gIFxuKipkb21haW46KipcbiZhbXA7bmJzcDsmYW1wO25ic3A7JmFtcDtuYnNwOyZhbXA7bmJzcDsqKkFGX1VOSVggKiotIENvbW11bmljYXRpb24gbG9jYWxlXG4mYW1wO25ic3A7JmFtcDtuYnNwOyZhbXA7bmJzcDsmYW1wO25ic3A7KipBRl9JTkVUICoqLSBQcm90b2NvbGVzIEludGVybmV0IElQVjRcbiZhbXA7bmJzcDsmYW1wO25ic3A7JmFtcDtuYnNwOyZhbXA7bmJzcDsqKkFGX0lORVQ2ICoqLSBQcm9jb2xlcyBJbnRlcm5ldCBVUFY2XG4gIFxuKip0eXBlOioqXG4mYW1wO25ic3A7JmFtcDtuYnNwOyZhbXA7bmJzcDsmYW1wO25ic3A7KipTT0NLX1NUUkVBTSAgICAqKi0gVENQXG4mYW1wO25ic3A7JmFtcDtuYnNwOyZhbXA7bmJzcDsmYW1wO25ic3A7KipTT0NLX0RHUkFNICAgICAqKi0gICBVRFBcbiAgXG4qKnByb3RvY29sOioqXG4mYW1wO25ic3A7JmFtcDtuYnNwOyZhbXA7bmJzcDsmYW1wO25ic3A7KiowKipcbiAgXG4gIFxuIn0=---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "NqG(1c82[N", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Sockets"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Code pour créer une socket UDP", 
                                        "<p><strong>UDP:</strong></p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #204a87;font-weight: bold\">if</span><span style=\"color: #000000; font-weight: bold\">((</span><span style=\"color: #000000\">s</span> <span style=\"color: #ce5c00; font-weight: bold\">=</span> <span style=\"color: #000000\">socket</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #000000\">AF_INET</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #000000\">SOCK_DGRAM</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #0000cf; font-weight: bold\">0</span><span style=\"color: #000000; font-weight: bold\">))</span> <span style=\"color: #ce5c00; font-weight: bold\">==</span> <span style=\"color: #ce5c00; font-weight: bold\">-</span><span style=\"color: #0000cf; font-weight: bold\">1</span><span style=\"color: #000000; font-weight: bold\">)</span>\n<span style=\"color: #000000; font-weight: bold\">{</span>\n    <span style=\"color: #000000\">perror</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #4e9a06\">\"socket\"</span><span style=\"color: #000000; font-weight: bold\">);</span> <span style=\"color: #000000\">exit</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #0000cf; font-weight: bold\">1</span><span style=\"color: #000000; font-weight: bold\">);</span>\n<span style=\"color: #000000; font-weight: bold\">}</span>\n\n<span style=\"color: #204a87; font-weight: bold\">return</span> <span style=\"color: #0000cf; font-weight: bold\">0</span><span style=\"color: #000000; font-weight: bold\">;</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTU2MDc4MTIsICJpZCI6ICIxNTE1NjA3NzE5OTE1LTAwMSIsICJtZCI6ICIqKlVEUDoqKlxuYGBgYGNcbmlmKChzID0gc29ja2V0KEFGX0lORVQsIFNPQ0tfREdSQU0sIDApKSA9PSAtMSlcbntcbiAgICBwZXJyb3IoJnF1b3Q7c29ja2V0JnF1b3Q7KTsgZXhpdCgxKTtcbn1cbiAgXG5yZXR1cm4gMDtcbmBgYGBcbiJ9---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "MHSRJ%Y.k)", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Sockets"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Code pour créer une socket TCP", 
                                        "<p><strong>TCP:</strong></p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #204a87;font-weight: bold\">if</span><span style=\"color: #000000; font-weight: bold\">((</span><span style=\"color: #000000\">s</span> <span style=\"color: #ce5c00; font-weight: bold\">=</span> <span style=\"color: #000000\">socket</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #000000\">AF_UNSPEC</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #000000\">SOCK_STREAM</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #0000cf; font-weight: bold\">0</span><span style=\"color: #000000; font-weight: bold\">))</span> <span style=\"color: #ce5c00; font-weight: bold\">==</span> <span style=\"color: #ce5c00; font-weight: bold\">-</span><span style=\"color: #0000cf; font-weight: bold\">1</span><span style=\"color: #000000; font-weight: bold\">)</span>\n<span style=\"color: #000000; font-weight: bold\">{</span>\n    <span style=\"color: #000000\">perror</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #4e9a06\">\"socket\"</span><span style=\"color: #000000; font-weight: bold\">);</span> <span style=\"color: #000000\">exit</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #0000cf; font-weight: bold\">1</span><span style=\"color: #000000; font-weight: bold\">);</span>\n<span style=\"color: #000000; font-weight: bold\">}</span>\n\n<span style=\"color: #204a87; font-weight: bold\">return</span> <span style=\"color: #0000cf; font-weight: bold\">0</span><span style=\"color: #000000; font-weight: bold\">;</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTU2MDgwMTMsICJpZCI6ICIxNTE1NjA3ODIyMjc5LTAwMSIsICJtZCI6ICIqKlRDUDoqKlxuICBcbiAgXG5gYGBgY1xuaWYoKHMgPSBzb2NrZXQoQUZfVU5TUEVDLCBTT0NLX1NUUkVBTSwgMCkpID09IC0xKVxue1xuICAgIHBlcnJvcigmcXVvdDtzb2NrZXQmcXVvdDspOyBleGl0KDEpO1xufVxuICBcbnJldHVybiAwO1xuYGBgYFxuIn0=---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "c;=$Qmahe^", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Sockets"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Comment définir l'adresse du destinataire?", 
                                        "<p>En remplissant la structure <code>struct sockaddr_in</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTU2MDgwOTAsICJpZCI6ICIxNTE1NjA4MDE4MzUxLTAwMSIsICJtZCI6ICJFbiByZW1wbGlzc2FudCBsYSBzdHJ1Y3R1cmUgYHN0cnVjdCBzb2NrYWRkcl9pbmBcbiJ9---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "D[{Xd^XBKx", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Sockets"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<p>Que contient une structure <code>sockaddr_in</code> avec nom de variable <code>src_addr</code> ?</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTU2MDgxNDcsICJpZCI6ICIxNTE1NjA4MDk0OTQ2LTAwMCIsICJtZCI6ICJRdWUgY29udGllbnQgdW5lIHN0cnVjdHVyZSBgc29ja2FkZHJfaW5gIGF2ZWMgbm9tIGRlIHZhcmlhYmxlIGBzcmNfYWRkcmAgP1xuIn0=---->", 
                                        "<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #000000\">src_addr</span><span style=\"color: #000000; font-weight: bold\">.</span><span style=\"color: #000000\">sin_family</span><span style=\"color: #000000; font-weight: bold\">;</span>    <span style=\"color: #8f5902; font-style: italic\">//  Famille d'adresses : AF_INET</span>\n<span style=\"color: #000000\">src_addr</span><span style=\"color: #000000; font-weight: bold\">.</span><span style=\"color: #000000\">sin_port</span><span style=\"color: #000000; font-weight: bold\">;</span>      <span style=\"color: #8f5902; font-style: italic\">//  Port dans l'ordre des octets réseau</span>\n<span style=\"color: #000000\">src_addr</span><span style=\"color: #000000; font-weight: bold\">.</span><span style=\"color: #000000\">sin_addr</span><span style=\"color: #000000; font-weight: bold\">;</span>     <span style=\"color: #8f5902; font-style: italic\">//  Adresse Internet</span>\n<span style=\"color: #000000\">src_addr</span><span style=\"color: #000000; font-weight: bold\">.</span><span style=\"color: #000000\">sin_zero</span><span style=\"color: #000000; font-weight: bold\">[</span><span style=\"color: #0000cf; font-weight: bold\">8</span><span style=\"color: #000000; font-weight: bold\">];</span> <span style=\"color: #8f5902; font-style: italic\">//  Bourrage </span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTU2MjI5MjEsICJpZCI6ICIxNTE1NjA4MDk0OTQ2LTAwMSIsICJtZCI6ICJgYGBgY1xuICBcbnNyY19hZGRyLnNpbl9mYW1pbHk7ICAgIC8vICBGYW1pbGxlIGQmYXBvczthZHJlc3NlcyA6IEFGX0lORVRcbnNyY19hZGRyLnNpbl9wb3J0OyAgICAgIC8vICBQb3J0IGRhbnMgbCZhcG9zO29yZHJlIGRlcyBvY3RldHMgclx1MDBlOXNlYXVcbnNyY19hZGRyLnNpbl9hZGRyOyAgICAgLy8gIEFkcmVzc2UgSW50ZXJuZXRcbnNyY19hZGRyLnNpbl96ZXJvWzhdOyAvLyAgQm91cnJhZ2UgXG4gIFxuICBcbmBgYGBcbiJ9---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "d0bRsM-%rR", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Sockets"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Comment attacher la socket à un port pour un serveur?", 
                                        "<p>Avec l'appel système \b<code>bind(2)</code>\b</p>\n<p><code>int bind (int sockfd, struct sockaddr *addr, socklen_t addrlen);</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTU2MDg3ODIsICJpZCI6ICIxNTE1NjA4NTEyMTc4LTAwMSIsICJtZCI6ICJBdmVjIGwmYXBvczthcHBlbCBzeXN0XHUwMGU4bWUgXGJgYmluZCgyKWBcYlxuICBcbmBpbnQgYmluZCAoaW50IHNvY2tmZCwgc3RydWN0IHNvY2thZGRyICphZGRyLCBzb2NrbGVuX3QgYWRkcmxlbik7YFxuIn0=---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "DkLq>8!@Tg", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Sockets"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quel est l'algorithme classique d'un client utilisant une socket TCP?", 
                                        "<ol type=\"1\" start=\"1\"><li>Créer un socket TCP</li><li>Forger l'adresse du serveur</li><li>Se connecter au serveur</li><li>Échanger des informations</li><li>Terminer la connexion</li></ol>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "icu8d<CQJQ", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Sockets"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quel est l'algorithme classique d'un serveur utilisant une socket TCP?", 
                                        "<ol type=\"1\" start=\"1\"><li><b>listen_socket </b>= Créer une socket TCP</li><li>Attacher la socket à un port</li><li>Définir la taille de la liste des connexions pendantes</li><li><b>sock_service </b>= Attendre une connexion (d'un client)</li><li>Échanger des informations via <b>sock_service</b></li><li>Terminar la conexion et boucler en 4</li></ol>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "oW),}_L8q!", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Sockets"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce qui change entre envoyer une socket TCP et envoyer une socket UDP?", 
                                        "<p><strong>Chez le client\b:</strong> </p>\n<ul>\n<li style=\"text-align: left; \">La notion de connexion **<code>**connect(2)</code></li>\n<li style=\"text-align: left; \">La notion de terminaison de connexion <code>close(2)</code> / <code>shutdown(2)</code></li>\n</ul>\n<p><strong>Chez le serveur:</strong></p>\n<ul>\n<li style=\"text-align: left; \">La notion de taille de liste de connexions pendantes <code>listen(2)</code></li>\n<li style=\"text-align: left; \">La notion d'attente de connexion <code>accept(2)</code> (<strong>socket d'ecoute réservée aux demandes de connexions et socket de service connectee à un unique client</strong>)</li>\n<li style=\"text-align: left; \">La notion de terminaison<br />\n<strong><br />\n</strong></li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTU2MDkyNzUsICJpZCI6ICIxNTE1NjA5MDM2MTIyLTAwMSIsICJtZCI6ICIqKkNoZXogbGUgY2xpZW50XGI6KiogIFxuICBcbiAgXG4tIExhIG5vdGlvbiBkZSBjb25uZXhpb24gKipgKipjb25uZWN0KDIpYFxuLSBMYSBub3Rpb24gZGUgdGVybWluYWlzb24gZGUgY29ubmV4aW9uIGBjbG9zZSgyKWAgLyBgc2h1dGRvd24oMilgXG4gIFxuKipDaGV6IGxlIHNlcnZldXI6KipcbiAgXG4tIExhIG5vdGlvbiBkZSB0YWlsbGUgZGUgbGlzdGUgZGUgY29ubmV4aW9ucyBwZW5kYW50ZXMgYGxpc3RlbigyKWBcbi0gTGEgbm90aW9uIGQmYXBvczthdHRlbnRlIGRlIGNvbm5leGlvbiBgYWNjZXB0KDIpYCAoX19zb2NrZXQgZCZhcG9zO2Vjb3V0ZSByXHUwMGU5c2Vydlx1MDBlOWUgYXV4IGRlbWFuZGVzIGRlIGNvbm5leGlvbnMgZXQgc29ja2V0IGRlIHNlcnZpY2UgY29ubmVjdGVlIFx1MDBlMCB1biB1bmlxdWUgY2xpZW50X18pXG4tIExhIG5vdGlvbiBkZSB0ZXJtaW5haXNvblxuKiogIFxuKipcbiJ9---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "G<lK9[[3!5", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Sockets"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Comment émettre des octets?", 
                                        "<p>Via <code>send(2)</code> <strong>renvoie le nombre d'octets émis si elle réussit</strong></p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #204a87;font-weight: bold\">ssize_t</span> <span style=\"color: #000000\">send</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #204a87; font-weight: bold\">int</span> <span style=\"color: #000000\">sockfd</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #204a87; font-weight: bold\">void</span><span style=\"color: #ce5c00; font-weight: bold\">*</span> <span style=\"color: #000000\">buf</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #204a87; font-weight: bold\">size_t</span> <span style=\"color: #000000\">len</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #204a87; font-weight: bold\">int</span> <span style=\"color: #000000\">flags</span><span style=\"color: #000000; font-weight: bold\">);</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTU2MjI5NTQsICJpZCI6ICIxNTE1NjA5Mjc4NTkwLTAwMSIsICJtZCI6ICJWaWEgYHNlbmQoMilgICoqcmVudm9pZSBsZSBub21icmUgZCZhcG9zO29jdGV0cyBcdTAwZTltaXMgc2kgZWxsZSByXHUwMGU5dXNzaXQqKlxuICBcbmBgYGBjXG4gIFxuc3NpemVfdCBzZW5kKGludCBzb2NrZmQsIHZvaWQqIGJ1Ziwgc2l6ZV90IGxlbiwgaW50IGZsYWdzKTtcbiAgXG5gYGBgXG4ifQ==---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "s3[(r~zPBC", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Sockets"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Comment récevoir des octets?", 
                                        "<p>Via <code>recv(2)</code>, <strong>renvoie le nombre d'octets reçus si elle réussit</strong></p>\n<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #204a87;font-weight: bold\">ssize_t</span> <span style=\"color: #000000\">recv</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #204a87; font-weight: bold\">int</span> <span style=\"color: #000000\">sockfd</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #204a87; font-weight: bold\">void</span> <span style=\"color: #ce5c00; font-weight: bold\">*</span><span style=\"color: #000000\">buf</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #204a87; font-weight: bold\">size_t</span> <span style=\"color: #000000\">len</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #204a87; font-weight: bold\">int</span> <span style=\"color: #000000\">flags</span><span style=\"color: #000000; font-weight: bold\">);</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTU2MjI5NDEsICJpZCI6ICIxNTE1NjA5MzYxMDkwLTAwMSIsICJtZCI6ICJWaWEgYHJlY3YoMilgLCAqKnJlbnZvaWUgbGUgbm9tYnJlIGQmYXBvcztvY3RldHMgcmVcdTAwZTd1cyBzaSBlbGxlIHJcdTAwZTl1c3NpdCoqXG4gIFxuYGBgYGNcbiAgXG5zc2l6ZV90IHJlY3YoaW50IHNvY2tmZCwgdm9pZCAqYnVmLCBzaXplX3QgbGVuLCBpbnQgZmxhZ3MpO1xuICBcbmBgYGBcbiJ9---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "EZD1:G5x{L", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Sockets", 
                                        "marked"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<p>Que fait la fonction <code>getaddrinfo(3)</code> ?</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTU2MDk2NjAsICJpZCI6ICIxNTE1NjA5NTUxMDIxLTAwMCIsICJtZCI6ICJRdWUgZmFpdCBsYSBmb25jdGlvbiBgZ2V0YWRkcmluZm8oMylgID9cbiJ9---->", 
                                        "<p>Elle remplie des structures <code>struct sock_addrin</code> et <code>struct sock_addrin6</code> prêtes à l'emploi pour:</p>\n<ul>\n<li style=\"text-align: left; \">L'émission via <code>sendto(2)</code> </li>\n<li style=\"text-align: left; \">La connexion via <code>connect(2)</code></li>\n<li style=\"text-align: left; \">L'attachement via\b <code>bind(2)</code></li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTU2MTEzMjksICJpZCI6ICIxNTE1NjA5NTUxMDIxLTAwMSIsICJtZCI6ICJFbGxlIHJlbXBsaWUgZGVzIHN0cnVjdHVyZXMgYHN0cnVjdCBzb2NrX2FkZHJpbmAgZXQgYHN0cnVjdCBzb2NrX2FkZHJpbjZgIHByXHUwMGVhdGVzIFx1MDBlMCBsJmFwb3M7ZW1wbG9pIHBvdXI6XG4gIFxuLSBMJmFwb3M7XHUwMGU5bWlzc2lvbiB2aWEgYHNlbmR0bygyKWAgIFxuLSBMYSBjb25uZXhpb24gdmlhIGBjb25uZWN0KDIpYFxuLSBMJmFwb3M7YXR0YWNoZW1lbnQgdmlhXGIgYGJpbmQoMilgXG4ifQ==---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "gZatnn!O`D", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Sockets"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<p>Comment utiliser la fonction <code>getaddrinfo(3)</code> ?</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTU2MDk5NzQsICJpZCI6ICIxNTE1NjA5NzI4MzUwLTAwMCIsICJtZCI6ICJDb21tZW50IHV0aWxpc2VyIGxhIGZvbmN0aW9uIGBnZXRhZGRyaW5mbygzKWAgP1xuIn0=---->", 
                                        "<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #204a87;font-weight: bold\">int</span> <span style=\"color: #000000\">getaddrinfo</span><span style=\"color: #000000; font-weight: bold\">(</span><span style=\"color: #204a87; font-weight: bold\">char</span><span style=\"color: #ce5c00; font-weight: bold\">*</span> <span style=\"color: #000000\">node</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #204a87; font-weight: bold\">char</span><span style=\"color: #ce5c00; font-weight: bold\">*</span> <span style=\"color: #000000\">service</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #204a87; font-weight: bold\">struct</span> <span style=\"color: #000000\">addrinfo</span> <span style=\"color: #ce5c00; font-weight: bold\">*</span><span style=\"color: #000000\">hints</span><span style=\"color: #000000; font-weight: bold\">,</span> <span style=\"color: #204a87; font-weight: bold\">struct</span> <span style=\"color: #000000\">addrinfo</span> <span style=\"color: #ce5c00; font-weight: bold\">**</span><span style=\"color: #000000\">res</span><span style=\"color: #000000; font-weight: bold\">);</span>\n</pre></div>\n<ul>\n<li style=\"text-align: left; \">\n<p><em>node</em> : contient le nom d'hôte (e.g \"opale.u-clermont1.fr\")</p>\n</li>\n<li style=\"text-align: left; \">\n<p><em>service</em> : contient le numéro de port ou d'un nom défini dans <code>/etc/services</code></p>\n</li>\n<li style=\"text-align: left; \">\n<p><em>hints</em> : permet de spécifier les critères de sélection</p>\n</li>\n<li style=\"text-align: left; \">\n<p><em>res</em> : liste contenant les adresses répondant aux critères dans hints</p>\n</li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTU2MDk5NTMsICJpZCI6ICIxNTE1NjA5NzI4MzUwLTAwMSIsICJtZCI6ICJgYGBgY1xuICBcbmludCBnZXRhZGRyaW5mbyhjaGFyKiBub2RlLCBjaGFyKiBzZXJ2aWNlLCBzdHJ1Y3QgYWRkcmluZm8gKmhpbnRzLCBzdHJ1Y3QgYWRkcmluZm8gKipyZXMpO1xuICBcbmBgYGBcbiAgXG4tIF9ub2RlXyA6IGNvbnRpZW50IGxlIG5vbSBkJmFwb3M7aFx1MDBmNHRlIChlLmcgJnF1b3Q7b3BhbGUudS1jbGVybW9udDEuZnImcXVvdDspXG4gIFxuLSBfc2VydmljZV8gOiBjb250aWVudCBsZSBudW1cdTAwZTlybyBkZSBwb3J0IG91IGQmYXBvczt1biBub20gZFx1MDBlOWZpbmkgZGFucyBgL2V0Yy9zZXJ2aWNlc2BcbiAgXG4tIF9oaW50c18gOiBwZXJtZXQgZGUgc3BcdTAwZTljaWZpZXIgbGVzIGNyaXRcdTAwZThyZXMgZGUgc1x1MDBlOWxlY3Rpb25cbiAgXG4tIF9yZXNfIDogbGlzdGUgY29udGVuYW50IGxlcyBhZHJlc3NlcyByXHUwMGU5cG9uZGFudCBhdXggY3JpdFx1MDBlOHJlcyBkYW5zIGhpbnRzXG4gIFxuIn0=---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "f^z,&+:N9{", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Sockets"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<p>Que contient une structure <code>struct addinfo</code> avec nom de variable <code>hints</code> et à quoi elle sert?</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTU2MTE2MTUsICJpZCI6ICIxNTE1NjEwMDY5OTM5LTAwMCIsICJtZCI6ICJRdWUgY29udGllbnQgdW5lIHN0cnVjdHVyZSBgc3RydWN0IGFkZGluZm9gIGF2ZWMgbm9tIGRlIHZhcmlhYmxlIGBoaW50c2AgZXQgXHUwMGUwIHF1b2kgZWxsZSBzZXJ0P1xuIn0=---->", 
                                        "<div class=\"codehilite\" style=\"background: #f8f8f8\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #000000\">hints</span><span style=\"color: #000000; font-weight: bold\">.</span><span style=\"color: #000000\">ai_flags</span> <span style=\"color: #ce5c00; font-weight: bold\">=</span> <span style=\"color: #0000cf; font-weight: bold\">0</span><span style=\"color: #000000; font-weight: bold\">;</span> <span style=\"color: #8f5902; font-style: italic\">// Options</span>\n<span style=\"color: #000000\">hints</span><span style=\"color: #000000; font-weight: bold\">.</span><span style=\"color: #000000\">ai_family</span> <span style=\"color: #ce5c00; font-weight: bold\">=</span> <span style=\"color: #000000\">AF_UNSPEC</span><span style=\"color: #000000; font-weight: bold\">;</span> <span style=\"color: #8f5902; font-style: italic\">// Pour IPV4/6</span>\n<span style=\"color: #000000\">hints</span><span style=\"color: #000000; font-weight: bold\">.</span><span style=\"color: #000000\">ai_socktype</span> <span style=\"color: #ce5c00; font-weight: bold\">=</span> <span style=\"color: #000000\">SOCK_DGRAM</span><span style=\"color: #000000; font-weight: bold\">;</span> <span style=\"color: #8f5902; font-style: italic\">// pour udp ou 'SOCK_STREAM' pour tcp</span>\n<span style=\"color: #000000\">hints</span><span style=\"color: #000000; font-weight: bold\">.</span><span style=\"color: #000000\">ai_protocol</span> <span style=\"color: #ce5c00; font-weight: bold\">=</span> <span style=\"color: #0000cf; font-weight: bold\">0</span><span style=\"color: #000000; font-weight: bold\">;</span> <span style=\"color: #8f5902; font-style: italic\">// auto</span>\n<span style=\"color: #000000\">hints</span><span style=\"color: #000000; font-weight: bold\">.</span><span style=\"color: #000000\">canonname</span> <span style=\"color: #ce5c00; font-weight: bold\">=</span> <span style=\"color: #204a87\">NULL</span><span style=\"color: #000000; font-weight: bold\">;</span> <span style=\"color: #8f5902; font-style: italic\">// nom officiel</span>\n<span style=\"color: #000000\">hints</span><span style=\"color: #000000; font-weight: bold\">.</span><span style=\"color: #000000\">ai_next</span> <span style=\"color: #ce5c00; font-weight: bold\">=</span> <span style=\"color: #204a87\">NULL</span><span style=\"color: #000000; font-weight: bold\">;</span> <span style=\"color: #8f5902; font-style: italic\">// adresse suivante</span>\n</pre></div>\n<p><strong>Elle sert à: </strong></p>\n<ul>\n<li style=\"text-align: left; \">Spécifier les criteres de sélection (argument <code>hint</code>)</li>\n<li style=\"text-align: left; \">Conteneur pour les adresses trouvées (argument <code>res</code>)</li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MTU2MTE2MTMsICJpZCI6ICIxNTE1NjEwMDY5OTM5LTAwMSIsICJtZCI6ICJgYGBgY1xuaGludHMuYWlfZmxhZ3MgPSAwOyAvLyBPcHRpb25zXG5oaW50cy5haV9mYW1pbHkgPSBBRl9VTlNQRUM7IC8vIFBvdXIgSVBWNC82XG5oaW50cy5haV9zb2NrdHlwZSA9IFNPQ0tfREdSQU07IC8vIHBvdXIgdWRwIG91ICZhcG9zO1NPQ0tfU1RSRUFNJmFwb3M7IHBvdXIgdGNwXG5oaW50cy5haV9wcm90b2NvbCA9IDA7IC8vIGF1dG9cbmhpbnRzLmNhbm9ubmFtZSA9IE5VTEw7IC8vIG5vbSBvZmZpY2llbFxuaGludHMuYWlfbmV4dCA9IE5VTEw7IC8vIGFkcmVzc2Ugc3VpdmFudGVcbiAgXG5gYGBgXG4gIFxuKipFbGxlIHNlcnQgXHUwMGUwOiAqKlxuICBcbi0gU3BcdTAwZTljaWZpZXIgbGVzIGNyaXRlcmVzIGRlIHNcdTAwZTlsZWN0aW9uIChhcmd1bWVudCBgaGludGApXG4tIENvbnRlbmV1ciBwb3VyIGxlcyBhZHJlc3NlcyB0cm91dlx1MDBlOWVzIChhcmd1bWVudCBgcmVzYClcbiJ9---->"
                                    ], 
                                    "flags": 0, 
                                    "guid": "AcBMerq(.i", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "Sockets"
                                    ]
                                }
                            ]
                        }, 
                        {
                            "__type__": "Deck", 
                            "children": [], 
                            "crowdanki_uuid": "dd70b2ff-f6ba-11e7-97b4-4851b7c6a3bc", 
                            "deck_config_uuid": "601edc1f-f6b8-11e7-ae12-4851b7c6a3bc", 
                            "desc": "", 
                            "dyn": 0, 
                            "extendNew": 10, 
                            "extendRev": 50, 
                            "media_files": [], 
                            "name": "Droit Informatique", 
                            "notes": [
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce qu'une close dédit formation?", 
                                        "Clause sous laquelle l'entreprise fait rembourser les formations qui ont été données au salarié"
                                    ], 
                                    "flags": 0, 
                                    "guid": "cfb8Xzy+`[", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce qu'une clause d'éxclusivite?", 
                                        "Clause sous laquelle l'empoyée doit se consacrer uniquement à l'entreprise avec laquelle il / elle travaille."
                                    ], 
                                    "flags": 0, 
                                    "guid": "t}Fa:d?{jp", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce qu'une clause de non-concurrence?", 
                                        "Clause qui est active que quand on quite l'entreprise qui nous a fait signer le contrat. Cette clause pourrait interdire d'acceder à une entreprise concurrante. Pourqu'elle soit valable, elle doit être limitée dans le temps (normalement 12 mois), limitée géographiquement et elle doit donner une indemnité financière à l'employée.&nbsp;"
                                    ], 
                                    "flags": 0, 
                                    "guid": "oSu.qf_{&O", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce qu'une clause de mobilité?", 
                                        "L'employée s'engagé à partir à l'étranger à la demande de l'entreprise"
                                    ], 
                                    "flags": 0, 
                                    "guid": "Cro$SpwkvO", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quels sont les trois niveaux des tribunals en France?", 
                                        "<ul style=\"margin-left: 20px; \"><li>Tribunaux de 1ère instance</li><li>Cour d'Appel</li><li>Cour de cassation</li></ul>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "wHQgS^=&Om", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quoi prime sur quoi en droit informatique?", 
                                        "La vie privée prime sur le cadre proffessionel"
                                    ], 
                                    "flags": 0, 
                                    "guid": "HLz[y&INu=", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Que fait qu'une base de donées soit protegéable par droit d'auteur?", 
                                        "Le contenu des bases de donées. Si elle est considée comme étant <i>originale</i>, elle est protegée par droit d'auteur."
                                    ], 
                                    "flags": 0, 
                                    "guid": "LO:bW~aSs%", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que la CNIL?", 
                                        "C'est une instutiotion indépendante qui veille au respect de la vie privée et des droits de chacun dans le <i>monde numérique</i>: informatique, vidéosurveillance, internet, entre autres."
                                    ], 
                                    "flags": 0, 
                                    "guid": "yfiPbg>U]f", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que l'envelope solo?&nbsp;", 
                                        "C'est la preuve du fait que une personne avait bien quelque chose à une date donnée."
                                    ], 
                                    "flags": 0, 
                                    "guid": "t8qfx<Pv3l", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que le droit au nom?", 
                                        "Le droit qu'on a d'avoir notre nom associé à ce que nous avons fait."
                                    ], 
                                    "flags": 0, 
                                    "guid": "mei#]Vz<-2", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quels sont les deux types de logiciels juridiquement possibles?", 
                                        "Logiciels proprietaires et logiciels libres."
                                    ], 
                                    "flags": 0, 
                                    "guid": "ex]tYg`%!i", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce qu'un logiciel proprietaire?", 
                                        "C'est un logiciel qu'on peut installer et déployer, mais dont on peut pas voir le code source."
                                    ], 
                                    "flags": 0, 
                                    "guid": "E||Z1L.Z=8", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce qu'un <i>logiciel libre</i>?", 
                                        "C'est un logiciel qu'on peut utiliser, déployer et dont on peut connaître le code. Il y a cependant certaines conditions en fonction de la licence que couvre ce logiciel."
                                    ], 
                                    "flags": 0, 
                                    "guid": "x6E|u=>C9c", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quelles types de licences open source existent?", 
                                        "<ul style=\"margin-left: 20px; \"><li>Licence non contaminante</li><li>Licence faiblement contaminante</li><li>Licence totalement contaminante</li></ul>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "QI.P6i?RvW", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Comment un employeur peut-il differencier ce qui releve de la vie privée de ce qui relève de la vie professionnelle?", 
                                        "Un fichier est présumé professionnel s'il ne porte pas une mention expresse faisant apparaître son caractère personnel.&nbsp;"
                                    ], 
                                    "flags": 0, 
                                    "guid": "B7WI31j;p`", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quel condition doit être accomplie pour qu'un salarié aie accès aux fichiers personnels d'un employé?", 
                                        "L'accès probable doit être informé dans le règlement intérieur et le salarié doit être informé que l'employeur va accéder à ses fichiers personnels"
                                    ], 
                                    "flags": 0, 
                                    "guid": "J_7T6u)H4@", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quel est l'obligation d'un administrateur système / réseaux ?", 
                                        "Il a comme obligation d'assurer le bon fonctionnement et la sécurité du système informatique. Tant qu'il utilise ce droits d'accès pour assurer ses obligations, l'administrateur ne peut pas voir sa responsabilité engagée."
                                    ], 
                                    "flags": 0, 
                                    "guid": "xC7$Y9l%?b", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qui est responsable en cas d'utilisation illégale de l'Internet ou de la messagerie électronique au sein d'une entreprise : l'employeur ou le salarié?", 
                                        "Le salarié assume généralement la responsabilité pénale."
                                    ], 
                                    "flags": 0, 
                                    "guid": "uQioj]|F=V", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "<div>Tout contrôle de l'activité des salariés par des moyens techniques ou électroniques&nbsp;doit respecter 3 principes, lesquels?</div>", 
                                        "<ul style=\"margin-left: 20px; \"><li>Le contrôle et obtention de preuves doit être loyal. (<i>information préalable du salarié est nécessaire)</i></li><li>Le procédé de surveillance doit être proportionné au but recherché.</li><li>Le procédé doit être déclaré à la&nbsp;CNIL s'il utilise des données personnels.</li></ul>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "LUHX}$e[=n", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quels sont les missions de la CNIL?", 
                                        "<ul style=\"margin-left: 20px; \"><li>Informer</li><li>Garantir aux citoyens le droit d'accès aux fichiers.</li><li>Recenser les fichiers informatiques contenant des donées à caractère personnel.</li><li>Réglementer les traitements les plus courants pour faciliter les formalitées.</li></ul>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "jMEy|1&#VI", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quels sont les 4 droits principaux d'informatique et liberté?", 
                                        "<ul style=\"margin-left: 20px; \"><li>Le droit à l'information</li><li>Le droit à l'opposition</li><li>Le droit d'accès</li><li>Le droit de rectification</li></ul>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "B%c.lo)F.(", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quand est-ce qu'une base de donées est protégée par droit d'auteur sui generis?", 
                                        "Quand elle a nécessité un investissement important pour son développement"
                                    ], 
                                    "flags": 0, 
                                    "guid": "wk=>q_2x%B", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quand est-ce qu'un employeur peut effectuer un contrôle sur des fichiers personnels sans inscription au règlement intérieur et sans information préalable ?", 
                                        "En cas de <i>risque ou d'évènement particulier</i>."
                                    ], 
                                    "flags": 0, 
                                    "guid": "BMW>-F`&]z", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quand est-ce que l'usage personnel de l'internet et de la messagerie électronique par les salariés à des fins personnels est toleré?", 
                                        "Quand l'usage personnel est raisonnable: il ne doit pas perturber l'accès au réseau de l'entreprise (pas de saturation de la bande passante) et il ne doit pas diminuer la productivié du salarié."
                                    ], 
                                    "flags": 0, 
                                    "guid": "GO/sEYRCh4", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qui est&nbsp;responsable en cas d'utilisation illégale de l'Internet ou de la messagerie électronique : l'employeur ou le salarié ?", 
                                        "Le salarié assume généralement la responsabilité pénale."
                                    ], 
                                    "flags": 0, 
                                    "guid": "Eioe~]MWw$", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quels outils de cybersurveillance des salariés existent?", 
                                        "<ul style=\"margin-left: 20px; \"><li>Les logiciels de gestion de travail de groupe</li><li>Les outils techniques de surveillance du réseau</li><li>Les logiciels de télémaintenance des postes de travail</li><li>Les pare-feu</li></ul>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "JIu=FTlAZ/", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quelle est l'exeception dans la quelle une preuve, même obtenue par un système clandestin, sera retenue par les tribunaux ?", 
                                        "<div>En cas d'infraction pénale commise par un salarié (exemples :&nbsp;consultation de sites Internet illégaux, téléchargements illégaux...).</div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "dn]=MjBVL/", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quel cararactère ont&nbsp;les messages envoyés et reçus par un salarié sur une adresse&nbsp;électronique générique de l'entreprise dans le cadre de son travail, consultables sur son&nbsp;seul poste ?", 
                                        "Ils ont le caractère de messages personnels, donc ils sont soumis au secret des correspondances. (l'employeur ne peut pas en prendre connaissance, même s'il aurait interdit l'utilisation personnelle de l'ordinateur)"
                                    ], 
                                    "flags": 0, 
                                    "guid": "M-Q;);m0}`", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que le droit à l'information?", 
                                        "Toute personne a le droit de savoir si elle est fichée et dans quels fichiers elle est recensée. Dans la mesure du possible, les personnes sont informées au moment de la collecte de leurs données."
                                    ], 
                                    "flags": 0, 
                                    "guid": "C~HKEtQL>y", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que le droit à l'opposition ?", 
                                        "Toute personne a la possibilité de s'opposer, pour des motifs légitimes, à figurer dans un fichier. Le droit d'opposition n'existe pas pour de nombreux fichiers du secteur public comme, par exemple, ceux des services fiscaux, des services de police, des services de la justice, de la sécurité sociale, etc.<div><br /></div><div><i>Le droit d'opposition s'exerce au moment de la collecte d'informations ou plus tard en s'adressant au responsable du fichier. Le droit d'opposition ne doit occasionner aucun frais à la personne qui l'exerce.</i></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "hU{=xOWJI7", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que le droit d'accès ?", 
                                        "<div>Toute personne justifiant de son identité a le droit d'interroger le responsable d’un&nbsp;fichier ou d’un traitement pour savoir s’il détient des informations sur elle, et en&nbsp;obtenir communication.</div><div><br /></div><div><i>Le droit d'accès s'exerce directement auprès de l'organisme qui détient des informations. La communication des données doit être fidèle au contenu de ce qui est enregistré dans l'ordinateur et effectuée en langage clair.</i></div><div><br /></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "AG^8vmT:Rj", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que le droit de rectification ?", 
                                        "Toute personne peut faire rectifier, compléter, actualiser, verrouiller ou effacer des informations qui la concernent lorsque elles ont été décelées des erreurs, des inexactitudes ou quand il y a présence de données dont la collecte, l'utilisation, la communication ou la conservation est interdite.<br /><br />Pour exercer son droit de rectification, il faut écrire à l'organisme qui détient les informations."
                                    ], 
                                    "flags": 0, 
                                    "guid": "lC4xH9Ofy)", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Quelles sont les obligations des utilisateurs de données personnelles?", 
                                        "<ul style=\"margin-left: 20px; \"><li>La collecte des données. (<i>il faut le consentement de la personne, données exactes, pas de données sensibles)<br /><br /></i></li><li>La finalité des traitements. (<i>préciser un objectif, cohérence par rapport à l'objectif, pas de reutilisation incompatible avec la finalité)<br /><br /></i></li><li>La durée de conservation des informations. (<i>il y a une date de\b \bpéremption, durée de conservation raisonnable</i>)<br /><br /></li><li>Sécurité des fichiers<i>. </i>(<i>adoption de mesures de sécur\bité physiques et logiques</i>)<br /><br /></li><li>Confidentialité des donées. (<i>seules les personnes autorisées peuvent accéder aux données personnelles).<br /><br /></i></li><li>L'information des personnes. (<i>Le responsable d'un fichier doit permettre aux personnes conrcernées par des informations qu'il détient d'exercer pleinement leurs droits</i>)<br /><br /></li><li>La déclaration des fichiers. (<i>tout traitement de données personnelles ayant des risques particuliers doivent être déclarés ou soumis à la CNIL</i>)</li></ul>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "LITNG6!G#6", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }, 
                                {
                                    "__type__": "Note", 
                                    "data": "", 
                                    "fields": [
                                        "Qu'est-ce que la loi européene dite RGDP ?", 
                                        "C'est une loi qui entre en application à compter du 25 mai 2018. <b>Il ne sera plus nécessaire de déclarer les fichiers contenant des données à caractère personnel. Les entreprises devront tenir un registre retraçant toutes les données personnelles gérées, les flux de ces données et les personnes autorisées à y accéder.</b><div><b><br /></b></div><div><b>La CNIL pourra prononcer des sanctions plus importantes basées sur le chiffre d'affaires mondial des entreprises qui ne respecteraient pas cette loi.</b></div>"
                                    ], 
                                    "flags": 0, 
                                    "guid": "nE{e3@4f3e", 
                                    "note_model_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
                                    "tags": [
                                        "TheorieDroit"
                                    ]
                                }
                            ]
                        }
                    ], 
                    "crowdanki_uuid": "dd6e900f-f6ba-11e7-b809-4851b7c6a3bc", 
                    "deck_config_uuid": "601edc1f-f6b8-11e7-ae12-4851b7c6a3bc", 
                    "desc": "", 
                    "dyn": 0, 
                    "extendNew": 10, 
                    "extendRev": 50, 
                    "media_files": [], 
                    "name": "Informatique", 
                    "notes": []
                }
            ], 
            "crowdanki_uuid": "2784d991-f6b9-11e7-83be-4851b7c6a3bc", 
            "deck_config_uuid": "601edc1f-f6b8-11e7-ae12-4851b7c6a3bc", 
            "desc": "", 
            "dyn": 0, 
            "extendNew": 10, 
            "extendRev": 50, 
            "media_files": [], 
            "name": "Français", 
            "notes": []
        }
    ], 
    "crowdanki_uuid": "2784b280-f6b9-11e7-b355-4851b7c6a3bc", 
    "deck_config_uuid": "601edc1f-f6b8-11e7-ae12-4851b7c6a3bc", 
    "deck_configurations": [
        {
            "__type__": "DeckConfig", 
            "autoplay": true, 
            "crowdanki_uuid": "a69dd698-6d5b-11e6-adf3-8c705a50cbf0", 
            "dyn": false, 
            "lapse": {
                "delays": [
                    10
                ], 
                "leechAction": 0, 
                "leechFails": 8, 
                "minInt": 1, 
                "mult": 0.0
            }, 
            "maxTaken": 60, 
            "name": "Default", 
            "new": {
                "bury": true, 
                "delays": [
                    1, 
                    10
                ], 
                "initialFactor": 2500, 
                "ints": [
                    1, 
                    4, 
                    7
                ], 
                "order": 1, 
                "perDay": 20, 
                "separate": true
            }, 
            "replayq": true, 
            "rev": {
                "bury": true, 
                "ease4": 1.3, 
                "fuzz": 0.05, 
                "ivlFct": 1.0, 
                "maxIvl": 36500, 
                "minSpace": 1, 
                "perDay": 100
            }, 
            "timer": 0
        }, 
        {
            "__type__": "DeckConfig", 
            "autoplay": true, 
            "crowdanki_uuid": "601edc1f-f6b8-11e7-ae12-4851b7c6a3bc", 
            "dyn": false, 
            "lapse": {
                "delays": [
                    10
                ], 
                "leechAction": 0, 
                "leechFails": 8, 
                "minInt": 1, 
                "mult": 0.0
            }, 
            "maxTaken": 60, 
            "name": "Default", 
            "new": {
                "bury": true, 
                "delays": [
                    1, 
                    10
                ], 
                "initialFactor": 2500, 
                "ints": [
                    1, 
                    4, 
                    7
                ], 
                "order": 1, 
                "perDay": 10, 
                "separate": true
            }, 
            "replayq": true, 
            "rev": {
                "bury": true, 
                "ease4": 1.3, 
                "fuzz": 0.05, 
                "ivlFct": 1.0, 
                "maxIvl": 36500, 
                "minSpace": 1, 
                "perDay": 100
            }, 
            "timer": 0
        }, 
        {
            "__type__": "DeckConfig", 
            "autoplay": true, 
            "crowdanki_uuid": "a69e3016-6d5b-11e6-adf3-8c705a50cbf0", 
            "dyn": false, 
            "lapse": {
                "delays": [
                    10
                ], 
                "leechAction": 0, 
                "leechFails": 8, 
                "minInt": 1, 
                "mult": 0
            }, 
            "maxTaken": 60, 
            "name": "Git", 
            "new": {
                "bury": true, 
                "delays": [
                    1, 
                    10
                ], 
                "initialFactor": 2500, 
                "ints": [
                    1, 
                    4, 
                    7
                ], 
                "order": 1, 
                "perDay": 20, 
                "separate": true
            }, 
            "replayq": true, 
            "rev": {
                "bury": true, 
                "ease4": 1.3, 
                "fuzz": 0.05, 
                "ivlFct": 1, 
                "maxIvl": 36500, 
                "minSpace": 1, 
                "perDay": 100
            }, 
            "timer": 0
        }, 
        {
            "__type__": "DeckConfig", 
            "autoplay": true, 
            "crowdanki_uuid": "62fe4040-f6b6-11e7-b0cd-4851b7c6a3bc", 
            "dyn": false, 
            "lapse": {
                "delays": [
                    10
                ], 
                "leechAction": 0, 
                "leechFails": 8, 
                "minInt": 1, 
                "mult": 0.0
            }, 
            "maxTaken": 60, 
            "name": "Urgent ", 
            "new": {
                "bury": true, 
                "delays": [
                    1, 
                    8, 
                    10
                ], 
                "initialFactor": 2500, 
                "ints": [
                    1, 
                    1
                ], 
                "order": 1, 
                "perDay": 30, 
                "separate": true
            }, 
            "replayq": true, 
            "rev": {
                "bury": true, 
                "ease4": 1.3, 
                "fuzz": 0.05, 
                "ivlFct": 1.0, 
                "maxIvl": 36500, 
                "minSpace": 1, 
                "perDay": 100
            }, 
            "timer": 1
        }
    ], 
    "desc": "", 
    "dyn": 0, 
    "extendNew": 10, 
    "extendRev": 50, 
    "media_files": [], 
    "name": "AnkiDecks", 
    "note_models": [
        {
            "__type__": "NoteModel", 
            "crowdanki_uuid": "b51658b0-f6ba-11e7-8da6-4851b7c6a3bc", 
            "css": ".card {\n font-family: arial;\n font-size: 20px;\n text-align: center;\n color: black;\n background-color: white;\n}", 
            "flds": [
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "Front", 
                    "ord": 0, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": false
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "Back", 
                    "ord": 1, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": false
                }
            ], 
            "latexPost": "\\end{document}", 
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n", 
            "name": "Basic (and reversed card)", 
            "req": [
                [
                    0, 
                    "all", 
                    [
                        0
                    ]
                ], 
                [
                    1, 
                    "all", 
                    [
                        1
                    ]
                ]
            ], 
            "sortf": 0, 
            "tags": [
                "Signaux"
            ], 
            "tmpls": [
                {
                    "afmt": "{{FrontSide}}\n\n<hr id=answer>\n\n{{Back}}", 
                    "bafmt": "", 
                    "bfont": "Arial", 
                    "bqfmt": "", 
                    "bsize": 12, 
                    "did": null, 
                    "name": "Card 1", 
                    "ord": 0, 
                    "qfmt": "{{Front}}"
                }, 
                {
                    "afmt": "{{FrontSide}}\n\n<hr id=answer>\n\n{{Front}}", 
                    "bafmt": "", 
                    "bfont": "Arial", 
                    "bqfmt": "", 
                    "bsize": 12, 
                    "did": null, 
                    "name": "Card 2", 
                    "ord": 1, 
                    "qfmt": "{{Back}}"
                }
            ], 
            "type": 0, 
            "vers": []
        }, 
        {
            "__type__": "NoteModel", 
            "crowdanki_uuid": "62fe4043-f6b6-11e7-a999-4851b7c6a3bc", 
            "css": ".card {\n font-family: arial;\n font-size: 20px;\n text-align: center;\n color: black;\n background-color: white;\n}", 
            "flds": [
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "Front", 
                    "ord": 0, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": false
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "Back", 
                    "ord": 1, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": false
                }
            ], 
            "latexPost": "\\end{document}", 
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n", 
            "name": "Basic", 
            "req": [
                [
                    0, 
                    "all", 
                    [
                        0
                    ]
                ]
            ], 
            "sortf": 0, 
            "tags": [
                "PHP", 
                "ProgWeb"
            ], 
            "tmpls": [
                {
                    "afmt": "{{FrontSide}}\n\n<hr id=answer>\n\n{{Back}}", 
                    "bafmt": "", 
                    "bfont": "Arial", 
                    "bqfmt": "", 
                    "bsize": 12, 
                    "did": null, 
                    "name": "Card 1", 
                    "ord": 0, 
                    "qfmt": "{{Front}}"
                }
            ], 
            "type": 0, 
            "vers": []
        }
    ], 
    "notes": []
}